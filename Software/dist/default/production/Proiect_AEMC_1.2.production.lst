

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue May 02 09:19:07 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	strings,global,class=STRING,delta=2,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	maintext,global,class=CODE,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    41                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    42                           	dabs	1,0x7E,2
    43     0000                     
    44                           ; Version 2.40
    45                           ; Generated 17/11/2021 GMT
    46                           ; 
    47                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution. Publication is not required when
    61                           ;        this file is used in an embedded application.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC16F887 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79     0000                     	;# 
    80     0001                     	;# 
    81     0002                     	;# 
    82     0003                     	;# 
    83     0004                     	;# 
    84     0005                     	;# 
    85     0006                     	;# 
    86     0007                     	;# 
    87     0008                     	;# 
    88     0009                     	;# 
    89     000A                     	;# 
    90     000B                     	;# 
    91     000C                     	;# 
    92     000D                     	;# 
    93     000E                     	;# 
    94     000E                     	;# 
    95     000F                     	;# 
    96     0010                     	;# 
    97     0011                     	;# 
    98     0012                     	;# 
    99     0013                     	;# 
   100     0014                     	;# 
   101     0015                     	;# 
   102     0015                     	;# 
   103     0016                     	;# 
   104     0017                     	;# 
   105     0018                     	;# 
   106     0019                     	;# 
   107     001A                     	;# 
   108     001B                     	;# 
   109     001B                     	;# 
   110     001C                     	;# 
   111     001D                     	;# 
   112     001E                     	;# 
   113     001F                     	;# 
   114     0081                     	;# 
   115     0085                     	;# 
   116     0086                     	;# 
   117     0087                     	;# 
   118     0088                     	;# 
   119     0089                     	;# 
   120     008C                     	;# 
   121     008D                     	;# 
   122     008E                     	;# 
   123     008F                     	;# 
   124     0090                     	;# 
   125     0091                     	;# 
   126     0092                     	;# 
   127     0093                     	;# 
   128     0093                     	;# 
   129     0093                     	;# 
   130     0094                     	;# 
   131     0095                     	;# 
   132     0096                     	;# 
   133     0097                     	;# 
   134     0098                     	;# 
   135     0099                     	;# 
   136     009A                     	;# 
   137     009B                     	;# 
   138     009C                     	;# 
   139     009D                     	;# 
   140     009E                     	;# 
   141     009F                     	;# 
   142     0105                     	;# 
   143     0107                     	;# 
   144     0108                     	;# 
   145     0109                     	;# 
   146     010C                     	;# 
   147     010C                     	;# 
   148     010D                     	;# 
   149     010E                     	;# 
   150     010F                     	;# 
   151     0185                     	;# 
   152     0187                     	;# 
   153     0188                     	;# 
   154     0189                     	;# 
   155     018C                     	;# 
   156     018D                     	;# 
   157     0000                     	;# 
   158     0001                     	;# 
   159     0002                     	;# 
   160     0003                     	;# 
   161     0004                     	;# 
   162     0005                     	;# 
   163     0006                     	;# 
   164     0007                     	;# 
   165     0008                     	;# 
   166     0009                     	;# 
   167     000A                     	;# 
   168     000B                     	;# 
   169     000C                     	;# 
   170     000D                     	;# 
   171     000E                     	;# 
   172     000E                     	;# 
   173     000F                     	;# 
   174     0010                     	;# 
   175     0011                     	;# 
   176     0012                     	;# 
   177     0013                     	;# 
   178     0014                     	;# 
   179     0015                     	;# 
   180     0015                     	;# 
   181     0016                     	;# 
   182     0017                     	;# 
   183     0018                     	;# 
   184     0019                     	;# 
   185     001A                     	;# 
   186     001B                     	;# 
   187     001B                     	;# 
   188     001C                     	;# 
   189     001D                     	;# 
   190     001E                     	;# 
   191     001F                     	;# 
   192     0081                     	;# 
   193     0085                     	;# 
   194     0086                     	;# 
   195     0087                     	;# 
   196     0088                     	;# 
   197     0089                     	;# 
   198     008C                     	;# 
   199     008D                     	;# 
   200     008E                     	;# 
   201     008F                     	;# 
   202     0090                     	;# 
   203     0091                     	;# 
   204     0092                     	;# 
   205     0093                     	;# 
   206     0093                     	;# 
   207     0093                     	;# 
   208     0094                     	;# 
   209     0095                     	;# 
   210     0096                     	;# 
   211     0097                     	;# 
   212     0098                     	;# 
   213     0099                     	;# 
   214     009A                     	;# 
   215     009B                     	;# 
   216     009C                     	;# 
   217     009D                     	;# 
   218     009E                     	;# 
   219     009F                     	;# 
   220     0105                     	;# 
   221     0107                     	;# 
   222     0108                     	;# 
   223     0109                     	;# 
   224     010C                     	;# 
   225     010C                     	;# 
   226     010D                     	;# 
   227     010E                     	;# 
   228     010F                     	;# 
   229     0185                     	;# 
   230     0187                     	;# 
   231     0188                     	;# 
   232     0189                     	;# 
   233     018C                     	;# 
   234     018D                     	;# 
   235     0000                     	;# 
   236     0001                     	;# 
   237     0002                     	;# 
   238     0003                     	;# 
   239     0004                     	;# 
   240     0005                     	;# 
   241     0006                     	;# 
   242     0007                     	;# 
   243     0008                     	;# 
   244     0009                     	;# 
   245     000A                     	;# 
   246     000B                     	;# 
   247     000C                     	;# 
   248     000D                     	;# 
   249     000E                     	;# 
   250     000E                     	;# 
   251     000F                     	;# 
   252     0010                     	;# 
   253     0011                     	;# 
   254     0012                     	;# 
   255     0013                     	;# 
   256     0014                     	;# 
   257     0015                     	;# 
   258     0015                     	;# 
   259     0016                     	;# 
   260     0017                     	;# 
   261     0018                     	;# 
   262     0019                     	;# 
   263     001A                     	;# 
   264     001B                     	;# 
   265     001B                     	;# 
   266     001C                     	;# 
   267     001D                     	;# 
   268     001E                     	;# 
   269     001F                     	;# 
   270     0081                     	;# 
   271     0085                     	;# 
   272     0086                     	;# 
   273     0087                     	;# 
   274     0088                     	;# 
   275     0089                     	;# 
   276     008C                     	;# 
   277     008D                     	;# 
   278     008E                     	;# 
   279     008F                     	;# 
   280     0090                     	;# 
   281     0091                     	;# 
   282     0092                     	;# 
   283     0093                     	;# 
   284     0093                     	;# 
   285     0093                     	;# 
   286     0094                     	;# 
   287     0095                     	;# 
   288     0096                     	;# 
   289     0097                     	;# 
   290     0098                     	;# 
   291     0099                     	;# 
   292     009A                     	;# 
   293     009B                     	;# 
   294     009C                     	;# 
   295     009D                     	;# 
   296     009E                     	;# 
   297     009F                     	;# 
   298     0105                     	;# 
   299     0107                     	;# 
   300     0108                     	;# 
   301     0109                     	;# 
   302     010C                     	;# 
   303     010C                     	;# 
   304     010D                     	;# 
   305     010E                     	;# 
   306     010F                     	;# 
   307     0185                     	;# 
   308     0187                     	;# 
   309     0188                     	;# 
   310     0189                     	;# 
   311     018C                     	;# 
   312     018D                     	;# 
   313     0000                     	;# 
   314     0001                     	;# 
   315     0002                     	;# 
   316     0003                     	;# 
   317     0004                     	;# 
   318     0005                     	;# 
   319     0006                     	;# 
   320     0007                     	;# 
   321     0008                     	;# 
   322     0009                     	;# 
   323     000A                     	;# 
   324     000B                     	;# 
   325     000C                     	;# 
   326     000D                     	;# 
   327     000E                     	;# 
   328     000E                     	;# 
   329     000F                     	;# 
   330     0010                     	;# 
   331     0011                     	;# 
   332     0012                     	;# 
   333     0013                     	;# 
   334     0014                     	;# 
   335     0015                     	;# 
   336     0015                     	;# 
   337     0016                     	;# 
   338     0017                     	;# 
   339     0018                     	;# 
   340     0019                     	;# 
   341     001A                     	;# 
   342     001B                     	;# 
   343     001B                     	;# 
   344     001C                     	;# 
   345     001D                     	;# 
   346     001E                     	;# 
   347     001F                     	;# 
   348     0081                     	;# 
   349     0085                     	;# 
   350     0086                     	;# 
   351     0087                     	;# 
   352     0088                     	;# 
   353     0089                     	;# 
   354     008C                     	;# 
   355     008D                     	;# 
   356     008E                     	;# 
   357     008F                     	;# 
   358     0090                     	;# 
   359     0091                     	;# 
   360     0092                     	;# 
   361     0093                     	;# 
   362     0093                     	;# 
   363     0093                     	;# 
   364     0094                     	;# 
   365     0095                     	;# 
   366     0096                     	;# 
   367     0097                     	;# 
   368     0098                     	;# 
   369     0099                     	;# 
   370     009A                     	;# 
   371     009B                     	;# 
   372     009C                     	;# 
   373     009D                     	;# 
   374     009E                     	;# 
   375     009F                     	;# 
   376     0105                     	;# 
   377     0107                     	;# 
   378     0108                     	;# 
   379     0109                     	;# 
   380     010C                     	;# 
   381     010C                     	;# 
   382     010D                     	;# 
   383     010E                     	;# 
   384     010F                     	;# 
   385     0185                     	;# 
   386     0187                     	;# 
   387     0188                     	;# 
   388     0189                     	;# 
   389     018C                     	;# 
   390     018D                     	;# 
   391     0000                     	;# 
   392     0001                     	;# 
   393     0002                     	;# 
   394     0003                     	;# 
   395     0004                     	;# 
   396     0005                     	;# 
   397     0006                     	;# 
   398     0007                     	;# 
   399     0008                     	;# 
   400     0009                     	;# 
   401     000A                     	;# 
   402     000B                     	;# 
   403     000C                     	;# 
   404     000D                     	;# 
   405     000E                     	;# 
   406     000E                     	;# 
   407     000F                     	;# 
   408     0010                     	;# 
   409     0011                     	;# 
   410     0012                     	;# 
   411     0013                     	;# 
   412     0014                     	;# 
   413     0015                     	;# 
   414     0015                     	;# 
   415     0016                     	;# 
   416     0017                     	;# 
   417     0018                     	;# 
   418     0019                     	;# 
   419     001A                     	;# 
   420     001B                     	;# 
   421     001B                     	;# 
   422     001C                     	;# 
   423     001D                     	;# 
   424     001E                     	;# 
   425     001F                     	;# 
   426     0081                     	;# 
   427     0085                     	;# 
   428     0086                     	;# 
   429     0087                     	;# 
   430     0088                     	;# 
   431     0089                     	;# 
   432     008C                     	;# 
   433     008D                     	;# 
   434     008E                     	;# 
   435     008F                     	;# 
   436     0090                     	;# 
   437     0091                     	;# 
   438     0092                     	;# 
   439     0093                     	;# 
   440     0093                     	;# 
   441     0093                     	;# 
   442     0094                     	;# 
   443     0095                     	;# 
   444     0096                     	;# 
   445     0097                     	;# 
   446     0098                     	;# 
   447     0099                     	;# 
   448     009A                     	;# 
   449     009B                     	;# 
   450     009C                     	;# 
   451     009D                     	;# 
   452     009E                     	;# 
   453     009F                     	;# 
   454     0105                     	;# 
   455     0107                     	;# 
   456     0108                     	;# 
   457     0109                     	;# 
   458     010C                     	;# 
   459     010C                     	;# 
   460     010D                     	;# 
   461     010E                     	;# 
   462     010F                     	;# 
   463     0185                     	;# 
   464     0187                     	;# 
   465     0188                     	;# 
   466     0189                     	;# 
   467     018C                     	;# 
   468     018D                     	;# 
   469                           
   470                           	psect	idataCOMMON
   471     01B3                     __pidataCOMMON:
   472                           
   473                           ;initializer for _backlight_state
   474     01B3  3408               	retlw	8
   475                           
   476                           	psect	idataBANK0
   477     0217                     __pidataBANK0:
   478                           
   479                           ;initializer for main@F1381
   480     0217  3453               	retlw	83
   481     0218  3400               	retlw	0
   482     0219  344D               	retlw	77
   483     021A  3400               	retlw	0
   484     021B  3454               	retlw	84
   485     021C  3400               	retlw	0
   486     021D  3457               	retlw	87
   487     021E  3400               	retlw	0
   488     021F  3474               	retlw	116
   489     0220  3400               	retlw	0
   490     0221  3446               	retlw	70
   491     0222  3400               	retlw	0
   492     0223  3473               	retlw	115
   493     0224  3400               	retlw	0
   494                           
   495                           	psect	nvCOMMON
   496     007C                     __pnvCOMMON:
   497     007C                     _i2c_add:
   498     007C                     	ds	1
   499     0006                     _PORTBbits	set	6
   500     0008                     _PORTDbits	set	8
   501     0013                     _SSPBUF	set	19
   502     0014                     _SSPCONbits	set	20
   503     0095                     _WPUB	set	149
   504     0081                     _OPTION_REG	set	129
   505     0086                     _TRISB	set	134
   506     0088                     _TRISD	set	136
   507     0087                     _TRISCbits	set	135
   508     008F                     _OSCCON	set	143
   509     0091                     _SSPCON2bits	set	145
   510     0093                     _SSPADD	set	147
   511     0094                     _SSPSTAT	set	148
   512     0091                     _SSPCON2	set	145
   513     048E                     _ACKSTAT	set	1166
   514     0189                     _ANSELH	set	393
   515                           
   516                           	psect	strings
   517     0003                     __pstrings:
   518     0003                     stringtab:
   519     0003                     __stringtab:
   520     0003                     stringcode:	
   521                           ;	String table - string pointers are 1 byte each
   522                           
   523     0003                     stringdir:
   524     0003  3000               	movlw	high stringdir
   525     0004  008A               	movwf	10
   526     0005  0804               	movf	4,w
   527     0006  0A84               	incf	4,f
   528     0007  0782               	addwf	2,f
   529     0008                     __stringbase:
   530     0008  3400               	retlw	0
   531     0009                     __end_of__stringtab:
   532     0009                     STR_1:
   533     0009  3449               	retlw	73	;'I'
   534     000A  346E               	retlw	110	;'n'
   535     000B  3469               	retlw	105	;'i'
   536     000C  3474               	retlw	116	;'t'
   537     000D  3469               	retlw	105	;'i'
   538     000E  3461               	retlw	97	;'a'
   539     000F  346C               	retlw	108	;'l'
   540     0010  3461               	retlw	97	;'a'
   541     0011  347A               	retlw	122	;'z'
   542     0012  3469               	retlw	105	;'i'
   543     0013  346E               	retlw	110	;'n'
   544     0014  3467               	retlw	103	;'g'
   545     0015  3400               	retlw	0
   546     0016                     STR_20:
   547     0016  3454               	retlw	84	;'T'
   548     0017  3472               	retlw	114	;'r'
   549     0018  3461               	retlw	97	;'a'
   550     0019  346E               	retlw	110	;'n'
   551     001A  3473               	retlw	115	;'s'
   552     001B  346D               	retlw	109	;'m'
   553     001C  3469               	retlw	105	;'i'
   554     001D  3473               	retlw	115	;'s'
   555     001E  3473               	retlw	115	;'s'
   556     001F  3469               	retlw	105	;'i'
   557     0020  346F               	retlw	111	;'o'
   558     0021  346E               	retlw	110	;'n'
   559     0022  3400               	retlw	0
   560     0023                     STR_19:
   561     0023  3445               	retlw	69	;'E'
   562     0024  3472               	retlw	114	;'r'
   563     0025  346F               	retlw	111	;'o'
   564     0026  3461               	retlw	97	;'a'
   565     0027  3472               	retlw	114	;'r'
   566     0028  3465               	retlw	101	;'e'
   567     0029  3421               	retlw	33	;'!'
   568     002A  3400               	retlw	0
   569     002B                     STR_16:
   570     002B  3444               	retlw	68	;'D'
   571     002C  3449               	retlw	73	;'I'
   572     002D  3447               	retlw	71	;'G'
   573     002E  3449               	retlw	73	;'I'
   574     002F  3454               	retlw	84	;'T'
   575     0030  3441               	retlw	65	;'A'
   576     0031  344C               	retlw	76	;'L'
   577     0032  3400               	retlw	0
   578     0033                     STR_2:
   579     0033  3454               	retlw	84	;'T'
   580     0034  3469               	retlw	105	;'i'
   581     0035  346D               	retlw	109	;'m'
   582     0036  3465               	retlw	101	;'e'
   583     0037  343A               	retlw	58	;':'
   584     0038  3420               	retlw	32	;' '
   585     0039  3400               	retlw	0
   586     003A                     STR_21:
   587     003A  3445               	retlw	69	;'E'
   588     003B  3472               	retlw	114	;'r'
   589     003C  3472               	retlw	114	;'r'
   590     003D  346F               	retlw	111	;'o'
   591     003E  3472               	retlw	114	;'r'
   592     003F  3421               	retlw	33	;'!'
   593     0040  3400               	retlw	0
   594     0041                     STR_5:
   595     0041  3444               	retlw	68	;'D'
   596     0042  3461               	retlw	97	;'a'
   597     0043  3474               	retlw	116	;'t'
   598     0044  3465               	retlw	101	;'e'
   599     0045  343A               	retlw	58	;':'
   600     0046  3400               	retlw	0
   601     0047                     STR_18:
   602     0047  3420               	retlw	32	;' '
   603     0048  3448               	retlw	72	;'H'
   604     0049  3455               	retlw	85	;'U'
   605     004A  344D               	retlw	77	;'M'
   606     004B  343D               	retlw	61	;'='
   607     004C  3400               	retlw	0
   608     004D                     STR_17:
   609     004D  3454               	retlw	84	;'T'
   610     004E  3445               	retlw	69	;'E'
   611     004F  344D               	retlw	77	;'M'
   612     0050  3450               	retlw	80	;'P'
   613     0051  343D               	retlw	61	;'='
   614     0052  3400               	retlw	0
   615     0053                     STR_15:
   616     0053  3445               	retlw	69	;'E'
   617     0054  3452               	retlw	82	;'R'
   618     0055  3452               	retlw	82	;'R'
   619     0056  3400               	retlw	0
   620     0057                     STR_11:
   621     0057  3457               	retlw	87	;'W'
   622     0058  3465               	retlw	101	;'e'
   623     0059  3464               	retlw	100	;'d'
   624     005A  3400               	retlw	0
   625     005B                     STR_10:
   626     005B  3454               	retlw	84	;'T'
   627     005C  3475               	retlw	117	;'u'
   628     005D  3465               	retlw	101	;'e'
   629     005E  3400               	retlw	0
   630     005F                     STR_13:
   631     005F  3446               	retlw	70	;'F'
   632     0060  3472               	retlw	114	;'r'
   633     0061  3469               	retlw	105	;'i'
   634     0062  3400               	retlw	0
   635     0063                     STR_9:
   636     0063  344D               	retlw	77	;'M'
   637     0064  346F               	retlw	111	;'o'
   638     0065  346E               	retlw	110	;'n'
   639     0066  3400               	retlw	0
   640     0067                     STR_8:
   641     0067  3453               	retlw	83	;'S'
   642     0068  3475               	retlw	117	;'u'
   643     0069  346E               	retlw	110	;'n'
   644     006A  3400               	retlw	0
   645     006B                     STR_14:
   646     006B  3453               	retlw	83	;'S'
   647     006C  3461               	retlw	97	;'a'
   648     006D  3474               	retlw	116	;'t'
   649     006E  3400               	retlw	0
   650     006F                     STR_12:
   651     006F  3454               	retlw	84	;'T'
   652     0070  3468               	retlw	104	;'h'
   653     0071  3475               	retlw	117	;'u'
   654     0072  3400               	retlw	0
   655     0073                     STR_6:
   656     0073  342F               	retlw	47	;'/'
   657     0074  3400               	retlw	0
   658     0073                     
   659                           	psect	cinit
   660     07DE                     start_initialization:	
   661                           ; #config settings
   662                           
   663     07DE                     __initialization:
   664                           
   665                           ; Initialize objects allocated to BANK0
   666     07DE  1383               	bcf	3,7	;select IRP bank0
   667     07DF  305D               	movlw	low (__pdataBANK0+14)
   668     07E0  00FD               	movwf	btemp+-1
   669     07E1  3002               	movlw	high __pidataBANK0
   670     07E2  00FE               	movwf	btemp
   671     07E3  3017               	movlw	low __pidataBANK0
   672     07E4  00FF               	movwf	btemp+1
   673     07E5  304F               	movlw	low __pdataBANK0
   674     07E6  0084               	movwf	4
   675     07E7  120A  118A  2229  120A  118A  	fcall	init_ram0
   676                           
   677                           ; Initialize objects allocated to COMMON
   678     07EC  120A  118A  21B3  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   679     07F1  00FD               	movwf	__pdataCOMMON& (0+127)
   680                           
   681                           ; Clear objects allocated to BANK0
   682     07F2  303F               	movlw	low __pbssBANK0
   683     07F3  0084               	movwf	4
   684     07F4  304F               	movlw	low (__pbssBANK0+16)
   685     07F5  120A  118A  21B9  120A  118A  	fcall	clear_ram0
   686                           
   687                           ; Clear objects allocated to COMMON
   688     07FA  01FA               	clrf	__pbssCOMMON& (0+127)
   689     07FB  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   690     07FC                     end_of_initialization:	
   691                           ;End of C runtime variable initialization code
   692                           
   693     07FC                     __end_of__initialization:
   694     07FC  0183               	clrf	3
   695     07FD  120A  118A  2CF3   	ljmp	_main	;jump to C main() function
   696                           
   697                           	psect	bssCOMMON
   698     007A                     __pbssCOMMON:
   699     007A                     _status_alarm:
   700     007A                     	ds	1
   701     007B                     _RS:
   702     007B                     	ds	1
   703                           
   704                           	psect	dataCOMMON
   705     007D                     __pdataCOMMON:
   706     007D                     _backlight_state:
   707     007D                     	ds	1
   708                           
   709                           	psect	bssBANK0
   710     003F                     __pbssBANK0:
   711     003F                     _year:
   712     003F                     	ds	2
   713     0041                     _month:
   714     0041                     	ds	2
   715     0043                     _date:
   716     0043                     	ds	2
   717     0045                     _day:
   718     0045                     	ds	2
   719     0047                     _hour:
   720     0047                     	ds	2
   721     0049                     _min:
   722     0049                     	ds	2
   723     004B                     _sec:
   724     004B                     	ds	2
   725     004D                     _check_bit:
   726     004D                     	ds	2
   727                           
   728                           	psect	dataBANK0
   729     004F                     __pdataBANK0:
   730     004F                     main@F1381:
   731     004F                     	ds	14
   732                           
   733                           	psect	inittext
   734     0225                     init_fetch0:	
   735                           ;	Called with low address in FSR and high address in W
   736                           
   737     0225  087E               	movf	btemp,w
   738     0226  008A               	movwf	10
   739     0227  087F               	movf	btemp+1,w
   740     0228  0082               	movwf	2
   741     0229                     init_ram0:	
   742                           ;Called with:
   743                           ;	high address of idata address in btemp 
   744                           ;	low address of idata address in btemp+1 
   745                           ;	low address of data in FSR
   746                           ;	high address + 1 of data in btemp-1
   747                           
   748     0229  120A  118A  2225  120A  118A  	fcall	init_fetch0
   749     022E  0080               	movwf	0
   750     022F  0A84               	incf	4,f
   751     0230  0804               	movf	4,w
   752     0231  067D               	xorwf	btemp+-1,w
   753     0232  1903               	btfsc	3,2
   754     0233  3400               	retlw	0
   755     0234  0AFF               	incf	btemp+1,f
   756     0235  1903               	btfsc	3,2
   757     0236  0AFE               	incf	btemp,f
   758     0237  2A29               	goto	init_ram0
   759                           
   760                           	psect	clrtext
   761     01B9                     clear_ram0:	
   762                           ;	Called with FSR containing the base address, and
   763                           ;	W with the last address+1
   764                           
   765     01B9  0064               	clrwdt	;clear the watchdog before getting into this loop
   766     01BA                     clrloop0:
   767     01BA  0180               	clrf	0	;clear RAM location pointed to by FSR
   768     01BB  0A84               	incf	4,f	;increment pointer
   769     01BC  0604               	xorwf	4,w	;XOR with final address
   770     01BD  1903               	btfsc	3,2	;have we reached the end yet?
   771     01BE  3400               	retlw	0	;all done for this memory range, return
   772     01BF  0604               	xorwf	4,w	;XOR again to restore value
   773     01C0  29BA               	goto	clrloop0	;do the next byte
   774                           
   775                           	psect	cstackCOMMON
   776     0070                     __pcstackCOMMON:
   777     0070                     ?_lcd_cmd:
   778     0070                     ?_rtc_readTime:	
   779                           ; 1 bytes @ 0x0
   780                           
   781     0070                     ?_rtc_readDate:	
   782                           ; 1 bytes @ 0x0
   783                           
   784     0070                     ?_rtc_convUpperNibble:	
   785                           ; 1 bytes @ 0x0
   786                           
   787     0070                     ??_rtc_convUpperNibble:	
   788                           ; 1 bytes @ 0x0
   789                           
   790     0070                     ?_rtc_convLowerNibble:	
   791                           ; 1 bytes @ 0x0
   792                           
   793     0070                     ??_rtc_convLowerNibble:	
   794                           ; 1 bytes @ 0x0
   795                           
   796     0070                     ?_DHT11_Start:	
   797                           ; 1 bytes @ 0x0
   798                           
   799     0070                     ??_DHT11_Start:	
   800                           ; 1 bytes @ 0x0
   801                           
   802     0070                     ?_DHT11_CheckResponse:	
   803                           ; 1 bytes @ 0x0
   804                           
   805     0070                     ??_DHT11_CheckResponse:	
   806                           ; 1 bytes @ 0x0
   807                           
   808     0070                     ?_DHT11_ReadData:	
   809                           ; 1 bytes @ 0x0
   810                           
   811     0070                     ??_DHT11_ReadData:	
   812                           ; 1 bytes @ 0x0
   813                           
   814     0070                     ?_i2c_masterInit:	
   815                           ; 1 bytes @ 0x0
   816                           
   817     0070                     ??_i2c_masterInit:	
   818                           ; 1 bytes @ 0x0
   819                           
   820     0070                     ?_i2c_masterWait:	
   821                           ; 1 bytes @ 0x0
   822                           
   823     0070                     ??_i2c_masterWait:	
   824                           ; 1 bytes @ 0x0
   825                           
   826     0070                     ?_i2c_masterStart:	
   827                           ; 1 bytes @ 0x0
   828                           
   829     0070                     ??_i2c_masterStart:	
   830                           ; 1 bytes @ 0x0
   831                           
   832     0070                     ?_i2c_masterRepeatedStart:	
   833                           ; 1 bytes @ 0x0
   834                           
   835     0070                     ??_i2c_masterRepeatedStart:	
   836                           ; 1 bytes @ 0x0
   837                           
   838     0070                     ?_i2c_masterStop:	
   839                           ; 1 bytes @ 0x0
   840                           
   841     0070                     ??_i2c_masterStop:	
   842                           ; 1 bytes @ 0x0
   843                           
   844     0070                     ?_i2c_masterWrite:	
   845                           ; 1 bytes @ 0x0
   846                           
   847     0070                     ??_i2c_masterWrite:	
   848                           ; 1 bytes @ 0x0
   849                           
   850     0070                     ?_i2c_readByte:	
   851                           ; 1 bytes @ 0x0
   852                           
   853     0070                     ??_i2c_readByte:	
   854                           ; 1 bytes @ 0x0
   855                           
   856     0070                     ?_lcd_init:	
   857                           ; 1 bytes @ 0x0
   858                           
   859     0070                     ?_io_expanderWrite:	
   860                           ; 1 bytes @ 0x0
   861                           
   862     0070                     ?_lcd_write4Bit:	
   863                           ; 1 bytes @ 0x0
   864                           
   865     0070                     ?_lcd_writeChar:	
   866                           ; 1 bytes @ 0x0
   867                           
   868     0070                     ?_lcd_writeString:	
   869                           ; 1 bytes @ 0x0
   870                           
   871     0070                     ?_lcd_clear:	
   872                           ; 1 bytes @ 0x0
   873                           
   874     0070                     ?_main:	
   875                           ; 1 bytes @ 0x0
   876                           
   877     0070                     i2c_masterWrite@data:	
   878                           ; 1 bytes @ 0x0
   879                           
   880     0070                     i2c_readByte@ack:	
   881                           ; 1 bytes @ 0x0
   882                           
   883     0070                     rtc_convLowerNibble@digit:	
   884                           ; 1 bytes @ 0x0
   885                           
   886                           
   887                           ; 1 bytes @ 0x0
   888     0070                     	ds	1
   889     0071                     ??_io_expanderWrite:
   890     0071                     i2c_readByte@incoming_data:	
   891                           ; 1 bytes @ 0x1
   892                           
   893     0071                     io_expanderWrite@data:	
   894                           ; 1 bytes @ 0x1
   895                           
   896     0071                     rtc_convUpperNibble@digit:	
   897                           ; 1 bytes @ 0x1
   898                           
   899                           
   900                           ; 1 bytes @ 0x1
   901     0071                     	ds	1
   902     0072                     ??_rtc_readTime:
   903     0072                     ??_rtc_readDate:	
   904                           ; 1 bytes @ 0x2
   905                           
   906     0072                     ??_lcd_write4Bit:	
   907                           ; 1 bytes @ 0x2
   908                           
   909     0072                     DHT11_ReadData@data:	
   910                           ; 1 bytes @ 0x2
   911                           
   912                           
   913                           ; 1 bytes @ 0x2
   914     0072                     	ds	1
   915     0073                     lcd_write4Bit@nibble:
   916     0073                     DHT11_ReadData@i:	
   917                           ; 1 bytes @ 0x3
   918                           
   919                           
   920                           ; 1 bytes @ 0x3
   921     0073                     	ds	1
   922     0074                     ??_lcd_cmd:
   923     0074                     ??_lcd_writeChar:	
   924                           ; 1 bytes @ 0x4
   925                           
   926     0074                     rtc_readTime@clock_address:	
   927                           ; 1 bytes @ 0x4
   928                           
   929     0074                     rtc_readDate@calendar_address:	
   930                           ; 1 bytes @ 0x4
   931                           
   932                           
   933                           ; 1 bytes @ 0x4
   934     0074                     	ds	1
   935     0075                     lcd_cmd@cmd:
   936     0075                     lcd_writeChar@data:	
   937                           ; 1 bytes @ 0x5
   938                           
   939                           
   940                           ; 1 bytes @ 0x5
   941     0075                     	ds	1
   942     0076                     ??_lcd_init:
   943     0076                     ??_lcd_writeString:	
   944                           ; 1 bytes @ 0x6
   945                           
   946     0076                     ?_lcd_setCursor:	
   947                           ; 1 bytes @ 0x6
   948                           
   949     0076                     ??_lcd_clear:	
   950                           ; 1 bytes @ 0x6
   951                           
   952     0076                     lcd_setCursor@col:	
   953                           ; 1 bytes @ 0x6
   954                           
   955     0076                     lcd_writeString@i:	
   956                           ; 1 bytes @ 0x6
   957                           
   958                           
   959                           ; 2 bytes @ 0x6
   960     0076                     	ds	1
   961     0077                     ??_lcd_setCursor:
   962     0077                     lcd_setCursor@row:	
   963                           ; 1 bytes @ 0x7
   964                           
   965                           
   966                           ; 1 bytes @ 0x7
   967     0077                     	ds	1
   968     0078                     lcd_writeString@str:
   969                           
   970                           ; 1 bytes @ 0x8
   971     0078                     	ds	1
   972     0079                     lcd_init@i2c_Add:
   973                           
   974                           ; 1 bytes @ 0x9
   975     0079                     	ds	1
   976                           
   977                           	psect	cstackBANK0
   978     0020                     __pcstackBANK0:
   979     0020                     ??_main:
   980                           
   981                           ; 1 bytes @ 0x0
   982     0020                     	ds	6
   983     0026                     main@week_days:
   984                           
   985                           ; 14 bytes @ 0x6
   986     0026                     	ds	14
   987     0034                     main@rh_octet_2:
   988                           
   989                           ; 2 bytes @ 0x14
   990     0034                     	ds	2
   991     0036                     main@temp_octet_2:
   992                           
   993                           ; 2 bytes @ 0x16
   994     0036                     	ds	2
   995     0038                     main@suma:
   996                           
   997                           ; 2 bytes @ 0x18
   998     0038                     	ds	2
   999     003A                     main@rh_octet_1:
  1000                           
  1001                           ; 2 bytes @ 0x1A
  1002     003A                     	ds	2
  1003     003C                     main@temp_octet_1:
  1004                           
  1005                           ; 2 bytes @ 0x1C
  1006     003C                     	ds	2
  1007     003E                     main@device_mode:
  1008                           
  1009                           ; 1 bytes @ 0x1E
  1010     003E                     	ds	1
  1011                           
  1012                           	psect	maintext
  1013     04F3                     __pmaintext:	
  1014 ;;
  1015 ;;Main: autosize = 0, tempsize = 6, incstack = 0, save=0
  1016 ;;
  1017 ;; *************** function _main *****************
  1018 ;; Defined at:
  1019 ;;		line 27 in file "main.c"
  1020 ;; Parameters:    Size  Location     Type
  1021 ;;		None
  1022 ;; Auto vars:     Size  Location     Type
  1023 ;;  temp_octet_1    2   28[BANK0 ] int 
  1024 ;;  rh_octet_1      2   26[BANK0 ] int 
  1025 ;;  suma            2   24[BANK0 ] int 
  1026 ;;  temp_octet_2    2   22[BANK0 ] int 
  1027 ;;  rh_octet_2      2   20[BANK0 ] int 
  1028 ;;  week_days      14    6[BANK0 ] int [7]
  1029 ;;  device_mode     1   30[BANK0 ] unsigned char 
  1030 ;; Return value:  Size  Location     Type
  1031 ;;                  1    wreg      void 
  1032 ;; Registers used:
  1033 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1034 ;; Tracked objects:
  1035 ;;		On entry : B00/0
  1036 ;;		On exit  : 0/0
  1037 ;;		Unchanged: 0/0
  1038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1039 ;;      Params:         0       0       0       0       0
  1040 ;;      Locals:         0      25       0       0       0
  1041 ;;      Temps:          0       6       0       0       0
  1042 ;;      Totals:         0      31       0       0       0
  1043 ;;Total ram usage:       31 bytes
  1044 ;; Hardware stack levels required when called: 6
  1045 ;; This function calls:
  1046 ;;		_DHT11_CheckResponse
  1047 ;;		_DHT11_ReadData
  1048 ;;		_DHT11_Start
  1049 ;;		_i2c_masterInit
  1050 ;;		_lcd_clear
  1051 ;;		_lcd_init
  1052 ;;		_lcd_setCursor
  1053 ;;		_lcd_writeChar
  1054 ;;		_lcd_writeString
  1055 ;;		_rtc_convLowerNibble
  1056 ;;		_rtc_convUpperNibble
  1057 ;;		_rtc_readDate
  1058 ;;		_rtc_readTime
  1059 ;; This function is called by:
  1060 ;;		Startup code after reset
  1061 ;; This function uses a non-reentrant model
  1062 ;;
  1063                           
  1064     04F3                     _main:	
  1065                           ;psect for function _main
  1066                           
  1067     04F3                     l1513:	
  1068                           ;incstack = 0
  1069                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1070                           
  1071                           
  1072                           ;main.c: 28:     unsigned char device_mode = 0;
  1073     04F3  1283               	bcf	3,5	;RP0=0, select bank0
  1074     04F4  1303               	bcf	3,6	;RP1=0, select bank0
  1075     04F5  01BE               	clrf	main@device_mode
  1076     04F6                     l1515:
  1077                           
  1078                           ;main.c: 29:     int week_days[7] = {'S', 'M', 'T', 'W', 't', 'F', 's'};
  1079     04F6  3026               	movlw	main@week_days& (0+255)
  1080     04F7  0084               	movwf	4
  1081     04F8  304F               	movlw	low main@F1381
  1082     04F9  00A0               	movwf	??_main
  1083     04FA  0804               	movf	4,w
  1084     04FB  00A1               	movwf	??_main+1
  1085     04FC  300E               	movlw	14
  1086     04FD  00A2               	movwf	??_main+2
  1087     04FE                     u420:
  1088     04FE  0820               	movf	??_main,w
  1089     04FF  0084               	movwf	4
  1090     0500  1383               	bcf	3,7	;select IRP bank0
  1091     0501  0800               	movf	0,w
  1092     0502  00A3               	movwf	??_main+3
  1093     0503  0AA0               	incf	??_main,f
  1094     0504  0821               	movf	??_main+1,w
  1095     0505  0084               	movwf	4
  1096     0506  0823               	movf	??_main+3,w
  1097     0507  0080               	movwf	0
  1098     0508  0AA1               	incf	??_main+1,f
  1099     0509  0BA2               	decfsz	??_main+2,f
  1100     050A  2CFE               	goto	u420
  1101     050B                     l1517:
  1102                           
  1103                           ;main.c: 31:     OSCCON |= 0x77;
  1104     050B  3077               	movlw	119
  1105     050C  00A0               	movwf	??_main
  1106     050D  0820               	movf	??_main,w
  1107     050E  1683               	bsf	3,5	;RP0=1, select bank1
  1108     050F  1303               	bcf	3,6	;RP1=0, select bank1
  1109     0510  048F               	iorwf	15,f	;volatile
  1110     0511                     l1519:
  1111                           
  1112                           ;main.c: 32:     TRISCbits.TRISC3 |= 1;
  1113     0511  1587               	bsf	7,3	;volatile
  1114     0512                     l1521:
  1115                           
  1116                           ;main.c: 33:     TRISCbits.TRISC4 |= 1;
  1117     0512  1607               	bsf	7,4	;volatile
  1118     0513                     l1523:
  1119                           
  1120                           ;main.c: 34:     i2c_masterInit();
  1121     0513  120A  118A  21F2  120A  118A  	fcall	_i2c_masterInit
  1122     0518                     l1525:
  1123                           
  1124                           ;main.c: 35:     lcd_init(0x4E);
  1125     0518  304E               	movlw	78
  1126     0519  120A  118A  245F  120A  118A  	fcall	_lcd_init
  1127     051E                     l1527:
  1128                           
  1129                           ;main.c: 37:     TRISD &= 0x00;
  1130     051E  1683               	bsf	3,5	;RP0=1, select bank1
  1131     051F  1303               	bcf	3,6	;RP1=0, select bank1
  1132     0520  0188               	clrf	8	;volatile
  1133     0521                     l1529:
  1134                           
  1135                           ;main.c: 38:     TRISB &= 0xFF;
  1136     0521  0806               	movf	6,w	;volatile
  1137     0522                     l1531:
  1138                           
  1139                           ;main.c: 39:     ANSELH &= 0x00;
  1140     0522  1683               	bsf	3,5	;RP0=1, select bank3
  1141     0523  1703               	bsf	3,6	;RP1=1, select bank3
  1142     0524  0189               	clrf	9	;volatile
  1143     0525                     l1533:
  1144                           
  1145                           ;main.c: 40:     PORTDbits.RD0 = 0;
  1146     0525  1283               	bcf	3,5	;RP0=0, select bank0
  1147     0526  1303               	bcf	3,6	;RP1=0, select bank0
  1148     0527  1008               	bcf	8,0	;volatile
  1149     0528                     l1535:
  1150                           
  1151                           ;main.c: 41:     OPTION_REG &= 0x00;
  1152     0528  1683               	bsf	3,5	;RP0=1, select bank1
  1153     0529  1303               	bcf	3,6	;RP1=0, select bank1
  1154     052A  0181               	clrf	1	;volatile
  1155     052B                     l1537:
  1156                           
  1157                           ;main.c: 42:     WPUB &= 0xFF;
  1158     052B  0815               	movf	21,w	;volatile
  1159     052C                     l1539:
  1160                           
  1161                           ;main.c: 44:     lcd_setCursor(1,2);
  1162     052C  3002               	movlw	2
  1163     052D  00F6               	movwf	lcd_setCursor@col
  1164     052E  3001               	movlw	1
  1165     052F  120A  118A  22BB  120A  118A  	fcall	_lcd_setCursor
  1166     0534                     l1541:
  1167                           
  1168                           ;main.c: 45:     lcd_writeString("Initialazing");
  1169     0534  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1170     0535  120A  118A  231D  120A  118A  	fcall	_lcd_writeString
  1171     053A                     l1543:
  1172                           
  1173                           ;main.c: 46:     _delay((unsigned long)((1000)*(16000000/4000.0)));
  1174     053A  3015               	movlw	21
  1175     053B  1283               	bcf	3,5	;RP0=0, select bank0
  1176     053C  1303               	bcf	3,6	;RP1=0, select bank0
  1177     053D  00A2               	movwf	??_main+2
  1178     053E  304B               	movlw	75
  1179     053F  00A1               	movwf	??_main+1
  1180     0540  30BD               	movlw	189
  1181     0541  00A0               	movwf	??_main
  1182     0542                     u507:
  1183     0542  0BA0               	decfsz	??_main,f
  1184     0543  2D42               	goto	u507
  1185     0544  0BA1               	decfsz	??_main+1,f
  1186     0545  2D42               	goto	u507
  1187     0546  0BA2               	decfsz	??_main+2,f
  1188     0547  2D42               	goto	u507
  1189     0548  2D49               	nop2
  1190     0549                     l1545:
  1191                           
  1192                           ;main.c: 48:     lcd_clear();
  1193     0549  120A  118A  21E7  120A  118A  	fcall	_lcd_clear
  1194     054E                     l1547:
  1195                           
  1196                           ;main.c: 49:     lcd_setCursor(1,1);
  1197     054E  01F6               	clrf	lcd_setCursor@col
  1198     054F  0AF6               	incf	lcd_setCursor@col,f
  1199     0550  3001               	movlw	1
  1200     0551  120A  118A  22BB  120A  118A  	fcall	_lcd_setCursor
  1201     0556                     l1549:
  1202                           
  1203                           ;main.c: 52:         if(PORTBbits.RB1 == 0){
  1204     0556  1283               	bcf	3,5	;RP0=0, select bank0
  1205     0557  1303               	bcf	3,6	;RP1=0, select bank0
  1206     0558  1886               	btfsc	6,1	;volatile
  1207     0559  2D5B               	goto	u431
  1208     055A  2D5C               	goto	u430
  1209     055B                     u431:
  1210     055B  2D72               	goto	l1561
  1211     055C                     u430:
  1212     055C                     l166:
  1213     055C  1C86               	btfss	6,1	;volatile
  1214     055D  2D5F               	goto	u441
  1215     055E  2D60               	goto	u440
  1216     055F                     u441:
  1217     055F  2D5C               	goto	l166
  1218     0560                     u440:
  1219     0560                     l1553:
  1220                           
  1221                           ;main.c: 54:             lcd_clear();
  1222     0560  120A  118A  21E7  120A  118A  	fcall	_lcd_clear
  1223     0565                     l1555:
  1224                           
  1225                           ;main.c: 55:             if (device_mode == 2) device_mode = 0;
  1226     0565  3002               	movlw	2
  1227     0566  1283               	bcf	3,5	;RP0=0, select bank0
  1228     0567  1303               	bcf	3,6	;RP1=0, select bank0
  1229     0568  063E               	xorwf	main@device_mode,w
  1230     0569  1D03               	btfss	3,2
  1231     056A  2D6C               	goto	u451
  1232     056B  2D6D               	goto	u450
  1233     056C                     u451:
  1234     056C  2D6E               	goto	l1559
  1235     056D                     u450:
  1236     056D                     l1557:
  1237     056D  01BE               	clrf	main@device_mode
  1238     056E                     l1559:
  1239                           
  1240                           ;main.c: 56:             device_mode++;
  1241     056E  3001               	movlw	1
  1242     056F  00A0               	movwf	??_main
  1243     0570  0820               	movf	??_main,w
  1244     0571  07BE               	addwf	main@device_mode,f
  1245     0572                     l1561:
  1246                           
  1247                           ;main.c: 59:         if (device_mode == 0){
  1248     0572  083E               	movf	main@device_mode,w
  1249     0573  1D03               	btfss	3,2
  1250     0574  2D76               	goto	u461
  1251     0575  2D77               	goto	u460
  1252     0576                     u461:
  1253     0576  2ED9               	goto	l1611
  1254     0577                     u460:
  1255     0577                     l1563:
  1256                           
  1257                           ;main.c: 60:             rtc_readTime(0x00);
  1258     0577  3000               	movlw	0
  1259     0578  120A  118A  2385  120A  118A  	fcall	_rtc_readTime
  1260                           
  1261                           ;main.c: 61:             rtc_readTime(0x01);
  1262     057D  3001               	movlw	1
  1263     057E  120A  118A  2385  120A  118A  	fcall	_rtc_readTime
  1264                           
  1265                           ;main.c: 62:             rtc_readTime(0x02);
  1266     0583  3002               	movlw	2
  1267     0584  120A  118A  2385  120A  118A  	fcall	_rtc_readTime
  1268                           
  1269                           ;main.c: 63:             rtc_readDate(0x03);
  1270     0589  3003               	movlw	3
  1271     058A  120A  118A  23E9  120A  118A  	fcall	_rtc_readDate
  1272                           
  1273                           ;main.c: 64:             rtc_readDate(0x04);
  1274     058F  3004               	movlw	4
  1275     0590  120A  118A  23E9  120A  118A  	fcall	_rtc_readDate
  1276                           
  1277                           ;main.c: 65:             rtc_readDate(0x05);
  1278     0595  3005               	movlw	5
  1279     0596  120A  118A  23E9  120A  118A  	fcall	_rtc_readDate
  1280                           
  1281                           ;main.c: 66:             rtc_readDate(0x06);
  1282     059B  3006               	movlw	6
  1283     059C  120A  118A  23E9  120A  118A  	fcall	_rtc_readDate
  1284     05A1                     l1565:
  1285                           
  1286                           ;main.c: 69:             lcd_setCursor(1,1);
  1287     05A1  01F6               	clrf	lcd_setCursor@col
  1288     05A2  0AF6               	incf	lcd_setCursor@col,f
  1289     05A3  3001               	movlw	1
  1290     05A4  120A  118A  22BB  120A  118A  	fcall	_lcd_setCursor
  1291     05A9                     l1567:
  1292                           
  1293                           ;main.c: 70:             lcd_writeString("Time: ");
  1294     05A9  302B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1295     05AA  120A  118A  231D  120A  118A  	fcall	_lcd_writeString
  1296                           
  1297                           ;main.c: 71:             lcd_writeChar((char)rtc_convUpperNibble(hour));
  1298     05AF  1283               	bcf	3,5	;RP0=0, select bank0
  1299     05B0  1303               	bcf	3,6	;RP1=0, select bank0
  1300     05B1  0847               	movf	_hour,w
  1301     05B2  120A  118A  21FE  120A  118A  	fcall	_rtc_convUpperNibble
  1302     05B7  120A  118A  2284  120A  118A  	fcall	_lcd_writeChar
  1303                           
  1304                           ;main.c: 72:             lcd_writeChar((char)rtc_convLowerNibble(hour));
  1305     05BC  1283               	bcf	3,5	;RP0=0, select bank0
  1306     05BD  1303               	bcf	3,6	;RP1=0, select bank0
  1307     05BE  0847               	movf	_hour,w
  1308     05BF  120A  118A  21B4  120A  118A  	fcall	_rtc_convLowerNibble
  1309     05C4  120A  118A  2284  120A  118A  	fcall	_lcd_writeChar
  1310     05C9                     l1569:
  1311                           
  1312                           ;main.c: 73:             lcd_writeString(":");
  1313     05C9  303D               	movlw	(low (((STR_5+4)-__stringbase)| (0+32768)))& (0+255)
  1314     05CA  120A  118A  231D  120A  118A  	fcall	_lcd_writeString
  1315     05CF                     l1571:
  1316                           
  1317                           ;main.c: 74:             lcd_writeChar((char)rtc_convUpperNibble(min));
  1318     05CF  1283               	bcf	3,5	;RP0=0, select bank0
  1319     05D0  1303               	bcf	3,6	;RP1=0, select bank0
  1320     05D1  0849               	movf	_min,w
  1321     05D2  120A  118A  21FE  120A  118A  	fcall	_rtc_convUpperNibble
  1322     05D7  120A  118A  2284  120A  118A  	fcall	_lcd_writeChar
  1323     05DC                     l1573:
  1324                           
  1325                           ;main.c: 75:             lcd_writeChar((char)rtc_convLowerNibble(min));
  1326     05DC  1283               	bcf	3,5	;RP0=0, select bank0
  1327     05DD  1303               	bcf	3,6	;RP1=0, select bank0
  1328     05DE  0849               	movf	_min,w
  1329     05DF  120A  118A  21B4  120A  118A  	fcall	_rtc_convLowerNibble
  1330     05E4  120A  118A  2284  120A  118A  	fcall	_lcd_writeChar
  1331     05E9                     l1575:
  1332                           
  1333                           ;main.c: 76:             lcd_writeString(":");
  1334     05E9  303D               	movlw	(low (((STR_5+4)-__stringbase)| (0+32768)))& (0+255)
  1335     05EA  120A  118A  231D  120A  118A  	fcall	_lcd_writeString
  1336                           
  1337                           ;main.c: 77:             lcd_writeChar((char)rtc_convUpperNibble(sec));
  1338     05EF  1283               	bcf	3,5	;RP0=0, select bank0
  1339     05F0  1303               	bcf	3,6	;RP1=0, select bank0
  1340     05F1  084B               	movf	_sec,w
  1341     05F2  120A  118A  21FE  120A  118A  	fcall	_rtc_convUpperNibble
  1342     05F7  120A  118A  2284  120A  118A  	fcall	_lcd_writeChar
  1343                           
  1344                           ;main.c: 78:             lcd_writeChar((char)rtc_convLowerNibble(sec));
  1345     05FC  1283               	bcf	3,5	;RP0=0, select bank0
  1346     05FD  1303               	bcf	3,6	;RP1=0, select bank0
  1347     05FE  084B               	movf	_sec,w
  1348     05FF  120A  118A  21B4  120A  118A  	fcall	_rtc_convLowerNibble
  1349     0604  120A  118A  2284  120A  118A  	fcall	_lcd_writeChar
  1350                           
  1351                           ;main.c: 80:             lcd_setCursor(2,1);
  1352     0609  01F6               	clrf	lcd_setCursor@col
  1353     060A  0AF6               	incf	lcd_setCursor@col,f
  1354     060B  3002               	movlw	2
  1355     060C  120A  118A  22BB  120A  118A  	fcall	_lcd_setCursor
  1356     0611                     l1577:
  1357                           
  1358                           ;main.c: 81:             lcd_writeString("Date:");
  1359     0611  3039               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1360     0612  120A  118A  231D  120A  118A  	fcall	_lcd_writeString
  1361     0617                     l1579:
  1362                           
  1363                           ;main.c: 82:             lcd_writeChar((char)rtc_convUpperNibble(date));
  1364     0617  1283               	bcf	3,5	;RP0=0, select bank0
  1365     0618  1303               	bcf	3,6	;RP1=0, select bank0
  1366     0619  0843               	movf	_date,w
  1367     061A  120A  118A  21FE  120A  118A  	fcall	_rtc_convUpperNibble
  1368     061F  120A  118A  2284  120A  118A  	fcall	_lcd_writeChar
  1369     0624                     l1581:
  1370                           
  1371                           ;main.c: 83:             lcd_writeChar((char)rtc_convLowerNibble(date));
  1372     0624  1283               	bcf	3,5	;RP0=0, select bank0
  1373     0625  1303               	bcf	3,6	;RP1=0, select bank0
  1374     0626  0843               	movf	_date,w
  1375     0627  120A  118A  21B4  120A  118A  	fcall	_rtc_convLowerNibble
  1376     062C  120A  118A  2284  120A  118A  	fcall	_lcd_writeChar
  1377     0631                     l1583:
  1378                           
  1379                           ;main.c: 84:             lcd_writeString("/");
  1380     0631  306B               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1381     0632  120A  118A  231D  120A  118A  	fcall	_lcd_writeString
  1382                           
  1383                           ;main.c: 85:             lcd_writeChar((char)rtc_convUpperNibble(month));
  1384     0637  1283               	bcf	3,5	;RP0=0, select bank0
  1385     0638  1303               	bcf	3,6	;RP1=0, select bank0
  1386     0639  0841               	movf	_month,w
  1387     063A  120A  118A  21FE  120A  118A  	fcall	_rtc_convUpperNibble
  1388     063F  120A  118A  2284  120A  118A  	fcall	_lcd_writeChar
  1389                           
  1390                           ;main.c: 86:             lcd_writeChar((char)rtc_convLowerNibble(month));
  1391     0644  1283               	bcf	3,5	;RP0=0, select bank0
  1392     0645  1303               	bcf	3,6	;RP1=0, select bank0
  1393     0646  0841               	movf	_month,w
  1394     0647  120A  118A  21B4  120A  118A  	fcall	_rtc_convLowerNibble
  1395     064C  120A  118A  2284  120A  118A  	fcall	_lcd_writeChar
  1396     0651                     l1585:
  1397                           
  1398                           ;main.c: 87:             lcd_writeString("/");
  1399     0651  306B               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1400     0652  120A  118A  231D  120A  118A  	fcall	_lcd_writeString
  1401     0657                     l1587:
  1402                           
  1403                           ;main.c: 88:             lcd_writeChar((char)rtc_convUpperNibble(year));
  1404     0657  1283               	bcf	3,5	;RP0=0, select bank0
  1405     0658  1303               	bcf	3,6	;RP1=0, select bank0
  1406     0659  083F               	movf	_year,w
  1407     065A  120A  118A  21FE  120A  118A  	fcall	_rtc_convUpperNibble
  1408     065F  120A  118A  2284  120A  118A  	fcall	_lcd_writeChar
  1409     0664                     l1589:
  1410                           
  1411                           ;main.c: 89:             lcd_writeChar((char)rtc_convLowerNibble(year));
  1412     0664  1283               	bcf	3,5	;RP0=0, select bank0
  1413     0665  1303               	bcf	3,6	;RP1=0, select bank0
  1414     0666  083F               	movf	_year,w
  1415     0667  120A  118A  21B4  120A  118A  	fcall	_rtc_convLowerNibble
  1416     066C  120A  118A  2284  120A  118A  	fcall	_lcd_writeChar
  1417                           
  1418                           ;main.c: 92:             switch(week_days[--day]){
  1419     0671  2EAA               	goto	l1609
  1420     0672                     l1591:
  1421                           
  1422                           ;main.c: 94:                     lcd_writeString("Sun");
  1423     0672  305F               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1424     0673  120A  118A  231D  120A  118A  	fcall	_lcd_writeString
  1425                           
  1426                           ;main.c: 95:                     break;
  1427     0678  2D56               	goto	l1549
  1428     0679                     l1593:
  1429                           
  1430                           ;main.c: 97:                     lcd_writeString("Mon");
  1431     0679  305B               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1432     067A  120A  118A  231D  120A  118A  	fcall	_lcd_writeString
  1433                           
  1434                           ;main.c: 98:                     break;
  1435     067F  2D56               	goto	l1549
  1436     0680                     l1595:
  1437                           
  1438                           ;main.c: 100:                     lcd_writeString("Tue");
  1439     0680  3053               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  1440     0681  120A  118A  231D  120A  118A  	fcall	_lcd_writeString
  1441                           
  1442                           ;main.c: 101:                     break;
  1443     0686  2D56               	goto	l1549
  1444     0687                     l1597:
  1445                           
  1446                           ;main.c: 103:                     lcd_writeString("Wed");
  1447     0687  304F               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  1448     0688  120A  118A  231D  120A  118A  	fcall	_lcd_writeString
  1449                           
  1450                           ;main.c: 104:                     break;
  1451     068D  2D56               	goto	l1549
  1452     068E                     l1599:
  1453                           
  1454                           ;main.c: 106:                     lcd_writeString("Thu");
  1455     068E  3067               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  1456     068F  120A  118A  231D  120A  118A  	fcall	_lcd_writeString
  1457                           
  1458                           ;main.c: 107:                     break;
  1459     0694  2D56               	goto	l1549
  1460     0695                     l1601:
  1461                           
  1462                           ;main.c: 109:                     lcd_writeString("Fri");
  1463     0695  3057               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  1464     0696  120A  118A  231D  120A  118A  	fcall	_lcd_writeString
  1465                           
  1466                           ;main.c: 110:                     break;
  1467     069B  2D56               	goto	l1549
  1468     069C                     l1603:
  1469                           
  1470                           ;main.c: 112:                     lcd_writeString("Sat");
  1471     069C  3063               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  1472     069D  120A  118A  231D  120A  118A  	fcall	_lcd_writeString
  1473                           
  1474                           ;main.c: 113:                     break;
  1475     06A2  2D56               	goto	l1549
  1476     06A3                     l1605:
  1477                           
  1478                           ;main.c: 115:                     lcd_writeString("ERR");
  1479     06A3  304B               	movlw	(low ((STR_15-__stringbase)| (0+32768)))& (0+255)
  1480     06A4  120A  118A  231D  120A  118A  	fcall	_lcd_writeString
  1481                           
  1482                           ;main.c: 116:                     break;
  1483     06A9  2D56               	goto	l1549
  1484     06AA                     l1609:
  1485     06AA  30FF               	movlw	255
  1486     06AB  1283               	bcf	3,5	;RP0=0, select bank0
  1487     06AC  1303               	bcf	3,6	;RP1=0, select bank0
  1488     06AD  07C5               	addwf	_day,f
  1489     06AE  1803               	skipnc
  1490     06AF  0AC6               	incf	_day+1,f
  1491     06B0  30FF               	movlw	255
  1492     06B1  07C6               	addwf	_day+1,f
  1493     06B2  0845               	movf	_day,w
  1494     06B3  00A0               	movwf	??_main
  1495     06B4  0720               	addwf	??_main,w
  1496     06B5  3E26               	addlw	(low (main@week_days| 0))& (0+255)
  1497     06B6  0084               	movwf	4
  1498     06B7  1383               	bcf	3,7	;select IRP bank0
  1499     06B8  0800               	movf	0,w
  1500     06B9  00A1               	movwf	??_main+1
  1501     06BA  0A84               	incf	4,f
  1502     06BB  0800               	movf	0,w
  1503     06BC  00A2               	movwf	??_main+2
  1504                           
  1505                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1506                           ; Switch size 1, requested type "simple"
  1507                           ; Number of cases is 1, Range of values is 0 to 0
  1508                           ; switch strategies available:
  1509                           ; Name         Instructions Cycles
  1510                           ; simple_byte            4     3 (average)
  1511                           ; direct_byte           11     8 (fixed)
  1512                           ; jumptable            260     6 (fixed)
  1513                           ;	Chosen strategy is simple_byte
  1514     06BD  0822               	movf	??_main+2,w
  1515     06BE  3A00               	xorlw	0	; case 0
  1516     06BF  1903               	skipnz
  1517     06C0  2EC2               	goto	l1721
  1518     06C1  2EA3               	goto	l1605
  1519     06C2                     l1721:
  1520                           
  1521                           ; Switch size 1, requested type "simple"
  1522                           ; Number of cases is 7, Range of values is 70 to 116
  1523                           ; switch strategies available:
  1524                           ; Name         Instructions Cycles
  1525                           ; simple_byte           22    12 (average)
  1526                           ; direct_byte          152    11 (fixed)
  1527                           ; jumptable            263     9 (fixed)
  1528                           ;	Chosen strategy is simple_byte
  1529     06C2  0821               	movf	??_main+1,w
  1530     06C3  3A46               	xorlw	70	; case 70
  1531     06C4  1903               	skipnz
  1532     06C5  2E95               	goto	l1601
  1533     06C6  3A0B               	xorlw	11	; case 77
  1534     06C7  1903               	skipnz
  1535     06C8  2E79               	goto	l1593
  1536     06C9  3A1E               	xorlw	30	; case 83
  1537     06CA  1903               	skipnz
  1538     06CB  2E72               	goto	l1591
  1539     06CC  3A07               	xorlw	7	; case 84
  1540     06CD  1903               	skipnz
  1541     06CE  2E80               	goto	l1595
  1542     06CF  3A03               	xorlw	3	; case 87
  1543     06D0  1903               	skipnz
  1544     06D1  2E87               	goto	l1597
  1545     06D2  3A24               	xorlw	36	; case 115
  1546     06D3  1903               	skipnz
  1547     06D4  2E9C               	goto	l1603
  1548     06D5  3A07               	xorlw	7	; case 116
  1549     06D6  1903               	skipnz
  1550     06D7  2E8E               	goto	l1599
  1551     06D8  2EA3               	goto	l1605
  1552     06D9                     l1611:
  1553     06D9  033E               	decf	main@device_mode,w
  1554     06DA  1D03               	btfss	3,2
  1555     06DB  2EDD               	goto	u471
  1556     06DC  2EDE               	goto	u470
  1557     06DD                     u471:
  1558     06DD  2D56               	goto	l1549
  1559     06DE                     u470:
  1560     06DE                     l1613:
  1561                           
  1562                           ;main.c: 120:             DHT11_Start();
  1563     06DE  120A  118A  229F  120A  118A  	fcall	_DHT11_Start
  1564                           
  1565                           ;main.c: 121:             DHT11_CheckResponse();
  1566     06E3  120A  118A  22D7  120A  118A  	fcall	_DHT11_CheckResponse
  1567     06E8                     l1615:
  1568                           
  1569                           ;main.c: 122:             if(check_bit == 1){
  1570     06E8  1283               	bcf	3,5	;RP0=0, select bank0
  1571     06E9  1303               	bcf	3,6	;RP1=0, select bank0
  1572     06EA  034D               	decf	_check_bit,w
  1573     06EB  044E               	iorwf	_check_bit+1,w
  1574     06EC  1D03               	btfss	3,2
  1575     06ED  2EEF               	goto	u481
  1576     06EE  2EF0               	goto	u480
  1577     06EF                     u481:
  1578     06EF  2FBE               	goto	l1639
  1579     06F0                     u480:
  1580     06F0                     l1617:
  1581                           
  1582                           ;main.c: 123:                 int rh_octet_1 = DHT11_ReadData();
  1583     06F0  120A  118A  2342  120A  118A  	fcall	_DHT11_ReadData
  1584     06F5  1283               	bcf	3,5	;RP0=0, select bank0
  1585     06F6  1303               	bcf	3,6	;RP1=0, select bank0
  1586     06F7  00A0               	movwf	??_main
  1587     06F8  01A1               	clrf	??_main+1
  1588     06F9  0820               	movf	??_main,w
  1589     06FA  00BA               	movwf	main@rh_octet_1
  1590     06FB  0821               	movf	??_main+1,w
  1591     06FC  00BB               	movwf	main@rh_octet_1+1
  1592                           
  1593                           ;main.c: 124:                 int rh_octet_2 = DHT11_ReadData();
  1594     06FD  120A  118A  2342  120A  118A  	fcall	_DHT11_ReadData
  1595     0702  1283               	bcf	3,5	;RP0=0, select bank0
  1596     0703  1303               	bcf	3,6	;RP1=0, select bank0
  1597     0704  00A0               	movwf	??_main
  1598     0705  01A1               	clrf	??_main+1
  1599     0706  0820               	movf	??_main,w
  1600     0707  00B4               	movwf	main@rh_octet_2
  1601     0708  0821               	movf	??_main+1,w
  1602     0709  00B5               	movwf	main@rh_octet_2+1
  1603                           
  1604                           ;main.c: 125:                 int temp_octet_1 = DHT11_ReadData();
  1605     070A  120A  118A  2342  120A  118A  	fcall	_DHT11_ReadData
  1606     070F  1283               	bcf	3,5	;RP0=0, select bank0
  1607     0710  1303               	bcf	3,6	;RP1=0, select bank0
  1608     0711  00A0               	movwf	??_main
  1609     0712  01A1               	clrf	??_main+1
  1610     0713  0820               	movf	??_main,w
  1611     0714  00BC               	movwf	main@temp_octet_1
  1612     0715  0821               	movf	??_main+1,w
  1613     0716  00BD               	movwf	main@temp_octet_1+1
  1614                           
  1615                           ;main.c: 126:                 int temp_octet_2 = DHT11_ReadData();
  1616     0717  120A  118A  2342  120A  118A  	fcall	_DHT11_ReadData
  1617     071C  1283               	bcf	3,5	;RP0=0, select bank0
  1618     071D  1303               	bcf	3,6	;RP1=0, select bank0
  1619     071E  00A0               	movwf	??_main
  1620     071F  01A1               	clrf	??_main+1
  1621     0720  0820               	movf	??_main,w
  1622     0721  00B6               	movwf	main@temp_octet_2
  1623     0722  0821               	movf	??_main+1,w
  1624     0723  00B7               	movwf	main@temp_octet_2+1
  1625                           
  1626                           ;main.c: 127:                 int suma = DHT11_ReadData();
  1627     0724  120A  118A  2342  120A  118A  	fcall	_DHT11_ReadData
  1628     0729  1283               	bcf	3,5	;RP0=0, select bank0
  1629     072A  1303               	bcf	3,6	;RP1=0, select bank0
  1630     072B  00A0               	movwf	??_main
  1631     072C  01A1               	clrf	??_main+1
  1632     072D  0820               	movf	??_main,w
  1633     072E  00B8               	movwf	main@suma
  1634     072F  0821               	movf	??_main+1,w
  1635     0730  00B9               	movwf	main@suma+1
  1636     0731                     l1619:
  1637                           
  1638                           ;main.c: 128:                 if(suma == (rh_octet_1 + rh_octet_2 + temp_octet_1 + temp_
      +                          octet_2)){
  1639     0731  0834               	movf	main@rh_octet_2,w
  1640     0732  073A               	addwf	main@rh_octet_1,w
  1641     0733  00A0               	movwf	??_main
  1642     0734  0835               	movf	main@rh_octet_2+1,w
  1643     0735  1803               	skipnc
  1644     0736  0A35               	incf	main@rh_octet_2+1,w
  1645     0737  073B               	addwf	main@rh_octet_1+1,w
  1646     0738  00A1               	movwf	??_main+1
  1647     0739  083C               	movf	main@temp_octet_1,w
  1648     073A  0720               	addwf	??_main,w
  1649     073B  00A2               	movwf	??_main+2
  1650     073C  083D               	movf	main@temp_octet_1+1,w
  1651     073D  1803               	skipnc
  1652     073E  0A3D               	incf	main@temp_octet_1+1,w
  1653     073F  0721               	addwf	??_main+1,w
  1654     0740  00A3               	movwf	??_main+3
  1655     0741  0836               	movf	main@temp_octet_2,w
  1656     0742  0722               	addwf	??_main+2,w
  1657     0743  00A4               	movwf	??_main+4
  1658     0744  0837               	movf	main@temp_octet_2+1,w
  1659     0745  1803               	skipnc
  1660     0746  0A37               	incf	main@temp_octet_2+1,w
  1661     0747  0723               	addwf	??_main+3,w
  1662     0748  00A5               	movwf	??_main+5
  1663     0749  0839               	movf	main@suma+1,w
  1664     074A  0625               	xorwf	??_main+5,w
  1665     074B  1D03               	skipz
  1666     074C  2F4F               	goto	u495
  1667     074D  0838               	movf	main@suma,w
  1668     074E  0624               	xorwf	??_main+4,w
  1669     074F                     u495:
  1670     074F  1D03               	skipz
  1671     0750  2F52               	goto	u491
  1672     0751  2F53               	goto	u490
  1673     0752                     u491:
  1674     0752  2FAF               	goto	l1635
  1675     0753                     u490:
  1676     0753                     l1621:
  1677                           
  1678                           ;main.c: 129:                     lcd_clear();
  1679     0753  120A  118A  21E7  120A  118A  	fcall	_lcd_clear
  1680                           
  1681                           ;main.c: 130:                     lcd_setCursor(1,4);
  1682     0758  3004               	movlw	4
  1683     0759  00F6               	movwf	lcd_setCursor@col
  1684     075A  3001               	movlw	1
  1685     075B  120A  118A  22BB  120A  118A  	fcall	_lcd_setCursor
  1686     0760                     l1623:
  1687                           
  1688                           ;main.c: 131:                     lcd_writeString("DIGITAL");
  1689     0760  3023               	movlw	(low ((STR_16-__stringbase)| (0+32768)))& (0+255)
  1690     0761  120A  118A  231D  120A  118A  	fcall	_lcd_writeString
  1691     0766                     l1625:
  1692                           
  1693                           ;main.c: 132:                     lcd_setCursor(2,1);
  1694     0766  01F6               	clrf	lcd_setCursor@col
  1695     0767  0AF6               	incf	lcd_setCursor@col,f
  1696     0768  3002               	movlw	2
  1697     0769  120A  118A  22BB  120A  118A  	fcall	_lcd_setCursor
  1698                           
  1699                           ;main.c: 133:                     lcd_writeString("TEMP=");
  1700     076E  3045               	movlw	(low ((STR_17-__stringbase)| (0+32768)))& (0+255)
  1701     076F  120A  118A  231D  120A  118A  	fcall	_lcd_writeString
  1702     0774                     l1627:
  1703                           
  1704                           ;main.c: 134:                     lcd_writeChar((char)rtc_convUpperNibble(temp_octet_1))
      +                          ;
  1705     0774  1283               	bcf	3,5	;RP0=0, select bank0
  1706     0775  1303               	bcf	3,6	;RP1=0, select bank0
  1707     0776  083C               	movf	main@temp_octet_1,w
  1708     0777  120A  118A  21FE  120A  118A  	fcall	_rtc_convUpperNibble
  1709     077C  120A  118A  2284  120A  118A  	fcall	_lcd_writeChar
  1710     0781                     l1629:
  1711                           
  1712                           ;main.c: 135:                     lcd_writeChar((char)rtc_convLowerNibble(temp_octet_1))
      +                          ;
  1713     0781  1283               	bcf	3,5	;RP0=0, select bank0
  1714     0782  1303               	bcf	3,6	;RP1=0, select bank0
  1715     0783  083C               	movf	main@temp_octet_1,w
  1716     0784  120A  118A  21B4  120A  118A  	fcall	_rtc_convLowerNibble
  1717     0789  120A  118A  2284  120A  118A  	fcall	_lcd_writeChar
  1718                           
  1719                           ;main.c: 136:                     lcd_writeString(" HUM=");
  1720     078E  303F               	movlw	(low ((STR_18-__stringbase)| (0+32768)))& (0+255)
  1721     078F  120A  118A  231D  120A  118A  	fcall	_lcd_writeString
  1722     0794                     l1631:
  1723                           
  1724                           ;main.c: 137:                     lcd_writeChar((char)rtc_convUpperNibble(rh_octet_1));
  1725     0794  1283               	bcf	3,5	;RP0=0, select bank0
  1726     0795  1303               	bcf	3,6	;RP1=0, select bank0
  1727     0796  083A               	movf	main@rh_octet_1,w
  1728     0797  120A  118A  21FE  120A  118A  	fcall	_rtc_convUpperNibble
  1729     079C  120A  118A  2284  120A  118A  	fcall	_lcd_writeChar
  1730     07A1                     l1633:
  1731                           
  1732                           ;main.c: 138:                     lcd_writeChar((char)rtc_convLowerNibble(rh_octet_1));
  1733     07A1  1283               	bcf	3,5	;RP0=0, select bank0
  1734     07A2  1303               	bcf	3,6	;RP1=0, select bank0
  1735     07A3  083A               	movf	main@rh_octet_1,w
  1736     07A4  120A  118A  21B4  120A  118A  	fcall	_rtc_convLowerNibble
  1737     07A9  120A  118A  2284  120A  118A  	fcall	_lcd_writeChar
  1738                           
  1739                           ;main.c: 139:                 }
  1740     07AE  2D56               	goto	l1549
  1741     07AF                     l1635:
  1742                           
  1743                           ;main.c: 141:                     lcd_setCursor(1,5);
  1744     07AF  3005               	movlw	5
  1745     07B0  00F6               	movwf	lcd_setCursor@col
  1746     07B1  3001               	movlw	1
  1747     07B2  120A  118A  22BB  120A  118A  	fcall	_lcd_setCursor
  1748     07B7                     l1637:
  1749                           
  1750                           ;main.c: 142:                     lcd_writeString("Eroare!");
  1751     07B7  301B               	movlw	(low ((STR_19-__stringbase)| (0+32768)))& (0+255)
  1752     07B8  120A  118A  231D  120A  118A  	fcall	_lcd_writeString
  1753     07BD  2D56               	goto	l1549
  1754     07BE                     l1639:
  1755                           
  1756                           ;main.c: 146:                 lcd_setCursor(1,1);
  1757     07BE  01F6               	clrf	lcd_setCursor@col
  1758     07BF  0AF6               	incf	lcd_setCursor@col,f
  1759     07C0  3001               	movlw	1
  1760     07C1  120A  118A  22BB  120A  118A  	fcall	_lcd_setCursor
  1761     07C6                     l1641:
  1762                           
  1763                           ;main.c: 147:                 lcd_writeString("Transmission");
  1764     07C6  300E               	movlw	(low ((STR_20-__stringbase)| (0+32768)))& (0+255)
  1765     07C7  120A  118A  231D  120A  118A  	fcall	_lcd_writeString
  1766     07CC                     l1643:
  1767                           
  1768                           ;main.c: 148:                 lcd_setCursor(2,1);
  1769     07CC  01F6               	clrf	lcd_setCursor@col
  1770     07CD  0AF6               	incf	lcd_setCursor@col,f
  1771     07CE  3002               	movlw	2
  1772     07CF  120A  118A  22BB  120A  118A  	fcall	_lcd_setCursor
  1773                           
  1774                           ;main.c: 149:                 lcd_writeString("Error!");
  1775     07D4  3032               	movlw	(low ((STR_21-__stringbase)| (0+32768)))& (0+255)
  1776     07D5  120A  118A  231D  120A  118A  	fcall	_lcd_writeString
  1777     07DA  2D56               	goto	l1549
  1778     07DB  120A  118A  2800   	ljmp	start
  1779     07DE                     __end_of_main:
  1780                           
  1781                           	psect	text1
  1782     0385                     __ptext1:	
  1783 ;; *************** function _rtc_readTime *****************
  1784 ;; Defined at:
  1785 ;;		line 15 in file "rtc.c"
  1786 ;; Parameters:    Size  Location     Type
  1787 ;;  clock_addres    1    wreg     unsigned char 
  1788 ;; Auto vars:     Size  Location     Type
  1789 ;;  clock_addres    1    4[COMMON] unsigned char 
  1790 ;; Return value:  Size  Location     Type
  1791 ;;                  1    wreg      void 
  1792 ;; Registers used:
  1793 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1794 ;; Tracked objects:
  1795 ;;		On entry : 0/0
  1796 ;;		On exit  : 0/0
  1797 ;;		Unchanged: 0/0
  1798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1799 ;;      Params:         0       0       0       0       0
  1800 ;;      Locals:         1       0       0       0       0
  1801 ;;      Temps:          2       0       0       0       0
  1802 ;;      Totals:         3       0       0       0       0
  1803 ;;Total ram usage:        3 bytes
  1804 ;; Hardware stack levels used: 1
  1805 ;; Hardware stack levels required when called: 2
  1806 ;; This function calls:
  1807 ;;		_i2c_masterRepeatedStart
  1808 ;;		_i2c_masterStart
  1809 ;;		_i2c_masterStop
  1810 ;;		_i2c_masterWrite
  1811 ;;		_i2c_readByte
  1812 ;; This function is called by:
  1813 ;;		_main
  1814 ;; This function uses a non-reentrant model
  1815 ;;
  1816                           
  1817     0385                     _rtc_readTime:	
  1818                           ;psect for function _rtc_readTime
  1819                           
  1820                           
  1821                           ;incstack = 0
  1822                           ; Regs used in _rtc_readTime: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1823                           ;rtc_readTime@clock_address stored from wreg
  1824     0385  00F4               	movwf	rtc_readTime@clock_address
  1825     0386                     l1403:
  1826                           
  1827                           ;rtc.c: 16:     i2c_masterStart();
  1828     0386  120A  118A  21C1  120A  118A  	fcall	_i2c_masterStart
  1829                           
  1830                           ;rtc.c: 17:     i2c_masterWrite(0xD0);
  1831     038B  30D0               	movlw	208
  1832     038C  120A  118A  21DC  120A  118A  	fcall	_i2c_masterWrite
  1833                           
  1834                           ;rtc.c: 18:     i2c_masterWrite(clock_address);
  1835     0391  0874               	movf	rtc_readTime@clock_address,w
  1836     0392  120A  118A  21DC  120A  118A  	fcall	_i2c_masterWrite
  1837                           
  1838                           ;rtc.c: 19:     i2c_masterRepeatedStart();
  1839     0397  120A  118A  21D3  120A  118A  	fcall	_i2c_masterRepeatedStart
  1840                           
  1841                           ;rtc.c: 20:     i2c_masterWrite(0xD1);
  1842     039C  30D1               	movlw	209
  1843     039D  120A  118A  21DC  120A  118A  	fcall	_i2c_masterWrite
  1844                           
  1845                           ;rtc.c: 22:     switch (clock_address){
  1846     03A2  2BD0               	goto	l1413
  1847     03A3                     l1405:
  1848                           
  1849                           ;rtc.c: 24:             sec = i2c_readByte(0x00);
  1850     03A3  3000               	movlw	0
  1851     03A4  120A  118A  22FA  120A  118A  	fcall	_i2c_readByte
  1852     03A9  00F2               	movwf	??_rtc_readTime
  1853     03AA  01F3               	clrf	??_rtc_readTime+1
  1854     03AB  0872               	movf	??_rtc_readTime,w
  1855     03AC  1283               	bcf	3,5	;RP0=0, select bank0
  1856     03AD  1303               	bcf	3,6	;RP1=0, select bank0
  1857     03AE  00CB               	movwf	_sec
  1858     03AF  0873               	movf	??_rtc_readTime+1,w
  1859     03B0  00CC               	movwf	_sec+1
  1860                           
  1861                           ;rtc.c: 25:             break;
  1862     03B1  2BE3               	goto	l1415
  1863     03B2                     l1407:
  1864                           
  1865                           ;rtc.c: 28:             min = i2c_readByte(0x01);
  1866     03B2  3001               	movlw	1
  1867     03B3  120A  118A  22FA  120A  118A  	fcall	_i2c_readByte
  1868     03B8  00F2               	movwf	??_rtc_readTime
  1869     03B9  01F3               	clrf	??_rtc_readTime+1
  1870     03BA  0872               	movf	??_rtc_readTime,w
  1871     03BB  1283               	bcf	3,5	;RP0=0, select bank0
  1872     03BC  1303               	bcf	3,6	;RP1=0, select bank0
  1873     03BD  00C9               	movwf	_min
  1874     03BE  0873               	movf	??_rtc_readTime+1,w
  1875     03BF  00CA               	movwf	_min+1
  1876                           
  1877                           ;rtc.c: 29:             break;
  1878     03C0  2BE3               	goto	l1415
  1879     03C1                     l1409:
  1880                           
  1881                           ;rtc.c: 32:             hour = i2c_readByte(0x02);
  1882     03C1  3002               	movlw	2
  1883     03C2  120A  118A  22FA  120A  118A  	fcall	_i2c_readByte
  1884     03C7  00F2               	movwf	??_rtc_readTime
  1885     03C8  01F3               	clrf	??_rtc_readTime+1
  1886     03C9  0872               	movf	??_rtc_readTime,w
  1887     03CA  1283               	bcf	3,5	;RP0=0, select bank0
  1888     03CB  1303               	bcf	3,6	;RP1=0, select bank0
  1889     03CC  00C7               	movwf	_hour
  1890     03CD  0873               	movf	??_rtc_readTime+1,w
  1891     03CE  00C8               	movwf	_hour+1
  1892                           
  1893                           ;rtc.c: 33:             break;
  1894     03CF  2BE3               	goto	l1415
  1895     03D0                     l1413:
  1896     03D0  0874               	movf	rtc_readTime@clock_address,w
  1897     03D1  00F2               	movwf	??_rtc_readTime
  1898     03D2  01F3               	clrf	??_rtc_readTime+1
  1899                           
  1900                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1901                           ; Switch size 1, requested type "simple"
  1902                           ; Number of cases is 1, Range of values is 0 to 0
  1903                           ; switch strategies available:
  1904                           ; Name         Instructions Cycles
  1905                           ; simple_byte            4     3 (average)
  1906                           ; direct_byte           11     8 (fixed)
  1907                           ; jumptable            260     6 (fixed)
  1908                           ;	Chosen strategy is simple_byte
  1909     03D3  0873               	movf	??_rtc_readTime+1,w
  1910     03D4  3A00               	xorlw	0	; case 0
  1911     03D5  1903               	skipnz
  1912     03D6  2BD8               	goto	l1723
  1913     03D7  2BE3               	goto	l1415
  1914     03D8                     l1723:
  1915                           
  1916                           ; Switch size 1, requested type "simple"
  1917                           ; Number of cases is 3, Range of values is 0 to 2
  1918                           ; switch strategies available:
  1919                           ; Name         Instructions Cycles
  1920                           ; simple_byte           10     6 (average)
  1921                           ; direct_byte           17     8 (fixed)
  1922                           ; jumptable            260     6 (fixed)
  1923                           ;	Chosen strategy is simple_byte
  1924     03D8  0872               	movf	??_rtc_readTime,w
  1925     03D9  3A00               	xorlw	0	; case 0
  1926     03DA  1903               	skipnz
  1927     03DB  2BA3               	goto	l1405
  1928     03DC  3A01               	xorlw	1	; case 1
  1929     03DD  1903               	skipnz
  1930     03DE  2BB2               	goto	l1407
  1931     03DF  3A03               	xorlw	3	; case 2
  1932     03E0  1903               	skipnz
  1933     03E1  2BC1               	goto	l1409
  1934     03E2  2BE3               	goto	l1415
  1935     03E3                     l1415:
  1936                           
  1937                           ;rtc.c: 38:     i2c_masterStop();
  1938     03E3  120A  118A  21CA  120A  118A  	fcall	_i2c_masterStop
  1939     03E8                     l228:
  1940     03E8  0008               	return
  1941     03E9                     __end_of_rtc_readTime:
  1942                           
  1943                           	psect	text2
  1944     03E9                     __ptext2:	
  1945 ;; *************** function _rtc_readDate *****************
  1946 ;; Defined at:
  1947 ;;		line 41 in file "rtc.c"
  1948 ;; Parameters:    Size  Location     Type
  1949 ;;  calendar_add    1    wreg     unsigned char 
  1950 ;; Auto vars:     Size  Location     Type
  1951 ;;  calendar_add    1    4[COMMON] unsigned char 
  1952 ;; Return value:  Size  Location     Type
  1953 ;;                  1    wreg      void 
  1954 ;; Registers used:
  1955 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1956 ;; Tracked objects:
  1957 ;;		On entry : 0/0
  1958 ;;		On exit  : 0/0
  1959 ;;		Unchanged: 0/0
  1960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1961 ;;      Params:         0       0       0       0       0
  1962 ;;      Locals:         1       0       0       0       0
  1963 ;;      Temps:          2       0       0       0       0
  1964 ;;      Totals:         3       0       0       0       0
  1965 ;;Total ram usage:        3 bytes
  1966 ;; Hardware stack levels used: 1
  1967 ;; Hardware stack levels required when called: 2
  1968 ;; This function calls:
  1969 ;;		_i2c_masterRepeatedStart
  1970 ;;		_i2c_masterStart
  1971 ;;		_i2c_masterStop
  1972 ;;		_i2c_masterWrite
  1973 ;;		_i2c_readByte
  1974 ;; This function is called by:
  1975 ;;		_main
  1976 ;; This function uses a non-reentrant model
  1977 ;;
  1978                           
  1979     03E9                     _rtc_readDate:	
  1980                           ;psect for function _rtc_readDate
  1981                           
  1982                           
  1983                           ;incstack = 0
  1984                           ; Regs used in _rtc_readDate: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1985                           ;rtc_readDate@calendar_address stored from wreg
  1986     03E9  00F4               	movwf	rtc_readDate@calendar_address
  1987     03EA                     l1421:
  1988                           
  1989                           ;rtc.c: 42:     i2c_masterStart();
  1990     03EA  120A  118A  21C1  120A  118A  	fcall	_i2c_masterStart
  1991                           
  1992                           ;rtc.c: 43:     i2c_masterWrite(0xD0);
  1993     03EF  30D0               	movlw	208
  1994     03F0  120A  118A  21DC  120A  118A  	fcall	_i2c_masterWrite
  1995                           
  1996                           ;rtc.c: 44:     i2c_masterWrite(calendar_address);
  1997     03F5  0874               	movf	rtc_readDate@calendar_address,w
  1998     03F6  120A  118A  21DC  120A  118A  	fcall	_i2c_masterWrite
  1999                           
  2000                           ;rtc.c: 45:     i2c_masterRepeatedStart();
  2001     03FB  120A  118A  21D3  120A  118A  	fcall	_i2c_masterRepeatedStart
  2002                           
  2003                           ;rtc.c: 46:     i2c_masterWrite(0xD1);
  2004     0400  30D1               	movlw	209
  2005     0401  120A  118A  21DC  120A  118A  	fcall	_i2c_masterWrite
  2006                           
  2007                           ;rtc.c: 48:     switch (calendar_address){
  2008     0406  2C43               	goto	l1433
  2009     0407                     l1423:
  2010                           
  2011                           ;rtc.c: 50:             day = i2c_readByte(0x03);
  2012     0407  3003               	movlw	3
  2013     0408  120A  118A  22FA  120A  118A  	fcall	_i2c_readByte
  2014     040D  00F2               	movwf	??_rtc_readDate
  2015     040E  01F3               	clrf	??_rtc_readDate+1
  2016     040F  0872               	movf	??_rtc_readDate,w
  2017     0410  1283               	bcf	3,5	;RP0=0, select bank0
  2018     0411  1303               	bcf	3,6	;RP1=0, select bank0
  2019     0412  00C5               	movwf	_day
  2020     0413  0873               	movf	??_rtc_readDate+1,w
  2021     0414  00C6               	movwf	_day+1
  2022                           
  2023                           ;rtc.c: 51:             break;
  2024     0415  2C59               	goto	l1435
  2025     0416                     l1425:
  2026                           
  2027                           ;rtc.c: 54:             date = i2c_readByte(0x04);
  2028     0416  3004               	movlw	4
  2029     0417  120A  118A  22FA  120A  118A  	fcall	_i2c_readByte
  2030     041C  00F2               	movwf	??_rtc_readDate
  2031     041D  01F3               	clrf	??_rtc_readDate+1
  2032     041E  0872               	movf	??_rtc_readDate,w
  2033     041F  1283               	bcf	3,5	;RP0=0, select bank0
  2034     0420  1303               	bcf	3,6	;RP1=0, select bank0
  2035     0421  00C3               	movwf	_date
  2036     0422  0873               	movf	??_rtc_readDate+1,w
  2037     0423  00C4               	movwf	_date+1
  2038                           
  2039                           ;rtc.c: 55:             break;
  2040     0424  2C59               	goto	l1435
  2041     0425                     l1427:
  2042                           
  2043                           ;rtc.c: 58:             month = i2c_readByte(0x05);
  2044     0425  3005               	movlw	5
  2045     0426  120A  118A  22FA  120A  118A  	fcall	_i2c_readByte
  2046     042B  00F2               	movwf	??_rtc_readDate
  2047     042C  01F3               	clrf	??_rtc_readDate+1
  2048     042D  0872               	movf	??_rtc_readDate,w
  2049     042E  1283               	bcf	3,5	;RP0=0, select bank0
  2050     042F  1303               	bcf	3,6	;RP1=0, select bank0
  2051     0430  00C1               	movwf	_month
  2052     0431  0873               	movf	??_rtc_readDate+1,w
  2053     0432  00C2               	movwf	_month+1
  2054                           
  2055                           ;rtc.c: 59:             break;
  2056     0433  2C59               	goto	l1435
  2057     0434                     l1429:
  2058                           
  2059                           ;rtc.c: 62:             year = i2c_readByte(0x06);
  2060     0434  3006               	movlw	6
  2061     0435  120A  118A  22FA  120A  118A  	fcall	_i2c_readByte
  2062     043A  00F2               	movwf	??_rtc_readDate
  2063     043B  01F3               	clrf	??_rtc_readDate+1
  2064     043C  0872               	movf	??_rtc_readDate,w
  2065     043D  1283               	bcf	3,5	;RP0=0, select bank0
  2066     043E  1303               	bcf	3,6	;RP1=0, select bank0
  2067     043F  00BF               	movwf	_year
  2068     0440  0873               	movf	??_rtc_readDate+1,w
  2069     0441  00C0               	movwf	_year+1
  2070                           
  2071                           ;rtc.c: 63:             break;
  2072     0442  2C59               	goto	l1435
  2073     0443                     l1433:
  2074     0443  0874               	movf	rtc_readDate@calendar_address,w
  2075     0444  00F2               	movwf	??_rtc_readDate
  2076     0445  01F3               	clrf	??_rtc_readDate+1
  2077                           
  2078                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2079                           ; Switch size 1, requested type "simple"
  2080                           ; Number of cases is 1, Range of values is 0 to 0
  2081                           ; switch strategies available:
  2082                           ; Name         Instructions Cycles
  2083                           ; simple_byte            4     3 (average)
  2084                           ; direct_byte           11     8 (fixed)
  2085                           ; jumptable            260     6 (fixed)
  2086                           ;	Chosen strategy is simple_byte
  2087     0446  0873               	movf	??_rtc_readDate+1,w
  2088     0447  3A00               	xorlw	0	; case 0
  2089     0448  1903               	skipnz
  2090     0449  2C4B               	goto	l1725
  2091     044A  2C59               	goto	l1435
  2092     044B                     l1725:
  2093                           
  2094                           ; Switch size 1, requested type "simple"
  2095                           ; Number of cases is 4, Range of values is 3 to 6
  2096                           ; switch strategies available:
  2097                           ; Name         Instructions Cycles
  2098                           ; simple_byte           13     7 (average)
  2099                           ; direct_byte           23    11 (fixed)
  2100                           ; jumptable            263     9 (fixed)
  2101                           ;	Chosen strategy is simple_byte
  2102     044B  0872               	movf	??_rtc_readDate,w
  2103     044C  3A03               	xorlw	3	; case 3
  2104     044D  1903               	skipnz
  2105     044E  2C07               	goto	l1423
  2106     044F  3A07               	xorlw	7	; case 4
  2107     0450  1903               	skipnz
  2108     0451  2C16               	goto	l1425
  2109     0452  3A01               	xorlw	1	; case 5
  2110     0453  1903               	skipnz
  2111     0454  2C25               	goto	l1427
  2112     0455  3A03               	xorlw	3	; case 6
  2113     0456  1903               	skipnz
  2114     0457  2C34               	goto	l1429
  2115     0458  2C59               	goto	l1435
  2116     0459                     l1435:
  2117                           
  2118                           ;rtc.c: 68:     i2c_masterStop();
  2119     0459  120A  118A  21CA  120A  118A  	fcall	_i2c_masterStop
  2120     045E                     l238:
  2121     045E  0008               	return
  2122     045F                     __end_of_rtc_readDate:
  2123                           
  2124                           	psect	text3
  2125     02FA                     __ptext3:	
  2126 ;; *************** function _i2c_readByte *****************
  2127 ;; Defined at:
  2128 ;;		line 50 in file "i2c.c"
  2129 ;; Parameters:    Size  Location     Type
  2130 ;;  ack             1    wreg     unsigned char 
  2131 ;; Auto vars:     Size  Location     Type
  2132 ;;  ack             1    0[COMMON] unsigned char 
  2133 ;;  incoming_dat    1    1[COMMON] unsigned char 
  2134 ;; Return value:  Size  Location     Type
  2135 ;;                  1    wreg      unsigned char 
  2136 ;; Registers used:
  2137 ;;		wreg, status,2, status,0, pclath, cstack
  2138 ;; Tracked objects:
  2139 ;;		On entry : 0/0
  2140 ;;		On exit  : 0/0
  2141 ;;		Unchanged: 0/0
  2142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2143 ;;      Params:         0       0       0       0       0
  2144 ;;      Locals:         2       0       0       0       0
  2145 ;;      Temps:          0       0       0       0       0
  2146 ;;      Totals:         2       0       0       0       0
  2147 ;;Total ram usage:        2 bytes
  2148 ;; Hardware stack levels used: 1
  2149 ;; Hardware stack levels required when called: 1
  2150 ;; This function calls:
  2151 ;;		_i2c_masterWait
  2152 ;; This function is called by:
  2153 ;;		_rtc_readTime
  2154 ;;		_rtc_readDate
  2155 ;; This function uses a non-reentrant model
  2156 ;;
  2157                           
  2158     02FA                     _i2c_readByte:	
  2159                           ;psect for function _i2c_readByte
  2160                           
  2161                           
  2162                           ;incstack = 0
  2163                           ; Regs used in _i2c_readByte: [wreg+status,2+status,0+pclath+cstack]
  2164                           ;i2c_readByte@ack stored from wreg
  2165     02FA  00F0               	movwf	i2c_readByte@ack
  2166     02FB                     l1323:
  2167                           
  2168                           ;i2c.c: 51:     uint8_t incoming_data;;i2c.c: 52:     i2c_masterWait();
  2169     02FB  120A  118A  220A  120A  118A  	fcall	_i2c_masterWait
  2170     0300                     l1325:
  2171                           
  2172                           ;i2c.c: 53:     SSPCON2bits.RCEN |= 1;
  2173     0300  1683               	bsf	3,5	;RP0=1, select bank1
  2174     0301  1303               	bcf	3,6	;RP1=0, select bank1
  2175     0302  1591               	bsf	17,3	;volatile
  2176                           
  2177                           ;i2c.c: 55:     i2c_masterWait();
  2178     0303  120A  118A  220A  120A  118A  	fcall	_i2c_masterWait
  2179     0308                     l1327:
  2180                           
  2181                           ;i2c.c: 56:     incoming_data = SSPBUF;
  2182     0308  1283               	bcf	3,5	;RP0=0, select bank0
  2183     0309  1303               	bcf	3,6	;RP1=0, select bank0
  2184     030A  0813               	movf	19,w	;volatile
  2185     030B  00F1               	movwf	i2c_readByte@incoming_data
  2186     030C                     l1329:
  2187                           
  2188                           ;i2c.c: 58:     i2c_masterWait();
  2189     030C  120A  118A  220A  120A  118A  	fcall	_i2c_masterWait
  2190     0311                     l1331:
  2191                           
  2192                           ;i2c.c: 59:     SSPCON2bits.ACKDT |= (ack)?0:1;
  2193     0311  0870               	movf	i2c_readByte@ack,w
  2194     0312  1903               	btfsc	3,2
  2195     0313  2B15               	goto	u271
  2196     0314  2B18               	goto	u270
  2197     0315                     u271:
  2198     0315  1683               	bsf	3,5	;RP0=1, select bank1
  2199     0316  1303               	bcf	3,6	;RP1=0, select bank1
  2200     0317  1691               	bsf	17,5	;volatile
  2201     0318                     u270:
  2202     0318                     l1333:
  2203                           
  2204                           ;i2c.c: 60:     SSPCON2bits.ACKEN |= 1;
  2205     0318  1683               	bsf	3,5	;RP0=1, select bank1
  2206     0319  1303               	bcf	3,6	;RP1=0, select bank1
  2207     031A  1611               	bsf	17,4	;volatile
  2208     031B                     l1335:
  2209                           
  2210                           ;i2c.c: 61:     return incoming_data;
  2211     031B  0871               	movf	i2c_readByte@incoming_data,w
  2212     031C                     l51:
  2213     031C  0008               	return
  2214     031D                     __end_of_i2c_readByte:
  2215                           
  2216                           	psect	text4
  2217     01D3                     __ptext4:	
  2218 ;; *************** function _i2c_masterRepeatedStart *****************
  2219 ;; Defined at:
  2220 ;;		line 34 in file "i2c.c"
  2221 ;; Parameters:    Size  Location     Type
  2222 ;;		None
  2223 ;; Auto vars:     Size  Location     Type
  2224 ;;		None
  2225 ;; Return value:  Size  Location     Type
  2226 ;;                  1    wreg      void 
  2227 ;; Registers used:
  2228 ;;		wreg, status,2, status,0, pclath, cstack
  2229 ;; Tracked objects:
  2230 ;;		On entry : 0/0
  2231 ;;		On exit  : 0/0
  2232 ;;		Unchanged: 0/0
  2233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2234 ;;      Params:         0       0       0       0       0
  2235 ;;      Locals:         0       0       0       0       0
  2236 ;;      Temps:          0       0       0       0       0
  2237 ;;      Totals:         0       0       0       0       0
  2238 ;;Total ram usage:        0 bytes
  2239 ;; Hardware stack levels used: 1
  2240 ;; Hardware stack levels required when called: 1
  2241 ;; This function calls:
  2242 ;;		_i2c_masterWait
  2243 ;; This function is called by:
  2244 ;;		_rtc_readTime
  2245 ;;		_rtc_readDate
  2246 ;; This function uses a non-reentrant model
  2247 ;;
  2248                           
  2249     01D3                     _i2c_masterRepeatedStart:	
  2250                           ;psect for function _i2c_masterRepeatedStart
  2251                           
  2252     01D3                     l1319:	
  2253                           ;incstack = 0
  2254                           ; Regs used in _i2c_masterRepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  2255                           
  2256                           
  2257                           ;i2c.c: 35:     i2c_masterWait();
  2258     01D3  120A  118A  220A  120A  118A  	fcall	_i2c_masterWait
  2259     01D8                     l1321:
  2260                           
  2261                           ;i2c.c: 36:     SSPCON2bits.RSEN |= 1;
  2262     01D8  1683               	bsf	3,5	;RP0=1, select bank1
  2263     01D9  1303               	bcf	3,6	;RP1=0, select bank1
  2264     01DA  1491               	bsf	17,1	;volatile
  2265     01DB                     l42:
  2266     01DB  0008               	return
  2267     01DC                     __end_of_i2c_masterRepeatedStart:
  2268                           
  2269                           	psect	text5
  2270     01FE                     __ptext5:	
  2271 ;; *************** function _rtc_convUpperNibble *****************
  2272 ;; Defined at:
  2273 ;;		line 7 in file "rtc.c"
  2274 ;; Parameters:    Size  Location     Type
  2275 ;;  digit           1    wreg     unsigned char 
  2276 ;; Auto vars:     Size  Location     Type
  2277 ;;  digit           1    1[COMMON] unsigned char 
  2278 ;; Return value:  Size  Location     Type
  2279 ;;                  1    wreg      unsigned char 
  2280 ;; Registers used:
  2281 ;;		wreg, status,2, status,0
  2282 ;; Tracked objects:
  2283 ;;		On entry : 0/0
  2284 ;;		On exit  : 0/0
  2285 ;;		Unchanged: 0/0
  2286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2287 ;;      Params:         0       0       0       0       0
  2288 ;;      Locals:         1       0       0       0       0
  2289 ;;      Temps:          1       0       0       0       0
  2290 ;;      Totals:         2       0       0       0       0
  2291 ;;Total ram usage:        2 bytes
  2292 ;; Hardware stack levels used: 1
  2293 ;; This function calls:
  2294 ;;		Nothing
  2295 ;; This function is called by:
  2296 ;;		_main
  2297 ;; This function uses a non-reentrant model
  2298 ;;
  2299                           
  2300     01FE                     _rtc_convUpperNibble:	
  2301                           ;psect for function _rtc_convUpperNibble
  2302                           
  2303                           
  2304                           ;incstack = 0
  2305                           ; Regs used in _rtc_convUpperNibble: [wreg+status,2+status,0]
  2306                           ;rtc_convUpperNibble@digit stored from wreg
  2307     01FE  00F1               	movwf	rtc_convUpperNibble@digit
  2308     01FF                     l1441:
  2309                           
  2310                           ;rtc.c: 8:     return ((digit >> 4) + 48);
  2311     01FF  0871               	movf	rtc_convUpperNibble@digit,w
  2312     0200  00F0               	movwf	??_rtc_convUpperNibble
  2313     0201  3004               	movlw	4
  2314     0202                     u335:
  2315     0202  1003               	clrc
  2316     0203  0CF0               	rrf	??_rtc_convUpperNibble,f
  2317     0204  3EFF               	addlw	-1
  2318     0205  1D03               	skipz
  2319     0206  2A02               	goto	u335
  2320     0207  0870               	movf	??_rtc_convUpperNibble,w
  2321     0208  3E30               	addlw	48
  2322     0209                     l216:
  2323     0209  0008               	return
  2324     020A                     __end_of_rtc_convUpperNibble:
  2325                           
  2326                           	psect	text6
  2327     01B4                     __ptext6:	
  2328 ;; *************** function _rtc_convLowerNibble *****************
  2329 ;; Defined at:
  2330 ;;		line 11 in file "rtc.c"
  2331 ;; Parameters:    Size  Location     Type
  2332 ;;  digit           1    wreg     unsigned char 
  2333 ;; Auto vars:     Size  Location     Type
  2334 ;;  digit           1    0[COMMON] unsigned char 
  2335 ;; Return value:  Size  Location     Type
  2336 ;;                  1    wreg      unsigned char 
  2337 ;; Registers used:
  2338 ;;		wreg, status,2, status,0
  2339 ;; Tracked objects:
  2340 ;;		On entry : 0/0
  2341 ;;		On exit  : 0/0
  2342 ;;		Unchanged: 0/0
  2343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2344 ;;      Params:         0       0       0       0       0
  2345 ;;      Locals:         1       0       0       0       0
  2346 ;;      Temps:          0       0       0       0       0
  2347 ;;      Totals:         1       0       0       0       0
  2348 ;;Total ram usage:        1 bytes
  2349 ;; Hardware stack levels used: 1
  2350 ;; This function calls:
  2351 ;;		Nothing
  2352 ;; This function is called by:
  2353 ;;		_main
  2354 ;; This function uses a non-reentrant model
  2355 ;;
  2356                           
  2357     01B4                     _rtc_convLowerNibble:	
  2358                           ;psect for function _rtc_convLowerNibble
  2359                           
  2360                           
  2361                           ;incstack = 0
  2362                           ; Regs used in _rtc_convLowerNibble: [wreg+status,2+status,0]
  2363                           ;rtc_convLowerNibble@digit stored from wreg
  2364     01B4  00F0               	movwf	rtc_convLowerNibble@digit
  2365     01B5                     l1445:
  2366                           
  2367                           ;rtc.c: 12:     return ((digit & 0x0F) + 48);
  2368     01B5  0870               	movf	rtc_convLowerNibble@digit,w
  2369     01B6  390F               	andlw	15
  2370     01B7  3E30               	addlw	48
  2371     01B8                     l219:
  2372     01B8  0008               	return
  2373     01B9                     __end_of_rtc_convLowerNibble:
  2374                           
  2375                           	psect	text7
  2376     031D                     __ptext7:	
  2377 ;; *************** function _lcd_writeString *****************
  2378 ;; Defined at:
  2379 ;;		line 113 in file "i2c.c"
  2380 ;; Parameters:    Size  Location     Type
  2381 ;;  str             1    wreg     PTR unsigned char 
  2382 ;;		 -> STR_21(7), STR_20(13), STR_19(8), STR_18(6), 
  2383 ;;		 -> STR_17(6), STR_16(8), STR_15(4), STR_14(4), 
  2384 ;;		 -> STR_13(4), STR_12(4), STR_11(4), STR_10(4), 
  2385 ;;		 -> STR_9(4), STR_8(4), STR_7(2), STR_6(2), 
  2386 ;;		 -> STR_5(6), STR_4(2), STR_3(2), STR_2(7), 
  2387 ;;		 -> STR_1(13), 
  2388 ;; Auto vars:     Size  Location     Type
  2389 ;;  str             1    8[COMMON] PTR unsigned char 
  2390 ;;		 -> STR_21(7), STR_20(13), STR_19(8), STR_18(6), 
  2391 ;;		 -> STR_17(6), STR_16(8), STR_15(4), STR_14(4), 
  2392 ;;		 -> STR_13(4), STR_12(4), STR_11(4), STR_10(4), 
  2393 ;;		 -> STR_9(4), STR_8(4), STR_7(2), STR_6(2), 
  2394 ;;		 -> STR_5(6), STR_4(2), STR_3(2), STR_2(7), 
  2395 ;;		 -> STR_1(13), 
  2396 ;;  i               2    6[COMMON] int 
  2397 ;; Return value:  Size  Location     Type
  2398 ;;                  1    wreg      void 
  2399 ;; Registers used:
  2400 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2401 ;; Tracked objects:
  2402 ;;		On entry : 0/0
  2403 ;;		On exit  : 0/0
  2404 ;;		Unchanged: 0/0
  2405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2406 ;;      Params:         0       0       0       0       0
  2407 ;;      Locals:         3       0       0       0       0
  2408 ;;      Temps:          0       0       0       0       0
  2409 ;;      Totals:         3       0       0       0       0
  2410 ;;Total ram usage:        3 bytes
  2411 ;; Hardware stack levels used: 1
  2412 ;; Hardware stack levels required when called: 5
  2413 ;; This function calls:
  2414 ;;		_lcd_writeChar
  2415 ;; This function is called by:
  2416 ;;		_main
  2417 ;; This function uses a non-reentrant model
  2418 ;;
  2419                           
  2420     031D                     _lcd_writeString:	
  2421                           ;psect for function _lcd_writeString
  2422                           
  2423                           
  2424                           ;incstack = 0
  2425                           ; Regs used in _lcd_writeString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2426                           ;lcd_writeString@str stored from wreg
  2427     031D  00F8               	movwf	lcd_writeString@str
  2428     031E                     l1383:
  2429                           
  2430                           ;i2c.c: 114:     for(int i = 0;str[i] != '\0';i++)
  2431     031E  01F6               	clrf	lcd_writeString@i
  2432     031F  01F7               	clrf	lcd_writeString@i+1
  2433     0320  2B34               	goto	l1389
  2434     0321                     l1385:
  2435                           
  2436                           ;i2c.c: 115:         lcd_writeChar(str[i]);
  2437     0321  0876               	movf	lcd_writeString@i,w
  2438     0322  0778               	addwf	lcd_writeString@str,w
  2439     0323  0084               	movwf	4
  2440     0324  120A  118A  2003  120A  118A  	fcall	stringdir
  2441     0329  120A  118A  2284  120A  118A  	fcall	_lcd_writeChar
  2442     032E                     l1387:
  2443     032E  3001               	movlw	1
  2444     032F  07F6               	addwf	lcd_writeString@i,f
  2445     0330  1803               	skipnc
  2446     0331  0AF7               	incf	lcd_writeString@i+1,f
  2447     0332  3000               	movlw	0
  2448     0333  07F7               	addwf	lcd_writeString@i+1,f
  2449     0334                     l1389:
  2450     0334  0876               	movf	lcd_writeString@i,w
  2451     0335  0778               	addwf	lcd_writeString@str,w
  2452     0336  0084               	movwf	4
  2453     0337  120A  118A  2003  120A  118A  	fcall	stringdir
  2454     033C  3A00               	xorlw	0
  2455     033D  1D03               	skipz
  2456     033E  2B40               	goto	u301
  2457     033F  2B41               	goto	u300
  2458     0340                     u301:
  2459     0340  2B21               	goto	l1385
  2460     0341                     u300:
  2461     0341                     l72:
  2462     0341  0008               	return
  2463     0342                     __end_of_lcd_writeString:
  2464                           
  2465                           	psect	text8
  2466     0284                     __ptext8:	
  2467 ;; *************** function _lcd_writeChar *****************
  2468 ;; Defined at:
  2469 ;;		line 107 in file "i2c.c"
  2470 ;; Parameters:    Size  Location     Type
  2471 ;;  data            1    wreg     unsigned char 
  2472 ;; Auto vars:     Size  Location     Type
  2473 ;;  data            1    5[COMMON] unsigned char 
  2474 ;; Return value:  Size  Location     Type
  2475 ;;                  1    wreg      void 
  2476 ;; Registers used:
  2477 ;;		wreg, status,2, status,0, pclath, cstack
  2478 ;; Tracked objects:
  2479 ;;		On entry : 0/0
  2480 ;;		On exit  : 0/0
  2481 ;;		Unchanged: 0/0
  2482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2483 ;;      Params:         0       0       0       0       0
  2484 ;;      Locals:         1       0       0       0       0
  2485 ;;      Temps:          1       0       0       0       0
  2486 ;;      Totals:         2       0       0       0       0
  2487 ;;Total ram usage:        2 bytes
  2488 ;; Hardware stack levels used: 1
  2489 ;; Hardware stack levels required when called: 4
  2490 ;; This function calls:
  2491 ;;		_lcd_write4Bit
  2492 ;; This function is called by:
  2493 ;;		_lcd_writeString
  2494 ;;		_main
  2495 ;; This function uses a non-reentrant model
  2496 ;;
  2497                           
  2498     0284                     _lcd_writeChar:	
  2499                           ;psect for function _lcd_writeChar
  2500                           
  2501                           
  2502                           ;incstack = 0
  2503                           ; Regs used in _lcd_writeChar: [wreg+status,2+status,0+pclath+cstack]
  2504                           ;lcd_writeChar@data stored from wreg
  2505     0284  00F5               	movwf	lcd_writeChar@data
  2506     0285                     l1345:
  2507                           
  2508                           ;i2c.c: 108:     RS = 1;
  2509     0285  01FB               	clrf	_RS
  2510     0286  0AFB               	incf	_RS,f
  2511     0287                     l1347:
  2512                           
  2513                           ;i2c.c: 109:     lcd_write4Bit(data & 0xF0);
  2514     0287  0875               	movf	lcd_writeChar@data,w
  2515     0288  39F0               	andlw	240
  2516     0289  120A  118A  2251  120A  118A  	fcall	_lcd_write4Bit
  2517                           
  2518                           ;i2c.c: 110:     lcd_write4Bit((data << 4) & 0xF0);
  2519     028E  0875               	movf	lcd_writeChar@data,w
  2520     028F  00F4               	movwf	??_lcd_writeChar
  2521     0290  3003               	movlw	3
  2522     0291                     u295:
  2523     0291  1003               	clrc
  2524     0292  0DF4               	rlf	??_lcd_writeChar,f
  2525     0293  3EFF               	addlw	-1
  2526     0294  1D03               	skipz
  2527     0295  2A91               	goto	u295
  2528     0296  1003               	clrc
  2529     0297  0D74               	rlf	??_lcd_writeChar,w
  2530     0298  39F0               	andlw	240
  2531     0299  120A  118A  2251  120A  118A  	fcall	_lcd_write4Bit
  2532     029E                     l66:
  2533     029E  0008               	return
  2534     029F                     __end_of_lcd_writeChar:
  2535                           
  2536                           	psect	text9
  2537     02BB                     __ptext9:	
  2538 ;; *************** function _lcd_setCursor *****************
  2539 ;; Defined at:
  2540 ;;		line 118 in file "i2c.c"
  2541 ;; Parameters:    Size  Location     Type
  2542 ;;  row             1    wreg     unsigned char 
  2543 ;;  col             1    6[COMMON] unsigned char 
  2544 ;; Auto vars:     Size  Location     Type
  2545 ;;  row             1    7[COMMON] unsigned char 
  2546 ;; Return value:  Size  Location     Type
  2547 ;;                  1    wreg      void 
  2548 ;; Registers used:
  2549 ;;		wreg, status,2, status,0, pclath, cstack
  2550 ;; Tracked objects:
  2551 ;;		On entry : 0/0
  2552 ;;		On exit  : 0/0
  2553 ;;		Unchanged: 0/0
  2554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2555 ;;      Params:         1       0       0       0       0
  2556 ;;      Locals:         1       0       0       0       0
  2557 ;;      Temps:          0       0       0       0       0
  2558 ;;      Totals:         2       0       0       0       0
  2559 ;;Total ram usage:        2 bytes
  2560 ;; Hardware stack levels used: 1
  2561 ;; Hardware stack levels required when called: 5
  2562 ;; This function calls:
  2563 ;;		_lcd_cmd
  2564 ;; This function is called by:
  2565 ;;		_main
  2566 ;; This function uses a non-reentrant model
  2567 ;;
  2568                           
  2569     02BB                     _lcd_setCursor:	
  2570                           ;psect for function _lcd_setCursor
  2571                           
  2572                           
  2573                           ;incstack = 0
  2574                           ; Regs used in _lcd_setCursor: [wreg+status,2+status,0+pclath+cstack]
  2575                           ;lcd_setCursor@row stored from wreg
  2576     02BB  00F7               	movwf	lcd_setCursor@row
  2577     02BC                     l1391:
  2578                           
  2579                           ;i2c.c: 119:     if(row == 1)
  2580     02BC  0377               	decf	lcd_setCursor@row,w
  2581     02BD  1D03               	btfss	3,2
  2582     02BE  2AC0               	goto	u311
  2583     02BF  2AC1               	goto	u310
  2584     02C0                     u311:
  2585     02C0  2AC9               	goto	l1395
  2586     02C1                     u310:
  2587     02C1                     l1393:
  2588                           
  2589                           ;i2c.c: 120:         lcd_cmd(0x80 + col - 1);
  2590     02C1  0876               	movf	lcd_setCursor@col,w
  2591     02C2  3E7F               	addlw	127
  2592     02C3  120A  118A  226A  120A  118A  	fcall	_lcd_cmd
  2593     02C8  2AD6               	goto	l78
  2594     02C9                     l1395:
  2595     02C9  3002               	movlw	2
  2596     02CA  0677               	xorwf	lcd_setCursor@row,w
  2597     02CB  1D03               	btfss	3,2
  2598     02CC  2ACE               	goto	u321
  2599     02CD  2ACF               	goto	u320
  2600     02CE                     u321:
  2601     02CE  2AD6               	goto	l78
  2602     02CF                     u320:
  2603     02CF                     l1397:
  2604                           
  2605                           ;i2c.c: 122:         lcd_cmd(0xC0 + col - 1);
  2606     02CF  0876               	movf	lcd_setCursor@col,w
  2607     02D0  3EBF               	addlw	191
  2608     02D1  120A  118A  226A  120A  118A  	fcall	_lcd_cmd
  2609     02D6                     l78:
  2610     02D6  0008               	return
  2611     02D7                     __end_of_lcd_setCursor:
  2612                           
  2613                           	psect	text10
  2614     045F                     __ptext10:	
  2615 ;; *************** function _lcd_init *****************
  2616 ;; Defined at:
  2617 ;;		line 65 in file "i2c.c"
  2618 ;; Parameters:    Size  Location     Type
  2619 ;;  i2c_Add         1    wreg     unsigned char 
  2620 ;; Auto vars:     Size  Location     Type
  2621 ;;  i2c_Add         1    9[COMMON] unsigned char 
  2622 ;; Return value:  Size  Location     Type
  2623 ;;                  1    wreg      void 
  2624 ;; Registers used:
  2625 ;;		wreg, status,2, status,0, pclath, cstack
  2626 ;; Tracked objects:
  2627 ;;		On entry : 0/0
  2628 ;;		On exit  : 0/0
  2629 ;;		Unchanged: 0/0
  2630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2631 ;;      Params:         0       0       0       0       0
  2632 ;;      Locals:         1       0       0       0       0
  2633 ;;      Temps:          3       0       0       0       0
  2634 ;;      Totals:         4       0       0       0       0
  2635 ;;Total ram usage:        4 bytes
  2636 ;; Hardware stack levels used: 1
  2637 ;; Hardware stack levels required when called: 5
  2638 ;; This function calls:
  2639 ;;		_lcd_cmd
  2640 ;; This function is called by:
  2641 ;;		_main
  2642 ;; This function uses a non-reentrant model
  2643 ;;
  2644                           
  2645     045F                     _lcd_init:	
  2646                           ;psect for function _lcd_init
  2647                           
  2648                           
  2649                           ;incstack = 0
  2650                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  2651                           ;lcd_init@i2c_Add stored from wreg
  2652     045F  00F9               	movwf	lcd_init@i2c_Add
  2653     0460                     l1359:
  2654                           
  2655                           ;i2c.c: 66:     i2c_add = i2c_Add;
  2656     0460  0879               	movf	lcd_init@i2c_Add,w
  2657     0461  00FC               	movwf	_i2c_add
  2658                           
  2659                           ;i2c.c: 68:     _delay((unsigned long)((30)*(16000000/4000.0)));
  2660     0462  309C               	movlw	156
  2661     0463  00F7               	movwf	??_lcd_init+1
  2662     0464  30D7               	movlw	215
  2663     0465  00F6               	movwf	??_lcd_init
  2664     0466                     u517:
  2665     0466  0BF6               	decfsz	??_lcd_init,f
  2666     0467  2C66               	goto	u517
  2667     0468  0BF7               	decfsz	??_lcd_init+1,f
  2668     0469  2C66               	goto	u517
  2669     046A                     l1361:
  2670                           
  2671                           ;i2c.c: 69:     lcd_cmd(0x03);
  2672     046A  3003               	movlw	3
  2673     046B  120A  118A  226A  120A  118A  	fcall	_lcd_cmd
  2674     0470                     l1363:
  2675                           
  2676                           ;i2c.c: 70:     _delay((unsigned long)((5)*(16000000/4000.0)));
  2677     0470  301A               	movlw	26
  2678     0471  00F7               	movwf	??_lcd_init+1
  2679     0472  30F8               	movlw	248
  2680     0473  00F6               	movwf	??_lcd_init
  2681     0474                     u527:
  2682     0474  0BF6               	decfsz	??_lcd_init,f
  2683     0475  2C74               	goto	u527
  2684     0476  0BF7               	decfsz	??_lcd_init+1,f
  2685     0477  2C74               	goto	u527
  2686     0478  0000               	nop
  2687                           
  2688                           ;i2c.c: 71:     lcd_cmd(0x03);
  2689     0479  3003               	movlw	3
  2690     047A  120A  118A  226A  120A  118A  	fcall	_lcd_cmd
  2691     047F                     l1365:
  2692                           
  2693                           ;i2c.c: 72:     _delay((unsigned long)((5)*(16000000/4000.0)));
  2694     047F  301A               	movlw	26
  2695     0480  00F7               	movwf	??_lcd_init+1
  2696     0481  30F8               	movlw	248
  2697     0482  00F6               	movwf	??_lcd_init
  2698     0483                     u537:
  2699     0483  0BF6               	decfsz	??_lcd_init,f
  2700     0484  2C83               	goto	u537
  2701     0485  0BF7               	decfsz	??_lcd_init+1,f
  2702     0486  2C83               	goto	u537
  2703     0487  0000               	nop
  2704     0488                     l1367:
  2705                           
  2706                           ;i2c.c: 73:     lcd_cmd(0x03);
  2707     0488  3003               	movlw	3
  2708     0489  120A  118A  226A  120A  118A  	fcall	_lcd_cmd
  2709                           
  2710                           ;i2c.c: 74:     _delay((unsigned long)((5)*(16000000/4000.0)));
  2711     048E  301A               	movlw	26
  2712     048F  00F7               	movwf	??_lcd_init+1
  2713     0490  30F8               	movlw	248
  2714     0491  00F6               	movwf	??_lcd_init
  2715     0492                     u547:
  2716     0492  0BF6               	decfsz	??_lcd_init,f
  2717     0493  2C92               	goto	u547
  2718     0494  0BF7               	decfsz	??_lcd_init+1,f
  2719     0495  2C92               	goto	u547
  2720     0496  0000               	nop
  2721     0497                     l1369:
  2722                           
  2723                           ;i2c.c: 75:     lcd_cmd(0x02);
  2724     0497  3002               	movlw	2
  2725     0498  120A  118A  226A  120A  118A  	fcall	_lcd_cmd
  2726     049D                     l1371:
  2727                           
  2728                           ;i2c.c: 76:     _delay((unsigned long)((5)*(16000000/4000.0)));
  2729     049D  301A               	movlw	26
  2730     049E  00F7               	movwf	??_lcd_init+1
  2731     049F  30F8               	movlw	248
  2732     04A0  00F6               	movwf	??_lcd_init
  2733     04A1                     u557:
  2734     04A1  0BF6               	decfsz	??_lcd_init,f
  2735     04A2  2CA1               	goto	u557
  2736     04A3  0BF7               	decfsz	??_lcd_init+1,f
  2737     04A4  2CA1               	goto	u557
  2738     04A5  0000               	nop
  2739                           
  2740                           ;i2c.c: 77:     lcd_cmd(0x20 | (2 << 2));
  2741     04A6  3028               	movlw	40
  2742     04A7  120A  118A  226A  120A  118A  	fcall	_lcd_cmd
  2743     04AC                     l1373:
  2744                           
  2745                           ;i2c.c: 78:     _delay((unsigned long)((50)*(16000000/4000.0)));
  2746     04AC  3002               	movlw	2
  2747     04AD  00F8               	movwf	??_lcd_init+2
  2748     04AE  3004               	movlw	4
  2749     04AF  00F7               	movwf	??_lcd_init+1
  2750     04B0  30BA               	movlw	186
  2751     04B1  00F6               	movwf	??_lcd_init
  2752     04B2                     u567:
  2753     04B2  0BF6               	decfsz	??_lcd_init,f
  2754     04B3  2CB2               	goto	u567
  2755     04B4  0BF7               	decfsz	??_lcd_init+1,f
  2756     04B5  2CB2               	goto	u567
  2757     04B6  0BF8               	decfsz	??_lcd_init+2,f
  2758     04B7  2CB2               	goto	u567
  2759     04B8  0000               	nop
  2760     04B9                     l1375:
  2761                           
  2762                           ;i2c.c: 79:     lcd_cmd(0x0C);
  2763     04B9  300C               	movlw	12
  2764     04BA  120A  118A  226A  120A  118A  	fcall	_lcd_cmd
  2765                           
  2766                           ;i2c.c: 80:     _delay((unsigned long)((50)*(16000000/4000.0)));
  2767     04BF  3002               	movlw	2
  2768     04C0  00F8               	movwf	??_lcd_init+2
  2769     04C1  3004               	movlw	4
  2770     04C2  00F7               	movwf	??_lcd_init+1
  2771     04C3  30BA               	movlw	186
  2772     04C4  00F6               	movwf	??_lcd_init
  2773     04C5                     u577:
  2774     04C5  0BF6               	decfsz	??_lcd_init,f
  2775     04C6  2CC5               	goto	u577
  2776     04C7  0BF7               	decfsz	??_lcd_init+1,f
  2777     04C8  2CC5               	goto	u577
  2778     04C9  0BF8               	decfsz	??_lcd_init+2,f
  2779     04CA  2CC5               	goto	u577
  2780     04CB  0000               	nop
  2781     04CC                     l1377:
  2782                           
  2783                           ;i2c.c: 81:     lcd_cmd(0x01);
  2784     04CC  3001               	movlw	1
  2785     04CD  120A  118A  226A  120A  118A  	fcall	_lcd_cmd
  2786     04D2                     l1379:
  2787                           
  2788                           ;i2c.c: 82:     _delay((unsigned long)((50)*(16000000/4000.0)));
  2789     04D2  3002               	movlw	2
  2790     04D3  00F8               	movwf	??_lcd_init+2
  2791     04D4  3004               	movlw	4
  2792     04D5  00F7               	movwf	??_lcd_init+1
  2793     04D6  30BA               	movlw	186
  2794     04D7  00F6               	movwf	??_lcd_init
  2795     04D8                     u587:
  2796     04D8  0BF6               	decfsz	??_lcd_init,f
  2797     04D9  2CD8               	goto	u587
  2798     04DA  0BF7               	decfsz	??_lcd_init+1,f
  2799     04DB  2CD8               	goto	u587
  2800     04DC  0BF8               	decfsz	??_lcd_init+2,f
  2801     04DD  2CD8               	goto	u587
  2802     04DE  0000               	nop
  2803                           
  2804                           ;i2c.c: 83:     lcd_cmd(0x04 | 0x02);
  2805     04DF  3006               	movlw	6
  2806     04E0  120A  118A  226A  120A  118A  	fcall	_lcd_cmd
  2807     04E5                     l1381:
  2808                           
  2809                           ;i2c.c: 84:     _delay((unsigned long)((50)*(16000000/4000.0)));
  2810     04E5  3002               	movlw	2
  2811     04E6  00F8               	movwf	??_lcd_init+2
  2812     04E7  3004               	movlw	4
  2813     04E8  00F7               	movwf	??_lcd_init+1
  2814     04E9  30BA               	movlw	186
  2815     04EA  00F6               	movwf	??_lcd_init
  2816     04EB                     u597:
  2817     04EB  0BF6               	decfsz	??_lcd_init,f
  2818     04EC  2CEB               	goto	u597
  2819     04ED  0BF7               	decfsz	??_lcd_init+1,f
  2820     04EE  2CEB               	goto	u597
  2821     04EF  0BF8               	decfsz	??_lcd_init+2,f
  2822     04F0  2CEB               	goto	u597
  2823     04F1  0000               	nop
  2824     04F2                     l54:
  2825     04F2  0008               	return
  2826     04F3                     __end_of_lcd_init:
  2827                           
  2828                           	psect	text11
  2829     01E7                     __ptext11:	
  2830 ;; *************** function _lcd_clear *****************
  2831 ;; Defined at:
  2832 ;;		line 145 in file "i2c.c"
  2833 ;; Parameters:    Size  Location     Type
  2834 ;;		None
  2835 ;; Auto vars:     Size  Location     Type
  2836 ;;		None
  2837 ;; Return value:  Size  Location     Type
  2838 ;;                  1    wreg      void 
  2839 ;; Registers used:
  2840 ;;		wreg, status,2, status,0, pclath, cstack
  2841 ;; Tracked objects:
  2842 ;;		On entry : 0/0
  2843 ;;		On exit  : 0/0
  2844 ;;		Unchanged: 0/0
  2845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2846 ;;      Params:         0       0       0       0       0
  2847 ;;      Locals:         0       0       0       0       0
  2848 ;;      Temps:          1       0       0       0       0
  2849 ;;      Totals:         1       0       0       0       0
  2850 ;;Total ram usage:        1 bytes
  2851 ;; Hardware stack levels used: 1
  2852 ;; Hardware stack levels required when called: 5
  2853 ;; This function calls:
  2854 ;;		_lcd_cmd
  2855 ;; This function is called by:
  2856 ;;		_main
  2857 ;; This function uses a non-reentrant model
  2858 ;;
  2859                           
  2860     01E7                     _lcd_clear:	
  2861                           ;psect for function _lcd_clear
  2862                           
  2863     01E7                     l1399:	
  2864                           ;incstack = 0
  2865                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
  2866                           
  2867                           
  2868                           ;i2c.c: 146:     lcd_cmd(0x01);
  2869     01E7  3001               	movlw	1
  2870     01E8  120A  118A  226A  120A  118A  	fcall	_lcd_cmd
  2871     01ED                     l1401:
  2872                           
  2873                           ;i2c.c: 147:     _delay((unsigned long)((40)*(16000000/4000000.0)));
  2874     01ED  3035               	movlw	53
  2875     01EE  00F6               	movwf	??_lcd_clear
  2876     01EF                     u607:
  2877     01EF  0BF6               	decfsz	??_lcd_clear,f
  2878     01F0  29EF               	goto	u607
  2879     01F1                     l93:
  2880     01F1  0008               	return
  2881     01F2                     __end_of_lcd_clear:
  2882                           
  2883                           	psect	text12
  2884     026A                     __ptext12:	
  2885 ;; *************** function _lcd_cmd *****************
  2886 ;; Defined at:
  2887 ;;		line 101 in file "i2c.c"
  2888 ;; Parameters:    Size  Location     Type
  2889 ;;  cmd             1    wreg     unsigned char 
  2890 ;; Auto vars:     Size  Location     Type
  2891 ;;  cmd             1    5[COMMON] unsigned char 
  2892 ;; Return value:  Size  Location     Type
  2893 ;;                  1    wreg      void 
  2894 ;; Registers used:
  2895 ;;		wreg, status,2, status,0, pclath, cstack
  2896 ;; Tracked objects:
  2897 ;;		On entry : 0/0
  2898 ;;		On exit  : 0/0
  2899 ;;		Unchanged: 0/0
  2900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2901 ;;      Params:         0       0       0       0       0
  2902 ;;      Locals:         1       0       0       0       0
  2903 ;;      Temps:          1       0       0       0       0
  2904 ;;      Totals:         2       0       0       0       0
  2905 ;;Total ram usage:        2 bytes
  2906 ;; Hardware stack levels used: 1
  2907 ;; Hardware stack levels required when called: 4
  2908 ;; This function calls:
  2909 ;;		_lcd_write4Bit
  2910 ;; This function is called by:
  2911 ;;		_lcd_init
  2912 ;;		_lcd_setCursor
  2913 ;;		_lcd_clear
  2914 ;;		_lcd_shiftLeft
  2915 ;;		_lcd_shiftRight
  2916 ;; This function uses a non-reentrant model
  2917 ;;
  2918                           
  2919     026A                     _lcd_cmd:	
  2920                           ;psect for function _lcd_cmd
  2921                           
  2922                           
  2923                           ;incstack = 0
  2924                           ; Regs used in _lcd_cmd: [wreg+status,2+status,0+pclath+cstack]
  2925                           ;lcd_cmd@cmd stored from wreg
  2926     026A  00F5               	movwf	lcd_cmd@cmd
  2927     026B                     l1339:
  2928                           
  2929                           ;i2c.c: 102:     RS = 0;
  2930     026B  01FB               	clrf	_RS
  2931     026C                     l1341:
  2932                           
  2933                           ;i2c.c: 103:     lcd_write4Bit(cmd & 0xF0);
  2934     026C  0875               	movf	lcd_cmd@cmd,w
  2935     026D  39F0               	andlw	240
  2936     026E  120A  118A  2251  120A  118A  	fcall	_lcd_write4Bit
  2937     0273                     l1343:
  2938                           
  2939                           ;i2c.c: 104:     lcd_write4Bit((cmd << 4) & 0xF0);
  2940     0273  0875               	movf	lcd_cmd@cmd,w
  2941     0274  00F4               	movwf	??_lcd_cmd
  2942     0275  3003               	movlw	3
  2943     0276                     u285:
  2944     0276  1003               	clrc
  2945     0277  0DF4               	rlf	??_lcd_cmd,f
  2946     0278  3EFF               	addlw	-1
  2947     0279  1D03               	skipz
  2948     027A  2A76               	goto	u285
  2949     027B  1003               	clrc
  2950     027C  0D74               	rlf	??_lcd_cmd,w
  2951     027D  39F0               	andlw	240
  2952     027E  120A  118A  2251  120A  118A  	fcall	_lcd_write4Bit
  2953     0283                     l63:
  2954     0283  0008               	return
  2955     0284                     __end_of_lcd_cmd:
  2956                           
  2957                           	psect	text13
  2958     0251                     __ptext13:	
  2959 ;; *************** function _lcd_write4Bit *****************
  2960 ;; Defined at:
  2961 ;;		line 94 in file "i2c.c"
  2962 ;; Parameters:    Size  Location     Type
  2963 ;;  nibble          1    wreg     unsigned char 
  2964 ;; Auto vars:     Size  Location     Type
  2965 ;;  nibble          1    3[COMMON] unsigned char 
  2966 ;; Return value:  Size  Location     Type
  2967 ;;                  1    wreg      void 
  2968 ;; Registers used:
  2969 ;;		wreg, status,2, status,0, pclath, cstack
  2970 ;; Tracked objects:
  2971 ;;		On entry : 0/0
  2972 ;;		On exit  : 0/0
  2973 ;;		Unchanged: 0/0
  2974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2975 ;;      Params:         0       0       0       0       0
  2976 ;;      Locals:         1       0       0       0       0
  2977 ;;      Temps:          1       0       0       0       0
  2978 ;;      Totals:         2       0       0       0       0
  2979 ;;Total ram usage:        2 bytes
  2980 ;; Hardware stack levels used: 1
  2981 ;; Hardware stack levels required when called: 3
  2982 ;; This function calls:
  2983 ;;		_io_expanderWrite
  2984 ;; This function is called by:
  2985 ;;		_lcd_cmd
  2986 ;;		_lcd_writeChar
  2987 ;; This function uses a non-reentrant model
  2988 ;;
  2989                           
  2990     0251                     _lcd_write4Bit:	
  2991                           ;psect for function _lcd_write4Bit
  2992                           
  2993                           
  2994                           ;incstack = 0
  2995                           ; Regs used in _lcd_write4Bit: [wreg+status,2+status,0+pclath+cstack]
  2996                           ;lcd_write4Bit@nibble stored from wreg
  2997     0251  00F3               	movwf	lcd_write4Bit@nibble
  2998     0252                     l1313:
  2999                           
  3000                           ;i2c.c: 95:     nibble |= RS;
  3001     0252  087B               	movf	_RS,w
  3002     0253  00F2               	movwf	??_lcd_write4Bit
  3003     0254  0872               	movf	??_lcd_write4Bit,w
  3004     0255  04F3               	iorwf	lcd_write4Bit@nibble,f
  3005     0256                     l1315:
  3006                           
  3007                           ;i2c.c: 96:     io_expanderWrite(nibble | 0x04);
  3008     0256  0873               	movf	lcd_write4Bit@nibble,w
  3009     0257  3804               	iorlw	4
  3010     0258  120A  118A  2238  120A  118A  	fcall	_io_expanderWrite
  3011     025D                     l1317:
  3012                           
  3013                           ;i2c.c: 97:     io_expanderWrite(nibble & 0xFB);
  3014     025D  0873               	movf	lcd_write4Bit@nibble,w
  3015     025E  39FB               	andlw	251
  3016     025F  120A  118A  2238  120A  118A  	fcall	_io_expanderWrite
  3017                           
  3018                           ;i2c.c: 98:     _delay((unsigned long)((50)*(16000000/4000000.0)));
  3019     0264  3042               	movlw	66
  3020     0265  00F2               	movwf	??_lcd_write4Bit
  3021     0266                     u617:
  3022     0266  0BF2               	decfsz	??_lcd_write4Bit,f
  3023     0267  2A66               	goto	u617
  3024     0268  0000               	nop
  3025     0269                     l60:
  3026     0269  0008               	return
  3027     026A                     __end_of_lcd_write4Bit:
  3028                           
  3029                           	psect	text14
  3030     0238                     __ptext14:	
  3031 ;; *************** function _io_expanderWrite *****************
  3032 ;; Defined at:
  3033 ;;		line 87 in file "i2c.c"
  3034 ;; Parameters:    Size  Location     Type
  3035 ;;  data            1    wreg     unsigned char 
  3036 ;; Auto vars:     Size  Location     Type
  3037 ;;  data            1    1[COMMON] unsigned char 
  3038 ;; Return value:  Size  Location     Type
  3039 ;;                  1    wreg      void 
  3040 ;; Registers used:
  3041 ;;		wreg, status,2, status,0, pclath, cstack
  3042 ;; Tracked objects:
  3043 ;;		On entry : 0/0
  3044 ;;		On exit  : 0/0
  3045 ;;		Unchanged: 0/0
  3046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3047 ;;      Params:         0       0       0       0       0
  3048 ;;      Locals:         1       0       0       0       0
  3049 ;;      Temps:          0       0       0       0       0
  3050 ;;      Totals:         1       0       0       0       0
  3051 ;;Total ram usage:        1 bytes
  3052 ;; Hardware stack levels used: 1
  3053 ;; Hardware stack levels required when called: 2
  3054 ;; This function calls:
  3055 ;;		_i2c_masterStart
  3056 ;;		_i2c_masterStop
  3057 ;;		_i2c_masterWrite
  3058 ;; This function is called by:
  3059 ;;		_lcd_write4Bit
  3060 ;;		_backlight
  3061 ;;		_noBacklight
  3062 ;; This function uses a non-reentrant model
  3063 ;;
  3064                           
  3065     0238                     _io_expanderWrite:	
  3066                           ;psect for function _io_expanderWrite
  3067                           
  3068                           
  3069                           ;incstack = 0
  3070                           ; Regs used in _io_expanderWrite: [wreg+status,2+status,0+pclath+cstack]
  3071                           ;io_expanderWrite@data stored from wreg
  3072     0238  00F1               	movwf	io_expanderWrite@data
  3073     0239                     l1311:
  3074                           
  3075                           ;i2c.c: 88:     i2c_masterStart();
  3076     0239  120A  118A  21C1  120A  118A  	fcall	_i2c_masterStart
  3077                           
  3078                           ;i2c.c: 89:     i2c_masterWrite(i2c_add);
  3079     023E  087C               	movf	_i2c_add,w
  3080     023F  120A  118A  21DC  120A  118A  	fcall	_i2c_masterWrite
  3081                           
  3082                           ;i2c.c: 90:     i2c_masterWrite(data | backlight_state);
  3083     0244  0871               	movf	io_expanderWrite@data,w
  3084     0245  047D               	iorwf	_backlight_state,w
  3085     0246  120A  118A  21DC  120A  118A  	fcall	_i2c_masterWrite
  3086                           
  3087                           ;i2c.c: 91:     i2c_masterStop();
  3088     024B  120A  118A  21CA  120A  118A  	fcall	_i2c_masterStop
  3089     0250                     l57:
  3090     0250  0008               	return
  3091     0251                     __end_of_io_expanderWrite:
  3092                           
  3093                           	psect	text15
  3094     01DC                     __ptext15:	
  3095 ;; *************** function _i2c_masterWrite *****************
  3096 ;; Defined at:
  3097 ;;		line 44 in file "i2c.c"
  3098 ;; Parameters:    Size  Location     Type
  3099 ;;  data            1    wreg     unsigned char 
  3100 ;; Auto vars:     Size  Location     Type
  3101 ;;  data            1    0[COMMON] unsigned char 
  3102 ;; Return value:  Size  Location     Type
  3103 ;;                  1    wreg      unsigned char 
  3104 ;; Registers used:
  3105 ;;		wreg, status,2, status,0, pclath, cstack
  3106 ;; Tracked objects:
  3107 ;;		On entry : 0/0
  3108 ;;		On exit  : 0/0
  3109 ;;		Unchanged: 0/0
  3110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3111 ;;      Params:         0       0       0       0       0
  3112 ;;      Locals:         1       0       0       0       0
  3113 ;;      Temps:          0       0       0       0       0
  3114 ;;      Totals:         1       0       0       0       0
  3115 ;;Total ram usage:        1 bytes
  3116 ;; Hardware stack levels used: 1
  3117 ;; Hardware stack levels required when called: 1
  3118 ;; This function calls:
  3119 ;;		_i2c_masterWait
  3120 ;; This function is called by:
  3121 ;;		_io_expanderWrite
  3122 ;;		_rtc_readTime
  3123 ;;		_rtc_readDate
  3124 ;; This function uses a non-reentrant model
  3125 ;;
  3126                           
  3127     01DC                     _i2c_masterWrite:	
  3128                           ;psect for function _i2c_masterWrite
  3129                           
  3130                           
  3131                           ;incstack = 0
  3132                           ; Regs used in _i2c_masterWrite: [wreg+status,2+status,0+pclath+cstack]
  3133                           ;i2c_masterWrite@data stored from wreg
  3134     01DC  00F0               	movwf	i2c_masterWrite@data
  3135     01DD                     l1303:
  3136                           
  3137                           ;i2c.c: 45:     i2c_masterWait();
  3138     01DD  120A  118A  220A  120A  118A  	fcall	_i2c_masterWait
  3139     01E2                     l1305:
  3140                           
  3141                           ;i2c.c: 46:     SSPBUF = data;
  3142     01E2  0870               	movf	i2c_masterWrite@data,w
  3143     01E3  1283               	bcf	3,5	;RP0=0, select bank0
  3144     01E4  1303               	bcf	3,6	;RP1=0, select bank0
  3145     01E5  0093               	movwf	19	;volatile
  3146     01E6                     l1307:
  3147     01E6                     l48:	
  3148                           ;i2c.c: 47:     return ACKSTAT;;	Return value of _i2c_masterWrite is never used
  3149                           
  3150     01E6  0008               	return
  3151     01E7                     __end_of_i2c_masterWrite:
  3152                           
  3153                           	psect	text16
  3154     01CA                     __ptext16:	
  3155 ;; *************** function _i2c_masterStop *****************
  3156 ;; Defined at:
  3157 ;;		line 39 in file "i2c.c"
  3158 ;; Parameters:    Size  Location     Type
  3159 ;;		None
  3160 ;; Auto vars:     Size  Location     Type
  3161 ;;		None
  3162 ;; Return value:  Size  Location     Type
  3163 ;;                  1    wreg      void 
  3164 ;; Registers used:
  3165 ;;		wreg, status,2, status,0, pclath, cstack
  3166 ;; Tracked objects:
  3167 ;;		On entry : 0/0
  3168 ;;		On exit  : 0/0
  3169 ;;		Unchanged: 0/0
  3170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3171 ;;      Params:         0       0       0       0       0
  3172 ;;      Locals:         0       0       0       0       0
  3173 ;;      Temps:          0       0       0       0       0
  3174 ;;      Totals:         0       0       0       0       0
  3175 ;;Total ram usage:        0 bytes
  3176 ;; Hardware stack levels used: 1
  3177 ;; Hardware stack levels required when called: 1
  3178 ;; This function calls:
  3179 ;;		_i2c_masterWait
  3180 ;; This function is called by:
  3181 ;;		_io_expanderWrite
  3182 ;;		_rtc_readTime
  3183 ;;		_rtc_readDate
  3184 ;; This function uses a non-reentrant model
  3185 ;;
  3186                           
  3187     01CA                     _i2c_masterStop:	
  3188                           ;psect for function _i2c_masterStop
  3189                           
  3190     01CA                     l1299:	
  3191                           ;incstack = 0
  3192                           ; Regs used in _i2c_masterStop: [wreg+status,2+status,0+pclath+cstack]
  3193                           
  3194                           
  3195                           ;i2c.c: 40:     i2c_masterWait();
  3196     01CA  120A  118A  220A  120A  118A  	fcall	_i2c_masterWait
  3197     01CF                     l1301:
  3198                           
  3199                           ;i2c.c: 41:     SSPCON2bits.PEN |= 1;
  3200     01CF  1683               	bsf	3,5	;RP0=1, select bank1
  3201     01D0  1303               	bcf	3,6	;RP1=0, select bank1
  3202     01D1  1511               	bsf	17,2	;volatile
  3203     01D2                     l45:
  3204     01D2  0008               	return
  3205     01D3                     __end_of_i2c_masterStop:
  3206                           
  3207                           	psect	text17
  3208     01C1                     __ptext17:	
  3209 ;; *************** function _i2c_masterStart *****************
  3210 ;; Defined at:
  3211 ;;		line 23 in file "i2c.c"
  3212 ;; Parameters:    Size  Location     Type
  3213 ;;		None
  3214 ;; Auto vars:     Size  Location     Type
  3215 ;;		None
  3216 ;; Return value:  Size  Location     Type
  3217 ;;                  1    wreg      void 
  3218 ;; Registers used:
  3219 ;;		wreg, status,2, status,0, pclath, cstack
  3220 ;; Tracked objects:
  3221 ;;		On entry : 0/0
  3222 ;;		On exit  : 0/0
  3223 ;;		Unchanged: 0/0
  3224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3225 ;;      Params:         0       0       0       0       0
  3226 ;;      Locals:         0       0       0       0       0
  3227 ;;      Temps:          0       0       0       0       0
  3228 ;;      Totals:         0       0       0       0       0
  3229 ;;Total ram usage:        0 bytes
  3230 ;; Hardware stack levels used: 1
  3231 ;; Hardware stack levels required when called: 1
  3232 ;; This function calls:
  3233 ;;		_i2c_masterWait
  3234 ;; This function is called by:
  3235 ;;		_io_expanderWrite
  3236 ;;		_rtc_readTime
  3237 ;;		_rtc_readDate
  3238 ;; This function uses a non-reentrant model
  3239 ;;
  3240                           
  3241     01C1                     _i2c_masterStart:	
  3242                           ;psect for function _i2c_masterStart
  3243                           
  3244     01C1                     l1295:	
  3245                           ;incstack = 0
  3246                           ; Regs used in _i2c_masterStart: [wreg+status,2+status,0+pclath+cstack]
  3247                           
  3248                           
  3249                           ;i2c.c: 24:     i2c_masterWait();
  3250     01C1  120A  118A  220A  120A  118A  	fcall	_i2c_masterWait
  3251     01C6                     l1297:
  3252                           
  3253                           ;i2c.c: 25:     SSPCON2bits.SEN |= 1;
  3254     01C6  1683               	bsf	3,5	;RP0=1, select bank1
  3255     01C7  1303               	bcf	3,6	;RP1=0, select bank1
  3256     01C8  1411               	bsf	17,0	;volatile
  3257     01C9                     l36:
  3258     01C9  0008               	return
  3259     01CA                     __end_of_i2c_masterStart:
  3260                           
  3261                           	psect	text18
  3262     020A                     __ptext18:	
  3263 ;; *************** function _i2c_masterWait *****************
  3264 ;; Defined at:
  3265 ;;		line 16 in file "i2c.c"
  3266 ;; Parameters:    Size  Location     Type
  3267 ;;		None
  3268 ;; Auto vars:     Size  Location     Type
  3269 ;;		None
  3270 ;; Return value:  Size  Location     Type
  3271 ;;                  1    wreg      void 
  3272 ;; Registers used:
  3273 ;;		wreg, status,2
  3274 ;; Tracked objects:
  3275 ;;		On entry : 0/0
  3276 ;;		On exit  : 0/0
  3277 ;;		Unchanged: 0/0
  3278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3279 ;;      Params:         0       0       0       0       0
  3280 ;;      Locals:         0       0       0       0       0
  3281 ;;      Temps:          0       0       0       0       0
  3282 ;;      Totals:         0       0       0       0       0
  3283 ;;Total ram usage:        0 bytes
  3284 ;; Hardware stack levels used: 1
  3285 ;; This function calls:
  3286 ;;		Nothing
  3287 ;; This function is called by:
  3288 ;;		_i2c_masterStart
  3289 ;;		_i2c_masterRepeatedStart
  3290 ;;		_i2c_masterStop
  3291 ;;		_i2c_masterWrite
  3292 ;;		_i2c_readByte
  3293 ;;		_i2c_masterRead
  3294 ;; This function uses a non-reentrant model
  3295 ;;
  3296                           
  3297     020A                     _i2c_masterWait:	
  3298                           ;psect for function _i2c_masterWait
  3299                           
  3300     020A                     l1291:	
  3301                           ;incstack = 0
  3302                           ; Regs used in _i2c_masterWait: [wreg+status,2]
  3303                           
  3304     020A                     l30:	
  3305                           ;i2c.c: 17:     while((SSPSTAT & 0b00000100) || (SSPCON2 & 0b00011111));
  3306                           
  3307     020A  1683               	bsf	3,5	;RP0=1, select bank1
  3308     020B  1303               	bcf	3,6	;RP1=0, select bank1
  3309     020C  1914               	btfsc	20,2	;volatile
  3310     020D  2A0F               	goto	u251
  3311     020E  2A10               	goto	u250
  3312     020F                     u251:
  3313     020F  2A0A               	goto	l30
  3314     0210                     u250:
  3315     0210                     l1293:
  3316     0210  0811               	movf	17,w	;volatile
  3317     0211  391F               	andlw	31
  3318     0212  1D03               	btfss	3,2
  3319     0213  2A15               	goto	u261
  3320     0214  2A16               	goto	u260
  3321     0215                     u261:
  3322     0215  2A0A               	goto	l30
  3323     0216                     u260:
  3324     0216                     l33:
  3325     0216  0008               	return
  3326     0217                     __end_of_i2c_masterWait:
  3327                           
  3328                           	psect	text19
  3329     01F2                     __ptext19:	
  3330 ;; *************** function _i2c_masterInit *****************
  3331 ;; Defined at:
  3332 ;;		line 7 in file "i2c.c"
  3333 ;; Parameters:    Size  Location     Type
  3334 ;;		None
  3335 ;; Auto vars:     Size  Location     Type
  3336 ;;		None
  3337 ;; Return value:  Size  Location     Type
  3338 ;;                  1    wreg      void 
  3339 ;; Registers used:
  3340 ;;		wreg, status,2, status,0
  3341 ;; Tracked objects:
  3342 ;;		On entry : 0/0
  3343 ;;		On exit  : 0/0
  3344 ;;		Unchanged: 0/0
  3345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3346 ;;      Params:         0       0       0       0       0
  3347 ;;      Locals:         0       0       0       0       0
  3348 ;;      Temps:          0       0       0       0       0
  3349 ;;      Totals:         0       0       0       0       0
  3350 ;;Total ram usage:        0 bytes
  3351 ;; Hardware stack levels used: 1
  3352 ;; This function calls:
  3353 ;;		Nothing
  3354 ;; This function is called by:
  3355 ;;		_main
  3356 ;; This function uses a non-reentrant model
  3357 ;;
  3358                           
  3359     01F2                     _i2c_masterInit:	
  3360                           ;psect for function _i2c_masterInit
  3361                           
  3362     01F2                     l1349:	
  3363                           ;incstack = 0
  3364                           ; Regs used in _i2c_masterInit: [wreg+status,2+status,0]
  3365                           
  3366                           
  3367                           ;i2c.c: 8:     SSPCONbits.SSPM |= 0b1000;
  3368     01F2  3008               	movlw	8
  3369     01F3  1283               	bcf	3,5	;RP0=0, select bank0
  3370     01F4  1303               	bcf	3,6	;RP1=0, select bank0
  3371     01F5  0494               	iorwf	20,f	;volatile
  3372     01F6                     l1351:
  3373                           
  3374                           ;i2c.c: 9:     SSPCONbits.SSPEN |= 1;
  3375     01F6  1694               	bsf	20,5	;volatile
  3376     01F7                     l1353:
  3377                           
  3378                           ;i2c.c: 10:     SSPCON2 &= 0x00;
  3379     01F7  1683               	bsf	3,5	;RP0=1, select bank1
  3380     01F8  1303               	bcf	3,6	;RP1=0, select bank1
  3381     01F9  0191               	clrf	17	;volatile
  3382     01FA                     l1355:
  3383                           
  3384                           ;i2c.c: 12:     SSPSTAT &= 0x00;
  3385     01FA  0194               	clrf	20	;volatile
  3386     01FB                     l1357:
  3387                           
  3388                           ;i2c.c: 13:     SSPADD = ((16000000/4)/10000)-1;
  3389     01FB  308F               	movlw	143
  3390     01FC  0093               	movwf	19	;volatile
  3391     01FD                     l27:
  3392     01FD  0008               	return
  3393     01FE                     __end_of_i2c_masterInit:
  3394                           
  3395                           	psect	text20
  3396     029F                     __ptext20:	
  3397 ;; *************** function _DHT11_Start *****************
  3398 ;; Defined at:
  3399 ;;		line 26 in file "sensors.c"
  3400 ;; Parameters:    Size  Location     Type
  3401 ;;		None
  3402 ;; Auto vars:     Size  Location     Type
  3403 ;;		None
  3404 ;; Return value:  Size  Location     Type
  3405 ;;                  1    wreg      void 
  3406 ;; Registers used:
  3407 ;;		wreg
  3408 ;; Tracked objects:
  3409 ;;		On entry : 0/0
  3410 ;;		On exit  : 0/0
  3411 ;;		Unchanged: 0/0
  3412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3413 ;;      Params:         0       0       0       0       0
  3414 ;;      Locals:         0       0       0       0       0
  3415 ;;      Temps:          2       0       0       0       0
  3416 ;;      Totals:         2       0       0       0       0
  3417 ;;Total ram usage:        2 bytes
  3418 ;; Hardware stack levels used: 1
  3419 ;; This function calls:
  3420 ;;		Nothing
  3421 ;; This function is called by:
  3422 ;;		_main
  3423 ;; This function uses a non-reentrant model
  3424 ;;
  3425                           
  3426     029F                     _DHT11_Start:	
  3427                           ;psect for function _DHT11_Start
  3428                           
  3429     029F                     l1449:	
  3430                           ;incstack = 0
  3431                           ; Regs used in _DHT11_Start: [wreg]
  3432                           
  3433                           
  3434                           ;sensors.c: 28:     TRISD = 0x7F;
  3435     029F  307F               	movlw	127
  3436     02A0  1683               	bsf	3,5	;RP0=1, select bank1
  3437     02A1  1303               	bcf	3,6	;RP1=0, select bank1
  3438     02A2  0088               	movwf	8	;volatile
  3439     02A3                     l1451:
  3440                           
  3441                           ;sensors.c: 29:     PORTDbits.RD1 = 0;
  3442     02A3  1283               	bcf	3,5	;RP0=0, select bank0
  3443     02A4  1303               	bcf	3,6	;RP1=0, select bank0
  3444     02A5  1088               	bcf	8,1	;volatile
  3445                           
  3446                           ;sensors.c: 30:     _delay((unsigned long)((18)*(16000000/4000.0)));
  3447     02A6  305E               	movlw	94
  3448     02A7  00F1               	movwf	??_DHT11_Start+1
  3449     02A8  3080               	movlw	128
  3450     02A9  00F0               	movwf	??_DHT11_Start
  3451     02AA                     u627:
  3452     02AA  0BF0               	decfsz	??_DHT11_Start,f
  3453     02AB  2AAA               	goto	u627
  3454     02AC  0BF1               	decfsz	??_DHT11_Start+1,f
  3455     02AD  2AAA               	goto	u627
  3456     02AE  0000               	nop
  3457     02AF                     l1453:
  3458                           
  3459                           ;sensors.c: 31:     PORTDbits.RD1 = 1;
  3460     02AF  1283               	bcf	3,5	;RP0=0, select bank0
  3461     02B0  1303               	bcf	3,6	;RP1=0, select bank0
  3462     02B1  1488               	bsf	8,1	;volatile
  3463                           
  3464                           ;sensors.c: 32:     _delay((unsigned long)((40)*(16000000/4000000.0)));
  3465     02B2  3035               	movlw	53
  3466     02B3  00F0               	movwf	??_DHT11_Start
  3467     02B4                     u637:
  3468     02B4  0BF0               	decfsz	??_DHT11_Start,f
  3469     02B5  2AB4               	goto	u637
  3470                           
  3471                           ;sensors.c: 33:     TRISD = 0x80;
  3472     02B6  3080               	movlw	128
  3473     02B7  1683               	bsf	3,5	;RP0=1, select bank1
  3474     02B8  1303               	bcf	3,6	;RP1=0, select bank1
  3475     02B9  0088               	movwf	8	;volatile
  3476     02BA                     l262:
  3477     02BA  0008               	return
  3478     02BB                     __end_of_DHT11_Start:
  3479                           
  3480                           	psect	text21
  3481     0342                     __ptext21:	
  3482 ;; *************** function _DHT11_ReadData *****************
  3483 ;; Defined at:
  3484 ;;		line 8 in file "sensors.c"
  3485 ;; Parameters:    Size  Location     Type
  3486 ;;		None
  3487 ;; Auto vars:     Size  Location     Type
  3488 ;;  i               1    3[COMMON] unsigned char 
  3489 ;;  data            1    2[COMMON] unsigned char 
  3490 ;; Return value:  Size  Location     Type
  3491 ;;                  1    wreg      unsigned char 
  3492 ;; Registers used:
  3493 ;;		wreg, status,2, status,0
  3494 ;; Tracked objects:
  3495 ;;		On entry : 0/0
  3496 ;;		On exit  : 0/0
  3497 ;;		Unchanged: 0/0
  3498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3499 ;;      Params:         0       0       0       0       0
  3500 ;;      Locals:         2       0       0       0       0
  3501 ;;      Temps:          2       0       0       0       0
  3502 ;;      Totals:         4       0       0       0       0
  3503 ;;Total ram usage:        4 bytes
  3504 ;; Hardware stack levels used: 1
  3505 ;; This function calls:
  3506 ;;		Nothing
  3507 ;; This function is called by:
  3508 ;;		_main
  3509 ;; This function uses a non-reentrant model
  3510 ;;
  3511                           
  3512     0342                     _DHT11_ReadData:	
  3513                           ;psect for function _DHT11_ReadData
  3514                           
  3515     0342                     l1467:	
  3516                           ;incstack = 0
  3517                           ; Regs used in _DHT11_ReadData: [wreg+status,2+status,0]
  3518                           
  3519                           
  3520                           ;sensors.c: 9:    char i, data = 0;
  3521     0342  01F2               	clrf	DHT11_ReadData@data
  3522                           
  3523                           ;sensors.c: 11:    for(i = 0; i < 8; i++)
  3524     0343  01F3               	clrf	DHT11_ReadData@i
  3525     0344                     l251:
  3526     0344  1283               	bcf	3,5	;RP0=0, select bank0
  3527     0345  1303               	bcf	3,6	;RP1=0, select bank0
  3528     0346  1C88               	btfss	8,1	;volatile
  3529     0347  2B49               	goto	u361
  3530     0348  2B4A               	goto	u360
  3531     0349                     u361:
  3532     0349  2B44               	goto	l251
  3533     034A                     u360:
  3534     034A                     l1473:
  3535                           
  3536                           ;sensors.c: 14:         _delay((unsigned long)((30)*(16000000/4000000.0)));
  3537     034A  3027               	movlw	39
  3538     034B  00F0               	movwf	??_DHT11_ReadData
  3539     034C                     u647:
  3540     034C  0BF0               	decfsz	??_DHT11_ReadData,f
  3541     034D  2B4C               	goto	u647
  3542     034E  2B4F               	nop2
  3543     034F                     l1475:
  3544                           
  3545                           ;sensors.c: 15:         if(PORTDbits.RD1 == 0)
  3546     034F  1283               	bcf	3,5	;RP0=0, select bank0
  3547     0350  1303               	bcf	3,6	;RP1=0, select bank0
  3548     0351  1888               	btfsc	8,1	;volatile
  3549     0352  2B54               	goto	u371
  3550     0353  2B55               	goto	u370
  3551     0354                     u371:
  3552     0354  2B66               	goto	l1479
  3553     0355                     u370:
  3554     0355                     l1477:
  3555                           
  3556                           ;sensors.c: 16:             data &= ~(1 << (7 - i));
  3557     0355  3001               	movlw	1
  3558     0356  00F0               	movwf	??_DHT11_ReadData
  3559     0357  0873               	movf	DHT11_ReadData@i,w
  3560     0358  3C07               	sublw	7
  3561     0359  3E01               	addlw	1
  3562     035A  2B5D               	goto	u384
  3563     035B                     u385:
  3564     035B  1003               	clrc
  3565     035C  0DF0               	rlf	??_DHT11_ReadData,f
  3566     035D                     u384:
  3567     035D  3EFF               	addlw	-1
  3568     035E  1D03               	skipz
  3569     035F  2B5B               	goto	u385
  3570     0360  0870               	movf	??_DHT11_ReadData,w
  3571     0361  3AFF               	xorlw	255
  3572     0362  00F1               	movwf	??_DHT11_ReadData+1
  3573     0363  0871               	movf	??_DHT11_ReadData+1,w
  3574     0364  05F2               	andwf	DHT11_ReadData@data,f
  3575     0365  2B79               	goto	l1481
  3576     0366                     l1479:
  3577                           
  3578                           ;sensors.c: 18:         {;sensors.c: 19:             data |= (1 << (7 - i));
  3579     0366  3001               	movlw	1
  3580     0367  00F0               	movwf	??_DHT11_ReadData
  3581     0368  0873               	movf	DHT11_ReadData@i,w
  3582     0369  3C07               	sublw	7
  3583     036A  3E01               	addlw	1
  3584     036B  2B6E               	goto	u394
  3585     036C                     u395:
  3586     036C  1003               	clrc
  3587     036D  0DF0               	rlf	??_DHT11_ReadData,f
  3588     036E                     u394:
  3589     036E  3EFF               	addlw	-1
  3590     036F  1D03               	skipz
  3591     0370  2B6C               	goto	u395
  3592     0371  0870               	movf	??_DHT11_ReadData,w
  3593     0372  00F1               	movwf	??_DHT11_ReadData+1
  3594     0373  0871               	movf	??_DHT11_ReadData+1,w
  3595     0374  04F2               	iorwf	DHT11_ReadData@data,f
  3596     0375                     l256:	
  3597                           ;sensors.c: 20:             while(PORTDbits.RD1);
  3598                           
  3599     0375  1888               	btfsc	8,1	;volatile
  3600     0376  2B78               	goto	u401
  3601     0377  2B79               	goto	u400
  3602     0378                     u401:
  3603     0378  2B75               	goto	l256
  3604     0379                     u400:
  3605     0379                     l1481:
  3606                           
  3607                           ;sensors.c: 22:     }
  3608     0379  3001               	movlw	1
  3609     037A  00F0               	movwf	??_DHT11_ReadData
  3610     037B  0870               	movf	??_DHT11_ReadData,w
  3611     037C  07F3               	addwf	DHT11_ReadData@i,f
  3612     037D                     l1483:
  3613     037D  3008               	movlw	8
  3614     037E  0273               	subwf	DHT11_ReadData@i,w
  3615     037F  1C03               	skipc
  3616     0380  2B82               	goto	u411
  3617     0381  2B83               	goto	u410
  3618     0382                     u411:
  3619     0382  2B44               	goto	l251
  3620     0383                     u410:
  3621     0383                     l1485:
  3622                           
  3623                           ;sensors.c: 23:   return data;
  3624     0383  0872               	movf	DHT11_ReadData@data,w
  3625     0384                     l259:
  3626     0384  0008               	return
  3627     0385                     __end_of_DHT11_ReadData:
  3628                           
  3629                           	psect	text22
  3630     02D7                     __ptext22:	
  3631 ;; *************** function _DHT11_CheckResponse *****************
  3632 ;; Defined at:
  3633 ;;		line 37 in file "sensors.c"
  3634 ;; Parameters:    Size  Location     Type
  3635 ;;		None
  3636 ;; Auto vars:     Size  Location     Type
  3637 ;;		None
  3638 ;; Return value:  Size  Location     Type
  3639 ;;                  1    wreg      void 
  3640 ;; Registers used:
  3641 ;;		wreg, status,2
  3642 ;; Tracked objects:
  3643 ;;		On entry : 0/0
  3644 ;;		On exit  : 0/0
  3645 ;;		Unchanged: 0/0
  3646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3647 ;;      Params:         0       0       0       0       0
  3648 ;;      Locals:         0       0       0       0       0
  3649 ;;      Temps:          1       0       0       0       0
  3650 ;;      Totals:         1       0       0       0       0
  3651 ;;Total ram usage:        1 bytes
  3652 ;; Hardware stack levels used: 1
  3653 ;; This function calls:
  3654 ;;		Nothing
  3655 ;; This function is called by:
  3656 ;;		_main
  3657 ;; This function uses a non-reentrant model
  3658 ;;
  3659                           
  3660     02D7                     _DHT11_CheckResponse:	
  3661                           ;psect for function _DHT11_CheckResponse
  3662                           
  3663     02D7                     l1455:	
  3664                           ;incstack = 0
  3665                           ; Regs used in _DHT11_CheckResponse: [wreg+status,2]
  3666                           
  3667                           
  3668                           ;sensors.c: 38:     check_bit = 0;
  3669     02D7  1283               	bcf	3,5	;RP0=0, select bank0
  3670     02D8  1303               	bcf	3,6	;RP1=0, select bank0
  3671     02D9  01CD               	clrf	_check_bit
  3672     02DA  01CE               	clrf	_check_bit+1
  3673     02DB                     l1457:
  3674                           
  3675                           ;sensors.c: 39:     _delay((unsigned long)((40)*(16000000/4000000.0)));
  3676     02DB  3035               	movlw	53
  3677     02DC  00F0               	movwf	??_DHT11_CheckResponse
  3678     02DD                     u657:
  3679     02DD  0BF0               	decfsz	??_DHT11_CheckResponse,f
  3680     02DE  2ADD               	goto	u657
  3681     02DF                     l1459:
  3682                           
  3683                           ;sensors.c: 40:     if(PORTDbits.RD1 == 0)
  3684     02DF  1283               	bcf	3,5	;RP0=0, select bank0
  3685     02E0  1303               	bcf	3,6	;RP1=0, select bank0
  3686     02E1  1888               	btfsc	8,1	;volatile
  3687     02E2  2AE4               	goto	u341
  3688     02E3  2AE5               	goto	u340
  3689     02E4                     u341:
  3690     02E4  2AF9               	goto	l267
  3691     02E5                     u340:
  3692     02E5                     l1461:
  3693                           
  3694                           ;sensors.c: 41:     {;sensors.c: 42:         _delay((unsigned long)((80)*(16000000/40000
      +                          00.0)));
  3695     02E5  306A               	movlw	106
  3696     02E6  00F0               	movwf	??_DHT11_CheckResponse
  3697     02E7                     u667:
  3698     02E7  0BF0               	decfsz	??_DHT11_CheckResponse,f
  3699     02E8  2AE7               	goto	u667
  3700     02E9  0000               	nop
  3701     02EA                     l1463:
  3702                           
  3703                           ;sensors.c: 43:         if (PORTDbits.RD1 == 1)
  3704     02EA  1283               	bcf	3,5	;RP0=0, select bank0
  3705     02EB  1303               	bcf	3,6	;RP1=0, select bank0
  3706     02EC  1C88               	btfss	8,1	;volatile
  3707     02ED  2AEF               	goto	u351
  3708     02EE  2AF0               	goto	u350
  3709     02EF                     u351:
  3710     02EF  2AF4               	goto	l266
  3711     02F0                     u350:
  3712     02F0                     l1465:
  3713                           
  3714                           ;sensors.c: 44:             check_bit = 1;
  3715     02F0  3001               	movlw	1
  3716     02F1  00CD               	movwf	_check_bit
  3717     02F2  3000               	movlw	0
  3718     02F3  00CE               	movwf	_check_bit+1
  3719     02F4                     l266:
  3720                           
  3721                           ;sensors.c: 45:         _delay((unsigned long)((50)*(16000000/4000000.0)));
  3722     02F4  3042               	movlw	66
  3723     02F5  00F0               	movwf	??_DHT11_CheckResponse
  3724     02F6                     u677:
  3725     02F6  0BF0               	decfsz	??_DHT11_CheckResponse,f
  3726     02F7  2AF6               	goto	u677
  3727     02F8  0000               	nop
  3728     02F9                     l267:
  3729     02F9  0008               	return
  3730     02FA                     __end_of_DHT11_CheckResponse:
  3731     007E                     btemp	set	126	;btemp
  3732     007E                     wtemp0	set	126
  3733                           
  3734                           	psect	idloc
  3735                           
  3736                           ;Config register IDLOC0 @ 0x2000
  3737                           ;	unspecified, using default values
  3738     2000                     	org	8192
  3739     2000  3FFF               	dw	16383
  3740                           
  3741                           ;Config register IDLOC1 @ 0x2001
  3742                           ;	unspecified, using default values
  3743     2001                     	org	8193
  3744     2001  3FFF               	dw	16383
  3745                           
  3746                           ;Config register IDLOC2 @ 0x2002
  3747                           ;	unspecified, using default values
  3748     2002                     	org	8194
  3749     2002  3FFF               	dw	16383
  3750                           
  3751                           ;Config register IDLOC3 @ 0x2003
  3752                           ;	unspecified, using default values
  3753     2003                     	org	8195
  3754     2003  3FFF               	dw	16383
  3755                           
  3756                           	psect	config
  3757                           
  3758                           ;Config register CONFIG1 @ 0x2007
  3759                           ;	Oscillator Selection bits
  3760                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3761                           ;	Watchdog Timer Enable bit
  3762                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3763                           ;	Power-up Timer Enable bit
  3764                           ;	PWRTE = ON, PWRT enabled
  3765                           ;	RE3/MCLR pin function select bit
  3766                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  3767                           ;	Code Protection bit
  3768                           ;	CP = OFF, Program memory code protection is disabled
  3769                           ;	Data Code Protection bit
  3770                           ;	CPD = OFF, Data memory code protection is disabled
  3771                           ;	Brown Out Reset Selection bits
  3772                           ;	BOREN = ON, BOR enabled
  3773                           ;	Internal External Switchover bit
  3774                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3775                           ;	Fail-Safe Clock Monitor Enabled bit
  3776                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3777                           ;	Low Voltage Programming Enable bit
  3778                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3779                           ;	In-Circuit Debugger Mode bit
  3780                           ;	DEBUG = 0x1, unprogrammed default
  3781     2007                     	org	8199
  3782     2007  23E4               	dw	9188
  3783                           
  3784                           ;Config register CONFIG2 @ 0x2008
  3785                           ;	Brown-out Reset Selection bit
  3786                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3787                           ;	Flash Program Memory Self Write Enable bits
  3788                           ;	WRT = OFF, Write protection off
  3789     2008                     	org	8200
  3790     2008  3FFF               	dw	16383

Data Sizes:
    Strings     108
    Constant    0
    Data        15
    BSS         18
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      14
    BANK0            80     31      61
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_writeString@str	PTR unsigned char  size(1) Largest target is 13
		 -> STR_21(CODE[7]), STR_20(CODE[13]), STR_19(CODE[8]), STR_18(CODE[6]), 
		 -> STR_17(CODE[6]), STR_16(CODE[8]), STR_15(CODE[4]), STR_14(CODE[4]), 
		 -> STR_13(CODE[4]), STR_12(CODE[4]), STR_11(CODE[4]), STR_10(CODE[4]), 
		 -> STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[2]), STR_6(CODE[2]), 
		 -> STR_5(CODE[6]), STR_4(CODE[2]), STR_3(CODE[2]), STR_2(CODE[7]), 
		 -> STR_1(CODE[13]), 


Critical Paths under _main in COMMON

    _main->_lcd_init
    _rtc_readTime->_i2c_readByte
    _rtc_readDate->_i2c_readByte
    _lcd_writeString->_lcd_writeChar
    _lcd_writeChar->_lcd_write4Bit
    _lcd_setCursor->_lcd_cmd
    _lcd_init->_lcd_cmd
    _lcd_clear->_lcd_cmd
    _lcd_cmd->_lcd_write4Bit
    _lcd_write4Bit->_io_expanderWrite
    _io_expanderWrite->_i2c_masterWrite

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                31    31      0    2920
                                              0 BANK0     31    31      0
                _DHT11_CheckResponse
                     _DHT11_ReadData
                        _DHT11_Start
                     _i2c_masterInit
                          _lcd_clear
                           _lcd_init
                      _lcd_setCursor
                      _lcd_writeChar
                    _lcd_writeString
                _rtc_convLowerNibble
                _rtc_convUpperNibble
                       _rtc_readDate
                       _rtc_readTime
 ---------------------------------------------------------------------------------
 (1) _rtc_readTime                                         3     3      0     111
                                              2 COMMON     3     3      0
            _i2c_masterRepeatedStart
                    _i2c_masterStart
                     _i2c_masterStop
                    _i2c_masterWrite
                       _i2c_readByte
 ---------------------------------------------------------------------------------
 (1) _rtc_readDate                                         3     3      0     111
                                              2 COMMON     3     3      0
            _i2c_masterRepeatedStart
                    _i2c_masterStart
                     _i2c_masterStop
                    _i2c_masterWrite
                       _i2c_readByte
 ---------------------------------------------------------------------------------
 (2) _i2c_readByte                                         2     2      0      45
                                              0 COMMON     2     2      0
                     _i2c_masterWait
 ---------------------------------------------------------------------------------
 (2) _i2c_masterRepeatedStart                              0     0      0       0
                     _i2c_masterWait
 ---------------------------------------------------------------------------------
 (1) _rtc_convUpperNibble                                  2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _rtc_convLowerNibble                                  1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _lcd_writeString                                      3     3      0     916
                                              6 COMMON     3     3      0
                      _lcd_writeChar
 ---------------------------------------------------------------------------------
 (2) _lcd_writeChar                                        2     2      0     133
                                              4 COMMON     2     2      0
                      _lcd_write4Bit
 ---------------------------------------------------------------------------------
 (1) _lcd_setCursor                                        2     1      1     905
                                              6 COMMON     2     1      1
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             4     4      0     155
                                              6 COMMON     4     4      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_clear                                            1     1      0     133
                                              6 COMMON     1     1      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              2     2      0     133
                                              4 COMMON     2     2      0
                      _lcd_write4Bit
 ---------------------------------------------------------------------------------
 (3) _lcd_write4Bit                                        2     2      0      89
                                              2 COMMON     2     2      0
                   _io_expanderWrite
 ---------------------------------------------------------------------------------
 (4) _io_expanderWrite                                     1     1      0      44
                                              1 COMMON     1     1      0
                    _i2c_masterStart
                     _i2c_masterStop
                    _i2c_masterWrite
 ---------------------------------------------------------------------------------
 (2) _i2c_masterWrite                                      1     1      0      22
                                              0 COMMON     1     1      0
                     _i2c_masterWait
 ---------------------------------------------------------------------------------
 (2) _i2c_masterStop                                       0     0      0       0
                     _i2c_masterWait
 ---------------------------------------------------------------------------------
 (2) _i2c_masterStart                                      0     0      0       0
                     _i2c_masterWait
 ---------------------------------------------------------------------------------
 (3) _i2c_masterWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _i2c_masterInit                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DHT11_Start                                          2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _DHT11_ReadData                                       4     4      0     115
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _DHT11_CheckResponse                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DHT11_CheckResponse
   _DHT11_ReadData
   _DHT11_Start
   _i2c_masterInit
   _lcd_clear
     _lcd_cmd
       _lcd_write4Bit
         _io_expanderWrite
           _i2c_masterStart
             _i2c_masterWait
           _i2c_masterStop
             _i2c_masterWait
           _i2c_masterWrite
             _i2c_masterWait
   _lcd_init
     _lcd_cmd
   _lcd_setCursor
     _lcd_cmd
   _lcd_writeChar
     _lcd_write4Bit
   _lcd_writeString
     _lcd_writeChar
   _rtc_convLowerNibble
   _rtc_convUpperNibble
   _rtc_readDate
     _i2c_masterRepeatedStart
       _i2c_masterWait
     _i2c_masterStart
     _i2c_masterStop
     _i2c_masterWrite
     _i2c_readByte
       _i2c_masterWait
   _rtc_readTime
     _i2c_masterRepeatedStart
     _i2c_masterStart
     _i2c_masterStop
     _i2c_masterWrite
     _i2c_readByte

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1F      3D       5       76.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      4B      12        0.0%
ABS                  0      0      4B       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue May 02 09:19:07 2023

            _rtc_convUpperNibble 01FE                                pc 0002                   ?_lcd_setCursor 0076  
                             l30 020A                               l33 0216                               l42 01DB  
                             l27 01FD                               l51 031C                               l36 01C9  
                             l60 0269                               l45 01D2                               l54 04F2  
                             l63 0283                               l48 01E6                               l72 0341  
                             l57 0250                               l66 029E                               l93 01F1  
                             l78 02D6                               _RS 007B                               fsr 0004  
                            l216 0209                              l251 0344                              l219 01B8  
                            l228 03E8                              l262 02BA                              l238 045E  
                            l166 055C                              l256 0375                              l266 02F4  
                            l267 02F9                              l259 0384                              u300 0341  
                            u301 0340                              u310 02C1                              u311 02C0  
                            u400 0379                              u320 02CF                              u401 0378  
                            u321 02CE                              u410 0383                              u250 0210  
                            u411 0382                              u251 020F                              u340 02E5  
                            u260 0216                              u420 04FE                              u341 02E4  
                            u261 0215                              u350 02F0                              u270 0318  
                            u430 055C                              u351 02EF                              u335 0202  
                            u271 0315                              u431 055B                              u360 034A  
                            u440 0560                              u361 0349                              u441 055F  
                            u370 0355                              u450 056D                              u371 0354  
                            u451 056C                              u507 0542                              u460 0577  
                            u285 0276                              u517 0466                              u461 0576  
                            u470 06DE                              u607 01EF                              u527 0474  
                            u295 0291                              u471 06DD                              u384 035D  
                            u480 06F0                              u385 035B                              u617 0266  
                            u537 0483                              u481 06EF                              u394 036E  
                            u490 0753                              u395 036C                              u627 02AA  
                            u547 0492                              u491 0752                              u637 02B4  
                            u557 04A1                              u647 034C                              u567 04B2  
                            u495 074F                              u657 02DD                              u577 04C5  
                            u667 02E7                              u587 04D8                              u677 02F6  
                            u597 04EB                              _day 0045                              _min 0049  
                            _sec 004B                              fsr0 0004                              indf 0000  
           ?_rtc_convUpperNibble 0070                             l1301 01CF                             l1303 01DD  
                           l1311 0239                             l1305 01E2                             l1313 0252  
                           l1401 01ED                             l1321 01D8                             l1307 01E6  
                           l1315 0256                             l1331 0311                             l1323 02FB  
                           l1403 0386                             l1317 025D                             l1341 026C  
                           l1333 0318                             l1325 0300                             l1421 03EA  
                           l1405 03A3                             l1413 03D0                             l1351 01F6  
                           l1343 0273                             l1319 01D3                             l1335 031B  
                           l1327 0308                             l1423 0407                             l1407 03B2  
                           l1415 03E3                             l1353 01F7                             l1361 046A  
                           l1345 0285                             l1441 01FF                             l1329 030C  
                           l1425 0416                             l1433 0443                             l1409 03C1  
                           l1601 0695                             l1521 0512                             l1513 04F3  
                           l1451 02A3                             l1355 01FA                             l1291 020A  
                           l1339 026B                             l1371 049D                             l1363 0470  
                           l1347 0287                             l1427 0425                             l1435 0459  
                           l1603 069C                             l1611 06D9                             l1531 0522  
                           l1523 0513                             l1515 04F6                             l1461 02E5  
                           l1453 02AF                             l1357 01FB                             l1349 01F2  
                           l1293 0210                             l1381 04E5                             l1373 04AC  
                           l1365 047F                             l1445 01B5                             l1429 0434  
                           l1621 0753                             l1613 06DE                             l1605 06A3  
                           l1541 0534                             l1533 0525                             l1525 0518  
                           l1517 050B                             l1463 02EA                             l1455 02D7  
                           l1295 01C1                             l1375 04B9                             l1367 0488  
                           l1359 0460                             l1391 02BC                             l1383 031E  
                           l1631 0794                             l1623 0760                             l1615 06E8  
                           l1543 053A                             l1535 0528                             l1527 051E  
                           l1519 0511                             l1465 02F0                             l1457 02DB  
                           l1481 0379                             l1473 034A                             l1449 029F  
                           l1297 01C6                             l1377 04CC                             l1369 0497  
                           l1393 02C1                             l1385 0321                             l1641 07C6  
                           l1633 07A1                             l1625 0766                             l1617 06F0  
                           l1721 06C2                             l1609 06AA                             l1553 0560  
                           l1561 0572                             l1545 0549                             l1537 052B  
                           l1529 0521                             l1459 02DF                             l1483 037D  
                           l1475 034F                             l1467 0342                             l1299 01CA  
                           l1379 04D2                             l1395 02C9                             l1387 032E  
                           l1723 03D8                             l1643 07CC                             l1627 0774  
                           l1635 07AF                             l1619 0731                             l1571 05CF  
                           l1563 0577                             l1555 0565                             l1547 054E  
                           l1539 052C                             l1485 0383                             l1477 0355  
                           l1397 02CF                             l1389 0334                             l1725 044B  
                           l1637 07B7                             l1629 0781                             l1581 0624  
                           l1573 05DC                             l1565 05A1                             l1557 056D  
                           l1549 0556                             l1479 0366                             l1399 01E7  
                           l1639 07BE                             l1591 0672                             l1583 0631  
                           l1575 05E9                             l1567 05A9                             l1559 056E  
                           l1593 0679                             l1585 0651                             l1577 0611  
                           l1569 05C9                             l1595 0680                             l1587 0657  
                           l1579 0617                             l1597 0687                             l1589 0664  
                           l1599 068E                             STR_1 0009                             STR_2 0033  
                           STR_3 0045                             STR_4 0045                             STR_5 0041  
                           STR_6 0073                             STR_7 0073                             STR_8 0067  
                           STR_9 0063          _i2c_masterRepeatedStart 01D3                             _WPUB 0095  
                 ?_lcd_write4Bit 0070                             _date 0043                             _main 04F3  
                           _hour 0047                             _year 003F                    ?_i2c_readByte 0070  
                           btemp 007E                   ?_lcd_writeChar 0070                             start 0000  
               ??_DHT11_ReadData 0070                  _backlight_state 007D                     _status_alarm 007A  
              lcd_writeChar@data 0075                            ?_main 0070                            STR_10 005B  
                          STR_11 0057                            STR_12 006F                            STR_20 0016  
                          STR_13 005F                            STR_21 003A                            STR_14 006B  
                          STR_15 0053                            STR_16 002B                            STR_17 004D  
                          STR_18 0047                            STR_19 0023                            _TRISB 0086  
                          _TRISD 0088                 lcd_writeString@i 0076            ??_rtc_convUpperNibble 0070  
                __end_of_lcd_cmd 0284                   _i2c_masterInit 01F2          __end_of_lcd_writeString 0342  
                 _i2c_masterWait 020A                   _i2c_masterStop 01CA                            _month 0041  
                          pclath 000A                   ??_i2c_readByte 0070                            status 0003  
                          wtemp0 007E     rtc_readDate@calendar_address 0074                  __initialization 07DE  
                ??_lcd_setCursor 0077                     __end_of_main 07DE                           ??_main 0020  
         __end_of_i2c_masterInit 01FE           __end_of_i2c_masterWait 0217           __end_of_i2c_masterStop 01D3  
      ??_i2c_masterRepeatedStart 0070              _DHT11_CheckResponse 02D7                           _ANSELH 0189  
                ??_lcd_write4Bit 0072                  ??_lcd_writeChar 0074                           _OSCCON 008F  
                         _SSPADD 0093                           _SSPBUF 0013                 __end_of_lcd_init 04F3  
                _i2c_masterStart 01C1                  _i2c_masterWrite 01DC             ?_DHT11_CheckResponse 0070  
                      ??_lcd_cmd 0074                    main@week_days 0026             io_expanderWrite@data 0071  
                   __pdataCOMMON 007D                  ?_i2c_masterInit 0070                  ?_i2c_masterWait 0070  
                ?_i2c_masterStop 0070                 ?_lcd_writeString 0070                 _io_expanderWrite 0238  
        __end_of__initialization 07FC                   __pcstackCOMMON 0070                     __pidataBANK0 0217  
          ??_DHT11_CheckResponse 0070                 lcd_setCursor@col 0076                 lcd_setCursor@row 0077  
    __end_of_rtc_convLowerNibble 01B9             __end_of_i2c_readByte 031D                       __pbssBANK0 003F  
                     __pnvCOMMON 007C          __end_of_i2c_masterStart 01CA          __end_of_i2c_masterWrite 01E7  
                     __pmaintext 04F3                          _ACKSTAT 048E         rtc_convUpperNibble@digit 0071  
                        _SSPCON2 0091                        ?_lcd_init 0070                          _SSPSTAT 0094  
                     __stringtab 0003               lcd_writeString@str 0078                    ??_DHT11_Start 0070  
                        _i2c_add 007C                __end_of_lcd_clear 01F2                   main@rh_octet_1 003A  
                 main@rh_octet_2 0034                  lcd_init@i2c_Add 0079      __end_of_rtc_convUpperNibble 020A  
                        __ptext1 0385                          __ptext2 03E9                          __ptext3 02FA  
                        __ptext4 01D3                          __ptext5 01FE                          __ptext6 01B4  
                        __ptext7 031D                          __ptext8 0284                          __ptext9 02BB  
                        _lcd_cmd 026A                          clrloop0 01BA                       ??_lcd_init 0076  
           end_of_initialization 07FC                  i2c_readByte@ack 0070                 ?_i2c_masterStart 0070  
               ?_i2c_masterWrite 0070              __end_of_DHT11_Start 02BB         __end_of_io_expanderWrite 0251  
          __end_of_lcd_setCursor 02D7                    ?_rtc_readDate 0070                    ?_rtc_readTime 0070  
               ??_i2c_masterInit 0070                 ??_i2c_masterWait 0070                 ??_i2c_masterStop 0070  
                      _PORTBbits 0006                        _PORTDbits 0008                        _TRISCbits 0087  
                     lcd_cmd@cmd 0075            __end_of_lcd_write4Bit 026A            __end_of_lcd_writeChar 029F  
                   _i2c_readByte 02FA               DHT11_ReadData@data 0072                   ??_rtc_readDate 0072  
                 ??_rtc_readTime 0072                    __pidataCOMMON 01B3         ?_i2c_masterRepeatedStart 0070  
            start_initialization 07DE                      _DHT11_Start 029F      __end_of_DHT11_CheckResponse 02FA  
                     init_fetch0 0225                      __pdataBANK0 004F                      __pbssCOMMON 007A  
                main@device_mode 003E                        ___latbits 0002                    __pcstackBANK0 0020  
                      _check_bit 004D  __end_of_i2c_masterRepeatedStart 01DC                        _lcd_clear 01E7  
                 _DHT11_ReadData 0342                        __pstrings 0003                         ?_lcd_cmd 0070  
           __end_of_rtc_readDate 045F             __end_of_rtc_readTime 03E9                        clear_ram0 01B9  
                      main@F1381 004F                ??_lcd_writeString 0076           __end_of_DHT11_ReadData 0385  
              ?_io_expanderWrite 0070                       ?_lcd_clear 0070               ??_io_expanderWrite 0071  
                    __stringbase 0008                 main@temp_octet_1 003C                 main@temp_octet_2 0036  
            lcd_write4Bit@nibble 0073        i2c_readByte@incoming_data 0071                  ?_DHT11_ReadData 0070  
                DHT11_ReadData@i 0073               __end_of__stringtab 0009                         __ptext10 045F  
                       __ptext11 01E7                         __ptext20 029F                         __ptext12 026A  
                       __ptext21 0342                         __ptext13 0251                         __ptext22 02D7  
                       __ptext14 0238                         __ptext15 01DC                         __ptext16 01CA  
                       __ptext17 01C1                         __ptext18 020A                         __ptext19 01F2  
                       _lcd_init 045F                     ?_DHT11_Start 0070              _rtc_convLowerNibble 01B4  
            i2c_masterWrite@data 0070                      ??_lcd_clear 0076                         main@suma 0038  
                       init_ram0 0229             ?_rtc_convLowerNibble 0070                        stringcode 0003  
                   _rtc_readDate 03E9        rtc_readTime@clock_address 0074                    _lcd_setCursor 02BB  
                   _rtc_readTime 0385                       _OPTION_REG 0081                ??_i2c_masterStart 0070  
              ??_i2c_masterWrite 0070                         stringdir 0003                         stringtab 0003  
       rtc_convLowerNibble@digit 0070            ??_rtc_convLowerNibble 0070                      _SSPCON2bits 0091  
                _lcd_writeString 031D                    _lcd_write4Bit 0251                       _SSPCONbits 0014  
                  _lcd_writeChar 0284  
