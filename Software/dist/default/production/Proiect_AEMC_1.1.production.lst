

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sat Apr 29 20:05:16 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	strings,global,class=STRING,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    34                           	dabs	1,0x7E,2
    35     0000                     
    36                           ; Version 2.40
    37                           ; Generated 17/11/2021 GMT
    38                           ; 
    39                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution. Publication is not required when
    53                           ;        this file is used in an embedded application.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC16F887 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71     0000                     	;# 
    72     0001                     	;# 
    73     0002                     	;# 
    74     0003                     	;# 
    75     0004                     	;# 
    76     0005                     	;# 
    77     0006                     	;# 
    78     0007                     	;# 
    79     0008                     	;# 
    80     0009                     	;# 
    81     000A                     	;# 
    82     000B                     	;# 
    83     000C                     	;# 
    84     000D                     	;# 
    85     000E                     	;# 
    86     000E                     	;# 
    87     000F                     	;# 
    88     0010                     	;# 
    89     0011                     	;# 
    90     0012                     	;# 
    91     0013                     	;# 
    92     0014                     	;# 
    93     0015                     	;# 
    94     0015                     	;# 
    95     0016                     	;# 
    96     0017                     	;# 
    97     0018                     	;# 
    98     0019                     	;# 
    99     001A                     	;# 
   100     001B                     	;# 
   101     001B                     	;# 
   102     001C                     	;# 
   103     001D                     	;# 
   104     001E                     	;# 
   105     001F                     	;# 
   106     0081                     	;# 
   107     0085                     	;# 
   108     0086                     	;# 
   109     0087                     	;# 
   110     0088                     	;# 
   111     0089                     	;# 
   112     008C                     	;# 
   113     008D                     	;# 
   114     008E                     	;# 
   115     008F                     	;# 
   116     0090                     	;# 
   117     0091                     	;# 
   118     0092                     	;# 
   119     0093                     	;# 
   120     0093                     	;# 
   121     0093                     	;# 
   122     0094                     	;# 
   123     0095                     	;# 
   124     0096                     	;# 
   125     0097                     	;# 
   126     0098                     	;# 
   127     0099                     	;# 
   128     009A                     	;# 
   129     009B                     	;# 
   130     009C                     	;# 
   131     009D                     	;# 
   132     009E                     	;# 
   133     009F                     	;# 
   134     0105                     	;# 
   135     0107                     	;# 
   136     0108                     	;# 
   137     0109                     	;# 
   138     010C                     	;# 
   139     010C                     	;# 
   140     010D                     	;# 
   141     010E                     	;# 
   142     010F                     	;# 
   143     0185                     	;# 
   144     0187                     	;# 
   145     0188                     	;# 
   146     0189                     	;# 
   147     018C                     	;# 
   148     018D                     	;# 
   149     0000                     	;# 
   150     0001                     	;# 
   151     0002                     	;# 
   152     0003                     	;# 
   153     0004                     	;# 
   154     0005                     	;# 
   155     0006                     	;# 
   156     0007                     	;# 
   157     0008                     	;# 
   158     0009                     	;# 
   159     000A                     	;# 
   160     000B                     	;# 
   161     000C                     	;# 
   162     000D                     	;# 
   163     000E                     	;# 
   164     000E                     	;# 
   165     000F                     	;# 
   166     0010                     	;# 
   167     0011                     	;# 
   168     0012                     	;# 
   169     0013                     	;# 
   170     0014                     	;# 
   171     0015                     	;# 
   172     0015                     	;# 
   173     0016                     	;# 
   174     0017                     	;# 
   175     0018                     	;# 
   176     0019                     	;# 
   177     001A                     	;# 
   178     001B                     	;# 
   179     001B                     	;# 
   180     001C                     	;# 
   181     001D                     	;# 
   182     001E                     	;# 
   183     001F                     	;# 
   184     0081                     	;# 
   185     0085                     	;# 
   186     0086                     	;# 
   187     0087                     	;# 
   188     0088                     	;# 
   189     0089                     	;# 
   190     008C                     	;# 
   191     008D                     	;# 
   192     008E                     	;# 
   193     008F                     	;# 
   194     0090                     	;# 
   195     0091                     	;# 
   196     0092                     	;# 
   197     0093                     	;# 
   198     0093                     	;# 
   199     0093                     	;# 
   200     0094                     	;# 
   201     0095                     	;# 
   202     0096                     	;# 
   203     0097                     	;# 
   204     0098                     	;# 
   205     0099                     	;# 
   206     009A                     	;# 
   207     009B                     	;# 
   208     009C                     	;# 
   209     009D                     	;# 
   210     009E                     	;# 
   211     009F                     	;# 
   212     0105                     	;# 
   213     0107                     	;# 
   214     0108                     	;# 
   215     0109                     	;# 
   216     010C                     	;# 
   217     010C                     	;# 
   218     010D                     	;# 
   219     010E                     	;# 
   220     010F                     	;# 
   221     0185                     	;# 
   222     0187                     	;# 
   223     0188                     	;# 
   224     0189                     	;# 
   225     018C                     	;# 
   226     018D                     	;# 
   227     0000                     	;# 
   228     0001                     	;# 
   229     0002                     	;# 
   230     0003                     	;# 
   231     0004                     	;# 
   232     0005                     	;# 
   233     0006                     	;# 
   234     0007                     	;# 
   235     0008                     	;# 
   236     0009                     	;# 
   237     000A                     	;# 
   238     000B                     	;# 
   239     000C                     	;# 
   240     000D                     	;# 
   241     000E                     	;# 
   242     000E                     	;# 
   243     000F                     	;# 
   244     0010                     	;# 
   245     0011                     	;# 
   246     0012                     	;# 
   247     0013                     	;# 
   248     0014                     	;# 
   249     0015                     	;# 
   250     0015                     	;# 
   251     0016                     	;# 
   252     0017                     	;# 
   253     0018                     	;# 
   254     0019                     	;# 
   255     001A                     	;# 
   256     001B                     	;# 
   257     001B                     	;# 
   258     001C                     	;# 
   259     001D                     	;# 
   260     001E                     	;# 
   261     001F                     	;# 
   262     0081                     	;# 
   263     0085                     	;# 
   264     0086                     	;# 
   265     0087                     	;# 
   266     0088                     	;# 
   267     0089                     	;# 
   268     008C                     	;# 
   269     008D                     	;# 
   270     008E                     	;# 
   271     008F                     	;# 
   272     0090                     	;# 
   273     0091                     	;# 
   274     0092                     	;# 
   275     0093                     	;# 
   276     0093                     	;# 
   277     0093                     	;# 
   278     0094                     	;# 
   279     0095                     	;# 
   280     0096                     	;# 
   281     0097                     	;# 
   282     0098                     	;# 
   283     0099                     	;# 
   284     009A                     	;# 
   285     009B                     	;# 
   286     009C                     	;# 
   287     009D                     	;# 
   288     009E                     	;# 
   289     009F                     	;# 
   290     0105                     	;# 
   291     0107                     	;# 
   292     0108                     	;# 
   293     0109                     	;# 
   294     010C                     	;# 
   295     010C                     	;# 
   296     010D                     	;# 
   297     010E                     	;# 
   298     010F                     	;# 
   299     0185                     	;# 
   300     0187                     	;# 
   301     0188                     	;# 
   302     0189                     	;# 
   303     018C                     	;# 
   304     018D                     	;# 
   305     0000                     	;# 
   306     0001                     	;# 
   307     0002                     	;# 
   308     0003                     	;# 
   309     0004                     	;# 
   310     0005                     	;# 
   311     0006                     	;# 
   312     0007                     	;# 
   313     0008                     	;# 
   314     0009                     	;# 
   315     000A                     	;# 
   316     000B                     	;# 
   317     000C                     	;# 
   318     000D                     	;# 
   319     000E                     	;# 
   320     000E                     	;# 
   321     000F                     	;# 
   322     0010                     	;# 
   323     0011                     	;# 
   324     0012                     	;# 
   325     0013                     	;# 
   326     0014                     	;# 
   327     0015                     	;# 
   328     0015                     	;# 
   329     0016                     	;# 
   330     0017                     	;# 
   331     0018                     	;# 
   332     0019                     	;# 
   333     001A                     	;# 
   334     001B                     	;# 
   335     001B                     	;# 
   336     001C                     	;# 
   337     001D                     	;# 
   338     001E                     	;# 
   339     001F                     	;# 
   340     0081                     	;# 
   341     0085                     	;# 
   342     0086                     	;# 
   343     0087                     	;# 
   344     0088                     	;# 
   345     0089                     	;# 
   346     008C                     	;# 
   347     008D                     	;# 
   348     008E                     	;# 
   349     008F                     	;# 
   350     0090                     	;# 
   351     0091                     	;# 
   352     0092                     	;# 
   353     0093                     	;# 
   354     0093                     	;# 
   355     0093                     	;# 
   356     0094                     	;# 
   357     0095                     	;# 
   358     0096                     	;# 
   359     0097                     	;# 
   360     0098                     	;# 
   361     0099                     	;# 
   362     009A                     	;# 
   363     009B                     	;# 
   364     009C                     	;# 
   365     009D                     	;# 
   366     009E                     	;# 
   367     009F                     	;# 
   368     0105                     	;# 
   369     0107                     	;# 
   370     0108                     	;# 
   371     0109                     	;# 
   372     010C                     	;# 
   373     010C                     	;# 
   374     010D                     	;# 
   375     010E                     	;# 
   376     010F                     	;# 
   377     0185                     	;# 
   378     0187                     	;# 
   379     0188                     	;# 
   380     0189                     	;# 
   381     018C                     	;# 
   382     018D                     	;# 
   383                           
   384                           	psect	idataBANK0
   385     036F                     __pidataBANK0:
   386                           
   387                           ;initializer for _backlight_state
   388     036F  3408               	retlw	8
   389                           
   390                           	psect	nvBANK0
   391     002E                     __pnvBANK0:
   392     002E                     _i2c_add:
   393     002E                     	ds	1
   394     0013                     _SSPBUF	set	19
   395     0014                     _SSPCONbits	set	20
   396     0087                     _TRISCbits	set	135
   397     008F                     _OSCCON	set	143
   398     0091                     _SSPCON2bits	set	145
   399     0093                     _SSPADD	set	147
   400     0094                     _SSPSTAT	set	148
   401     0091                     _SSPCON2	set	145
   402     048E                     _ACKSTAT	set	1166
   403                           
   404                           	psect	strings
   405     0003                     __pstrings:
   406     0003                     stringtab:
   407     0003                     __stringtab:
   408     0003                     stringcode:	
   409                           ;	String table - string pointers are 1 byte each
   410                           
   411     0003                     stringdir:
   412     0003  3000               	movlw	high stringdir
   413     0004  008A               	movwf	10
   414     0005  0804               	movf	4,w
   415     0006  0A84               	incf	4,f
   416     0007  0782               	addwf	2,f
   417     0008                     __stringbase:
   418     0008  3400               	retlw	0
   419     0009                     __end_of__stringtab:
   420     0009                     STR_1:
   421     0009  3449               	retlw	73	;'I'
   422     000A  346E               	retlw	110	;'n'
   423     000B  3469               	retlw	105	;'i'
   424     000C  3474               	retlw	116	;'t'
   425     000D  3469               	retlw	105	;'i'
   426     000E  3461               	retlw	97	;'a'
   427     000F  346C               	retlw	108	;'l'
   428     0010  3461               	retlw	97	;'a'
   429     0011  347A               	retlw	122	;'z'
   430     0012  3469               	retlw	105	;'i'
   431     0013  346E               	retlw	110	;'n'
   432     0014  3467               	retlw	103	;'g'
   433     0015  3400               	retlw	0
   434     0016                     STR_2:
   435     0016  3454               	retlw	84	;'T'
   436     0017  3469               	retlw	105	;'i'
   437     0018  346D               	retlw	109	;'m'
   438     0019  3465               	retlw	101	;'e'
   439     001A  343A               	retlw	58	;':'
   440     001B  3420               	retlw	32	;' '
   441     001C  3400               	retlw	0
   442     001D                     STR_5:
   443     001D  3444               	retlw	68	;'D'
   444     001E  3461               	retlw	97	;'a'
   445     001F  3474               	retlw	116	;'t'
   446     0020  3465               	retlw	101	;'e'
   447     0021  343A               	retlw	58	;':'
   448     0022  3420               	retlw	32	;' '
   449     0023  3400               	retlw	0
   450     0024                     STR_6:
   451     0024  342F               	retlw	47	;'/'
   452     0025  3400               	retlw	0
   453     0026                     STR_3:
   454     0026  343A               	retlw	58	;':'
   455     0027  3400               	retlw	0
   456     0024                     
   457                           	psect	cinit
   458     07E7                     start_initialization:	
   459                           ; #config settings
   460                           
   461     07E7                     __initialization:
   462                           
   463                           ; Initialize objects allocated to BANK0
   464     07E7  120A  118A  236F  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   465     07EC  00AF               	movwf	__pdataBANK0& (0+127)
   466                           
   467                           ; Clear objects allocated to BANK0
   468     07ED  01A0               	clrf	__pbssBANK0& (0+127)
   469     07EE  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   470     07EF  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   471     07F0  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   472     07F1  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   473     07F2  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   474     07F3  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   475     07F4  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   476     07F5  01A8               	clrf	(__pbssBANK0+8)& (0+127)
   477     07F6  01A9               	clrf	(__pbssBANK0+9)& (0+127)
   478     07F7  01AA               	clrf	(__pbssBANK0+10)& (0+127)
   479     07F8  01AB               	clrf	(__pbssBANK0+11)& (0+127)
   480     07F9  01AC               	clrf	(__pbssBANK0+12)& (0+127)
   481     07FA  01AD               	clrf	(__pbssBANK0+13)& (0+127)
   482                           
   483                           ; Clear objects allocated to COMMON
   484     07FB  01FD               	clrf	__pbssCOMMON& (0+127)
   485     07FC                     end_of_initialization:	
   486                           ;End of C runtime variable initialization code
   487                           
   488     07FC                     __end_of__initialization:
   489     07FC  0183               	clrf	3
   490     07FD  120A  118A  2EAE   	ljmp	_main	;jump to C main() function
   491                           
   492                           	psect	bssCOMMON
   493     007D                     __pbssCOMMON:
   494     007D                     _RS:
   495     007D                     	ds	1
   496                           
   497                           	psect	bssBANK0
   498     0020                     __pbssBANK0:
   499     0020                     _year:
   500     0020                     	ds	2
   501     0022                     _month:
   502     0022                     	ds	2
   503     0024                     _date:
   504     0024                     	ds	2
   505     0026                     _day:
   506     0026                     	ds	2
   507     0028                     _hour:
   508     0028                     	ds	2
   509     002A                     _min:
   510     002A                     	ds	2
   511     002C                     _sec:
   512     002C                     	ds	2
   513                           
   514                           	psect	dataBANK0
   515     002F                     __pdataBANK0:
   516     002F                     _backlight_state:
   517     002F                     	ds	1
   518                           
   519                           	psect	cstackCOMMON
   520     0070                     __pcstackCOMMON:
   521     0070                     ?_lcd_cmd:
   522     0070                     ?_rtc_readTime:	
   523                           ; 1 bytes @ 0x0
   524                           
   525     0070                     ?_rtc_readDate:	
   526                           ; 1 bytes @ 0x0
   527                           
   528     0070                     ?_rtc_convUpperNibble:	
   529                           ; 1 bytes @ 0x0
   530                           
   531     0070                     ??_rtc_convUpperNibble:	
   532                           ; 1 bytes @ 0x0
   533                           
   534     0070                     ?_rtc_convLowerNibble:	
   535                           ; 1 bytes @ 0x0
   536                           
   537     0070                     ??_rtc_convLowerNibble:	
   538                           ; 1 bytes @ 0x0
   539                           
   540     0070                     ?_i2c_masterInit:	
   541                           ; 1 bytes @ 0x0
   542                           
   543     0070                     ??_i2c_masterInit:	
   544                           ; 1 bytes @ 0x0
   545                           
   546     0070                     ?_i2c_masterWait:	
   547                           ; 1 bytes @ 0x0
   548                           
   549     0070                     ??_i2c_masterWait:	
   550                           ; 1 bytes @ 0x0
   551                           
   552     0070                     ?_i2c_masterStart:	
   553                           ; 1 bytes @ 0x0
   554                           
   555     0070                     ??_i2c_masterStart:	
   556                           ; 1 bytes @ 0x0
   557                           
   558     0070                     ?_i2c_masterRepeatedStart:	
   559                           ; 1 bytes @ 0x0
   560                           
   561     0070                     ??_i2c_masterRepeatedStart:	
   562                           ; 1 bytes @ 0x0
   563                           
   564     0070                     ?_i2c_masterStop:	
   565                           ; 1 bytes @ 0x0
   566                           
   567     0070                     ??_i2c_masterStop:	
   568                           ; 1 bytes @ 0x0
   569                           
   570     0070                     ?_i2c_masterWrite:	
   571                           ; 1 bytes @ 0x0
   572                           
   573     0070                     ??_i2c_masterWrite:	
   574                           ; 1 bytes @ 0x0
   575                           
   576     0070                     ?_i2c_readByte:	
   577                           ; 1 bytes @ 0x0
   578                           
   579     0070                     ??_i2c_readByte:	
   580                           ; 1 bytes @ 0x0
   581                           
   582     0070                     ?_lcd_init:	
   583                           ; 1 bytes @ 0x0
   584                           
   585     0070                     ?_io_expanderWrite:	
   586                           ; 1 bytes @ 0x0
   587                           
   588     0070                     ?_lcd_write4Bit:	
   589                           ; 1 bytes @ 0x0
   590                           
   591     0070                     ?_lcd_writeChar:	
   592                           ; 1 bytes @ 0x0
   593                           
   594     0070                     ?_lcd_writeString:	
   595                           ; 1 bytes @ 0x0
   596                           
   597     0070                     ?_lcd_clear:	
   598                           ; 1 bytes @ 0x0
   599                           
   600     0070                     ?_main:	
   601                           ; 1 bytes @ 0x0
   602                           
   603     0070                     i2c_masterWrite@data:	
   604                           ; 1 bytes @ 0x0
   605                           
   606     0070                     i2c_readByte@ack:	
   607                           ; 1 bytes @ 0x0
   608                           
   609     0070                     rtc_convLowerNibble@digit:	
   610                           ; 1 bytes @ 0x0
   611                           
   612                           
   613                           ; 1 bytes @ 0x0
   614     0070                     	ds	1
   615     0071                     ??_io_expanderWrite:
   616     0071                     i2c_readByte@incoming_data:	
   617                           ; 1 bytes @ 0x1
   618                           
   619     0071                     io_expanderWrite@data:	
   620                           ; 1 bytes @ 0x1
   621                           
   622     0071                     rtc_convUpperNibble@digit:	
   623                           ; 1 bytes @ 0x1
   624                           
   625                           
   626                           ; 1 bytes @ 0x1
   627     0071                     	ds	1
   628     0072                     ??_rtc_readTime:
   629     0072                     ??_rtc_readDate:	
   630                           ; 1 bytes @ 0x2
   631                           
   632     0072                     ??_lcd_write4Bit:	
   633                           ; 1 bytes @ 0x2
   634                           
   635                           
   636                           ; 1 bytes @ 0x2
   637     0072                     	ds	1
   638     0073                     lcd_write4Bit@nibble:
   639                           
   640                           ; 1 bytes @ 0x3
   641     0073                     	ds	1
   642     0074                     ??_lcd_cmd:
   643     0074                     ??_lcd_writeChar:	
   644                           ; 1 bytes @ 0x4
   645                           
   646     0074                     rtc_readTime@clock_address:	
   647                           ; 1 bytes @ 0x4
   648                           
   649     0074                     rtc_readDate@calendar_address:	
   650                           ; 1 bytes @ 0x4
   651                           
   652                           
   653                           ; 1 bytes @ 0x4
   654     0074                     	ds	1
   655     0075                     lcd_cmd@cmd:
   656     0075                     lcd_writeChar@data:	
   657                           ; 1 bytes @ 0x5
   658                           
   659                           
   660                           ; 1 bytes @ 0x5
   661     0075                     	ds	1
   662     0076                     ??_lcd_init:
   663     0076                     ??_lcd_writeString:	
   664                           ; 1 bytes @ 0x6
   665                           
   666     0076                     ?_lcd_setCursor:	
   667                           ; 1 bytes @ 0x6
   668                           
   669     0076                     ??_lcd_clear:	
   670                           ; 1 bytes @ 0x6
   671                           
   672     0076                     lcd_setCursor@col:	
   673                           ; 1 bytes @ 0x6
   674                           
   675     0076                     lcd_writeString@i:	
   676                           ; 1 bytes @ 0x6
   677                           
   678                           
   679                           ; 2 bytes @ 0x6
   680     0076                     	ds	1
   681     0077                     ??_lcd_setCursor:
   682     0077                     lcd_setCursor@row:	
   683                           ; 1 bytes @ 0x7
   684                           
   685                           
   686                           ; 1 bytes @ 0x7
   687     0077                     	ds	1
   688     0078                     lcd_writeString@str:
   689                           
   690                           ; 1 bytes @ 0x8
   691     0078                     	ds	1
   692     0079                     lcd_init@i2c_Add:
   693                           
   694                           ; 1 bytes @ 0x9
   695     0079                     	ds	1
   696     007A                     ??_main:
   697                           
   698                           ; 1 bytes @ 0xA
   699     007A                     	ds	3
   700                           
   701                           	psect	maintext
   702     06AE                     __pmaintext:	
   703 ;;
   704 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   705 ;;
   706 ;; *************** function _main *****************
   707 ;; Defined at:
   708 ;;		line 16 in file "main.c"
   709 ;; Parameters:    Size  Location     Type
   710 ;;		None
   711 ;; Auto vars:     Size  Location     Type
   712 ;;		None
   713 ;; Return value:  Size  Location     Type
   714 ;;                  1    wreg      void 
   715 ;; Registers used:
   716 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   717 ;; Tracked objects:
   718 ;;		On entry : B00/0
   719 ;;		On exit  : 0/0
   720 ;;		Unchanged: 0/0
   721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   722 ;;      Params:         0       0       0       0       0
   723 ;;      Locals:         0       0       0       0       0
   724 ;;      Temps:          3       0       0       0       0
   725 ;;      Totals:         3       0       0       0       0
   726 ;;Total ram usage:        3 bytes
   727 ;; Hardware stack levels required when called: 6
   728 ;; This function calls:
   729 ;;		_i2c_masterInit
   730 ;;		_lcd_clear
   731 ;;		_lcd_init
   732 ;;		_lcd_setCursor
   733 ;;		_lcd_writeChar
   734 ;;		_lcd_writeString
   735 ;;		_rtc_convLowerNibble
   736 ;;		_rtc_convUpperNibble
   737 ;;		_rtc_readDate
   738 ;;		_rtc_readTime
   739 ;; This function is called by:
   740 ;;		Startup code after reset
   741 ;; This function uses a non-reentrant model
   742 ;;
   743                           
   744     06AE                     _main:	
   745                           ;psect for function _main
   746                           
   747     06AE                     l1248:	
   748                           ;incstack = 0
   749                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   750                           
   751                           
   752                           ;main.c: 18:     OSCCON |= 0x77;
   753     06AE  3077               	movlw	119
   754     06AF  00FA               	movwf	??_main
   755     06B0  087A               	movf	??_main,w
   756     06B1  1683               	bsf	3,5	;RP0=1, select bank1
   757     06B2  1303               	bcf	3,6	;RP1=0, select bank1
   758     06B3  048F               	iorwf	15,f	;volatile
   759     06B4                     l1250:
   760                           
   761                           ;main.c: 19:     TRISCbits.TRISC3 |= 1;
   762     06B4  1587               	bsf	7,3	;volatile
   763     06B5                     l1252:
   764                           
   765                           ;main.c: 20:     TRISCbits.TRISC4 |= 1;
   766     06B5  1607               	bsf	7,4	;volatile
   767     06B6                     l1254:
   768                           
   769                           ;main.c: 21:     i2c_masterInit();
   770     06B6  120A  118A  23A6  120A  118A  	fcall	_i2c_masterInit
   771     06BB                     l1256:
   772                           
   773                           ;main.c: 22:     lcd_init(0x4E);
   774     06BB  304E               	movlw	78
   775     06BC  120A  118A  249A  120A  118A  	fcall	_lcd_init
   776     06C1                     l1258:
   777                           
   778                           ;main.c: 24:     lcd_setCursor(1,2);
   779     06C1  3002               	movlw	2
   780     06C2  00F6               	movwf	lcd_setCursor@col
   781     06C3  3001               	movlw	1
   782     06C4  120A  118A  2419  120A  118A  	fcall	_lcd_setCursor
   783     06C9                     l1260:
   784                           
   785                           ;main.c: 25:     lcd_writeString("Initialazing");
   786     06C9  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   787     06CA  120A  118A  2475  120A  118A  	fcall	_lcd_writeString
   788     06CF                     l1262:
   789                           
   790                           ;main.c: 26:     _delay((unsigned long)((1000)*(16000000/4000.0)));
   791     06CF  3015               	movlw	21
   792     06D0  00FC               	movwf	??_main+2
   793     06D1  304B               	movlw	75
   794     06D2  00FB               	movwf	??_main+1
   795     06D3  30BE               	movlw	190
   796     06D4  00FA               	movwf	??_main
   797     06D5                     u197:
   798     06D5  0BFA               	decfsz	??_main,f
   799     06D6  2ED5               	goto	u197
   800     06D7  0BFB               	decfsz	??_main+1,f
   801     06D8  2ED5               	goto	u197
   802     06D9  0BFC               	decfsz	??_main+2,f
   803     06DA  2ED5               	goto	u197
   804     06DB  0000               	nop
   805     06DC                     l1264:
   806                           
   807                           ;main.c: 28:     lcd_clear();
   808     06DC  120A  118A  239B  120A  118A  	fcall	_lcd_clear
   809     06E1                     l1266:
   810                           
   811                           ;main.c: 29:     lcd_setCursor(1,1);
   812     06E1  01F6               	clrf	lcd_setCursor@col
   813     06E2  0AF6               	incf	lcd_setCursor@col,f
   814     06E3  3001               	movlw	1
   815     06E4  120A  118A  2419  120A  118A  	fcall	_lcd_setCursor
   816     06E9                     l1268:
   817                           
   818                           ;main.c: 32:         rtc_readTime(0x00);
   819     06E9  3000               	movlw	0
   820     06EA  120A  118A  2530  120A  118A  	fcall	_rtc_readTime
   821     06EF                     l1270:
   822                           
   823                           ;main.c: 33:         rtc_readTime(0x01);
   824     06EF  3001               	movlw	1
   825     06F0  120A  118A  2530  120A  118A  	fcall	_rtc_readTime
   826     06F5                     l1272:
   827                           
   828                           ;main.c: 34:         rtc_readTime(0x02);
   829     06F5  3002               	movlw	2
   830     06F6  120A  118A  2530  120A  118A  	fcall	_rtc_readTime
   831     06FB                     l1274:
   832                           
   833                           ;main.c: 36:         rtc_readDate(0x03);
   834     06FB  3003               	movlw	3
   835     06FC  120A  118A  25D6  120A  118A  	fcall	_rtc_readDate
   836     0701                     l1276:
   837                           
   838                           ;main.c: 37:         rtc_readDate(0x04);
   839     0701  3004               	movlw	4
   840     0702  120A  118A  25D6  120A  118A  	fcall	_rtc_readDate
   841     0707                     l1278:
   842                           
   843                           ;main.c: 38:         rtc_readDate(0x05);
   844     0707  3005               	movlw	5
   845     0708  120A  118A  25D6  120A  118A  	fcall	_rtc_readDate
   846     070D                     l1280:
   847                           
   848                           ;main.c: 39:         rtc_readDate(0x06);
   849     070D  3006               	movlw	6
   850     070E  120A  118A  25D6  120A  118A  	fcall	_rtc_readDate
   851     0713                     l1282:
   852                           
   853                           ;main.c: 42:         lcd_setCursor(1,1);
   854     0713  01F6               	clrf	lcd_setCursor@col
   855     0714  0AF6               	incf	lcd_setCursor@col,f
   856     0715  3001               	movlw	1
   857     0716  120A  118A  2419  120A  118A  	fcall	_lcd_setCursor
   858     071B                     l1284:
   859                           
   860                           ;main.c: 43:         lcd_writeString("Time: ");
   861     071B  300E               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   862     071C  120A  118A  2475  120A  118A  	fcall	_lcd_writeString
   863     0721                     l1286:
   864                           
   865                           ;main.c: 44:         lcd_writeChar((char)rtc_convUpperNibble(hour));
   866     0721  1283               	bcf	3,5	;RP0=0, select bank0
   867     0722  1303               	bcf	3,6	;RP1=0, select bank0
   868     0723  0828               	movf	_hour,w
   869     0724  120A  118A  23B2  120A  118A  	fcall	_rtc_convUpperNibble
   870     0729  120A  118A  23FE  120A  118A  	fcall	_lcd_writeChar
   871     072E                     l1288:
   872                           
   873                           ;main.c: 45:         lcd_writeChar((char)rtc_convLowerNibble(hour));
   874     072E  1283               	bcf	3,5	;RP0=0, select bank0
   875     072F  1303               	bcf	3,6	;RP1=0, select bank0
   876     0730  0828               	movf	_hour,w
   877     0731  120A  118A  2370  120A  118A  	fcall	_rtc_convLowerNibble
   878     0736  120A  118A  23FE  120A  118A  	fcall	_lcd_writeChar
   879     073B                     l1290:
   880                           
   881                           ;main.c: 46:         lcd_writeString(":");
   882     073B  301E               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   883     073C  120A  118A  2475  120A  118A  	fcall	_lcd_writeString
   884     0741                     l1292:
   885                           
   886                           ;main.c: 47:         lcd_writeChar((char)rtc_convUpperNibble(min));
   887     0741  1283               	bcf	3,5	;RP0=0, select bank0
   888     0742  1303               	bcf	3,6	;RP1=0, select bank0
   889     0743  082A               	movf	_min,w
   890     0744  120A  118A  23B2  120A  118A  	fcall	_rtc_convUpperNibble
   891     0749  120A  118A  23FE  120A  118A  	fcall	_lcd_writeChar
   892     074E                     l1294:
   893                           
   894                           ;main.c: 48:         lcd_writeChar((char)rtc_convLowerNibble(min));
   895     074E  1283               	bcf	3,5	;RP0=0, select bank0
   896     074F  1303               	bcf	3,6	;RP1=0, select bank0
   897     0750  082A               	movf	_min,w
   898     0751  120A  118A  2370  120A  118A  	fcall	_rtc_convLowerNibble
   899     0756  120A  118A  23FE  120A  118A  	fcall	_lcd_writeChar
   900     075B                     l1296:
   901                           
   902                           ;main.c: 49:         lcd_writeString(":");
   903     075B  301E               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   904     075C  120A  118A  2475  120A  118A  	fcall	_lcd_writeString
   905     0761                     l1298:
   906                           
   907                           ;main.c: 50:         lcd_writeChar((char)rtc_convUpperNibble(sec));
   908     0761  1283               	bcf	3,5	;RP0=0, select bank0
   909     0762  1303               	bcf	3,6	;RP1=0, select bank0
   910     0763  082C               	movf	_sec,w
   911     0764  120A  118A  23B2  120A  118A  	fcall	_rtc_convUpperNibble
   912     0769  120A  118A  23FE  120A  118A  	fcall	_lcd_writeChar
   913     076E                     l1300:
   914                           
   915                           ;main.c: 51:         lcd_writeChar((char)rtc_convLowerNibble(sec));
   916     076E  1283               	bcf	3,5	;RP0=0, select bank0
   917     076F  1303               	bcf	3,6	;RP1=0, select bank0
   918     0770  082C               	movf	_sec,w
   919     0771  120A  118A  2370  120A  118A  	fcall	_rtc_convLowerNibble
   920     0776  120A  118A  23FE  120A  118A  	fcall	_lcd_writeChar
   921     077B                     l1302:
   922                           
   923                           ;main.c: 53:         lcd_setCursor(2,1);
   924     077B  01F6               	clrf	lcd_setCursor@col
   925     077C  0AF6               	incf	lcd_setCursor@col,f
   926     077D  3002               	movlw	2
   927     077E  120A  118A  2419  120A  118A  	fcall	_lcd_setCursor
   928     0783                     l1304:
   929                           
   930                           ;main.c: 54:         lcd_writeString("Date: ");
   931     0783  3015               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   932     0784  120A  118A  2475  120A  118A  	fcall	_lcd_writeString
   933     0789                     l1306:
   934                           
   935                           ;main.c: 62:         lcd_writeChar((char)rtc_convUpperNibble(date));
   936     0789  1283               	bcf	3,5	;RP0=0, select bank0
   937     078A  1303               	bcf	3,6	;RP1=0, select bank0
   938     078B  0824               	movf	_date,w
   939     078C  120A  118A  23B2  120A  118A  	fcall	_rtc_convUpperNibble
   940     0791  120A  118A  23FE  120A  118A  	fcall	_lcd_writeChar
   941     0796                     l1308:
   942                           
   943                           ;main.c: 63:         lcd_writeChar((char)rtc_convLowerNibble(date));
   944     0796  1283               	bcf	3,5	;RP0=0, select bank0
   945     0797  1303               	bcf	3,6	;RP1=0, select bank0
   946     0798  0824               	movf	_date,w
   947     0799  120A  118A  2370  120A  118A  	fcall	_rtc_convLowerNibble
   948     079E  120A  118A  23FE  120A  118A  	fcall	_lcd_writeChar
   949     07A3                     l1310:
   950                           
   951                           ;main.c: 64:         lcd_writeString("/");
   952     07A3  301C               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
   953     07A4  120A  118A  2475  120A  118A  	fcall	_lcd_writeString
   954     07A9                     l1312:
   955                           
   956                           ;main.c: 65:         lcd_writeChar((char)rtc_convUpperNibble(month));
   957     07A9  1283               	bcf	3,5	;RP0=0, select bank0
   958     07AA  1303               	bcf	3,6	;RP1=0, select bank0
   959     07AB  0822               	movf	_month,w
   960     07AC  120A  118A  23B2  120A  118A  	fcall	_rtc_convUpperNibble
   961     07B1  120A  118A  23FE  120A  118A  	fcall	_lcd_writeChar
   962     07B6                     l1314:
   963                           
   964                           ;main.c: 66:         lcd_writeChar((char)rtc_convLowerNibble(month));
   965     07B6  1283               	bcf	3,5	;RP0=0, select bank0
   966     07B7  1303               	bcf	3,6	;RP1=0, select bank0
   967     07B8  0822               	movf	_month,w
   968     07B9  120A  118A  2370  120A  118A  	fcall	_rtc_convLowerNibble
   969     07BE  120A  118A  23FE  120A  118A  	fcall	_lcd_writeChar
   970     07C3                     l1316:
   971                           
   972                           ;main.c: 67:         lcd_writeString("/");
   973     07C3  301C               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
   974     07C4  120A  118A  2475  120A  118A  	fcall	_lcd_writeString
   975     07C9                     l1318:
   976                           
   977                           ;main.c: 69:         lcd_writeChar((char)rtc_convUpperNibble(year));
   978     07C9  1283               	bcf	3,5	;RP0=0, select bank0
   979     07CA  1303               	bcf	3,6	;RP1=0, select bank0
   980     07CB  0820               	movf	_year,w
   981     07CC  120A  118A  23B2  120A  118A  	fcall	_rtc_convUpperNibble
   982     07D1  120A  118A  23FE  120A  118A  	fcall	_lcd_writeChar
   983     07D6                     l1320:
   984                           
   985                           ;main.c: 70:         lcd_writeChar((char)rtc_convLowerNibble(year));
   986     07D6  1283               	bcf	3,5	;RP0=0, select bank0
   987     07D7  1303               	bcf	3,6	;RP1=0, select bank0
   988     07D8  0820               	movf	_year,w
   989     07D9  120A  118A  2370  120A  118A  	fcall	_rtc_convLowerNibble
   990     07DE  120A  118A  23FE  120A  118A  	fcall	_lcd_writeChar
   991     07E3  2EE9               	goto	l1268
   992     07E4  120A  118A  2800   	ljmp	start
   993     07E7                     __end_of_main:
   994                           
   995                           	psect	text1
   996     0530                     __ptext1:	
   997 ;; *************** function _rtc_readTime *****************
   998 ;; Defined at:
   999 ;;		line 63 in file "rtc.c"
  1000 ;; Parameters:    Size  Location     Type
  1001 ;;  clock_addres    1    wreg     unsigned char 
  1002 ;; Auto vars:     Size  Location     Type
  1003 ;;  clock_addres    1    4[COMMON] unsigned char 
  1004 ;; Return value:  Size  Location     Type
  1005 ;;                  1    wreg      void 
  1006 ;; Registers used:
  1007 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1008 ;; Tracked objects:
  1009 ;;		On entry : 0/0
  1010 ;;		On exit  : 0/0
  1011 ;;		Unchanged: 0/0
  1012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1013 ;;      Params:         0       0       0       0       0
  1014 ;;      Locals:         1       0       0       0       0
  1015 ;;      Temps:          2       0       0       0       0
  1016 ;;      Totals:         3       0       0       0       0
  1017 ;;Total ram usage:        3 bytes
  1018 ;; Hardware stack levels used: 1
  1019 ;; Hardware stack levels required when called: 2
  1020 ;; This function calls:
  1021 ;;		_i2c_masterRepeatedStart
  1022 ;;		_i2c_masterStart
  1023 ;;		_i2c_masterStop
  1024 ;;		_i2c_masterWrite
  1025 ;;		_i2c_readByte
  1026 ;; This function is called by:
  1027 ;;		_main
  1028 ;; This function uses a non-reentrant model
  1029 ;;
  1030                           
  1031     0530                     _rtc_readTime:	
  1032                           ;psect for function _rtc_readTime
  1033                           
  1034                           
  1035                           ;incstack = 0
  1036                           ; Regs used in _rtc_readTime: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1037                           ;rtc_readTime@clock_address stored from wreg
  1038     0530  00F4               	movwf	rtc_readTime@clock_address
  1039     0531                     l1184:
  1040                           
  1041                           ;rtc.c: 64:     switch (clock_address){
  1042     0531  2DC2               	goto	l1194
  1043     0532                     l1186:
  1044                           
  1045                           ;rtc.c: 66:             i2c_masterStart();
  1046     0532  120A  118A  2375  120A  118A  	fcall	_i2c_masterStart
  1047                           
  1048                           ;rtc.c: 67:             i2c_masterWrite(0xD0);
  1049     0537  30D0               	movlw	208
  1050     0538  120A  118A  2390  120A  118A  	fcall	_i2c_masterWrite
  1051                           
  1052                           ;rtc.c: 68:             i2c_masterWrite(clock_address);
  1053     053D  0874               	movf	rtc_readTime@clock_address,w
  1054     053E  120A  118A  2390  120A  118A  	fcall	_i2c_masterWrite
  1055                           
  1056                           ;rtc.c: 69:             i2c_masterRepeatedStart();
  1057     0543  120A  118A  2387  120A  118A  	fcall	_i2c_masterRepeatedStart
  1058                           
  1059                           ;rtc.c: 70:             i2c_masterWrite(0xD1);
  1060     0548  30D1               	movlw	209
  1061     0549  120A  118A  2390  120A  118A  	fcall	_i2c_masterWrite
  1062                           
  1063                           ;rtc.c: 71:             sec = i2c_readByte(0x00);
  1064     054E  3000               	movlw	0
  1065     054F  120A  118A  2452  120A  118A  	fcall	_i2c_readByte
  1066     0554  00F2               	movwf	??_rtc_readTime
  1067     0555  01F3               	clrf	??_rtc_readTime+1
  1068     0556  0872               	movf	??_rtc_readTime,w
  1069     0557  1283               	bcf	3,5	;RP0=0, select bank0
  1070     0558  1303               	bcf	3,6	;RP1=0, select bank0
  1071     0559  00AC               	movwf	_sec
  1072     055A  0873               	movf	??_rtc_readTime+1,w
  1073     055B  00AD               	movwf	_sec+1
  1074                           
  1075                           ;rtc.c: 72:             i2c_masterStop();
  1076     055C  120A  118A  237E  120A  118A  	fcall	_i2c_masterStop
  1077                           
  1078                           ;rtc.c: 73:             break;
  1079     0561  2DD5               	goto	l180
  1080     0562                     l1188:
  1081                           
  1082                           ;rtc.c: 76:             i2c_masterStart();
  1083     0562  120A  118A  2375  120A  118A  	fcall	_i2c_masterStart
  1084                           
  1085                           ;rtc.c: 77:             i2c_masterWrite(0xD0);
  1086     0567  30D0               	movlw	208
  1087     0568  120A  118A  2390  120A  118A  	fcall	_i2c_masterWrite
  1088                           
  1089                           ;rtc.c: 78:             i2c_masterWrite(clock_address);
  1090     056D  0874               	movf	rtc_readTime@clock_address,w
  1091     056E  120A  118A  2390  120A  118A  	fcall	_i2c_masterWrite
  1092                           
  1093                           ;rtc.c: 79:             i2c_masterRepeatedStart();
  1094     0573  120A  118A  2387  120A  118A  	fcall	_i2c_masterRepeatedStart
  1095                           
  1096                           ;rtc.c: 80:             i2c_masterWrite(0xD1);
  1097     0578  30D1               	movlw	209
  1098     0579  120A  118A  2390  120A  118A  	fcall	_i2c_masterWrite
  1099                           
  1100                           ;rtc.c: 81:             min = i2c_readByte(0x01);
  1101     057E  3001               	movlw	1
  1102     057F  120A  118A  2452  120A  118A  	fcall	_i2c_readByte
  1103     0584  00F2               	movwf	??_rtc_readTime
  1104     0585  01F3               	clrf	??_rtc_readTime+1
  1105     0586  0872               	movf	??_rtc_readTime,w
  1106     0587  1283               	bcf	3,5	;RP0=0, select bank0
  1107     0588  1303               	bcf	3,6	;RP1=0, select bank0
  1108     0589  00AA               	movwf	_min
  1109     058A  0873               	movf	??_rtc_readTime+1,w
  1110     058B  00AB               	movwf	_min+1
  1111                           
  1112                           ;rtc.c: 82:             i2c_masterStop();
  1113     058C  120A  118A  237E  120A  118A  	fcall	_i2c_masterStop
  1114                           
  1115                           ;rtc.c: 83:             break;
  1116     0591  2DD5               	goto	l180
  1117     0592                     l1190:
  1118                           
  1119                           ;rtc.c: 86:             i2c_masterStart();
  1120     0592  120A  118A  2375  120A  118A  	fcall	_i2c_masterStart
  1121                           
  1122                           ;rtc.c: 87:             i2c_masterWrite(0xD0);
  1123     0597  30D0               	movlw	208
  1124     0598  120A  118A  2390  120A  118A  	fcall	_i2c_masterWrite
  1125                           
  1126                           ;rtc.c: 88:             i2c_masterWrite(clock_address);
  1127     059D  0874               	movf	rtc_readTime@clock_address,w
  1128     059E  120A  118A  2390  120A  118A  	fcall	_i2c_masterWrite
  1129                           
  1130                           ;rtc.c: 89:             i2c_masterRepeatedStart();
  1131     05A3  120A  118A  2387  120A  118A  	fcall	_i2c_masterRepeatedStart
  1132                           
  1133                           ;rtc.c: 90:             i2c_masterWrite(0xD1);
  1134     05A8  30D1               	movlw	209
  1135     05A9  120A  118A  2390  120A  118A  	fcall	_i2c_masterWrite
  1136                           
  1137                           ;rtc.c: 91:             hour = i2c_readByte(0x02);
  1138     05AE  3002               	movlw	2
  1139     05AF  120A  118A  2452  120A  118A  	fcall	_i2c_readByte
  1140     05B4  00F2               	movwf	??_rtc_readTime
  1141     05B5  01F3               	clrf	??_rtc_readTime+1
  1142     05B6  0872               	movf	??_rtc_readTime,w
  1143     05B7  1283               	bcf	3,5	;RP0=0, select bank0
  1144     05B8  1303               	bcf	3,6	;RP1=0, select bank0
  1145     05B9  00A8               	movwf	_hour
  1146     05BA  0873               	movf	??_rtc_readTime+1,w
  1147     05BB  00A9               	movwf	_hour+1
  1148                           
  1149                           ;rtc.c: 92:             i2c_masterStop();
  1150     05BC  120A  118A  237E  120A  118A  	fcall	_i2c_masterStop
  1151                           
  1152                           ;rtc.c: 93:             break;
  1153     05C1  2DD5               	goto	l180
  1154     05C2                     l1194:
  1155     05C2  0874               	movf	rtc_readTime@clock_address,w
  1156     05C3  00F2               	movwf	??_rtc_readTime
  1157     05C4  01F3               	clrf	??_rtc_readTime+1
  1158                           
  1159                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1160                           ; Switch size 1, requested type "simple"
  1161                           ; Number of cases is 1, Range of values is 0 to 0
  1162                           ; switch strategies available:
  1163                           ; Name         Instructions Cycles
  1164                           ; simple_byte            4     3 (average)
  1165                           ; direct_byte           11     8 (fixed)
  1166                           ; jumptable            260     6 (fixed)
  1167                           ;	Chosen strategy is simple_byte
  1168     05C5  0873               	movf	??_rtc_readTime+1,w
  1169     05C6  3A00               	xorlw	0	; case 0
  1170     05C7  1903               	skipnz
  1171     05C8  2DCA               	goto	l1362
  1172     05C9  2DD5               	goto	l180
  1173     05CA                     l1362:
  1174                           
  1175                           ; Switch size 1, requested type "simple"
  1176                           ; Number of cases is 3, Range of values is 0 to 2
  1177                           ; switch strategies available:
  1178                           ; Name         Instructions Cycles
  1179                           ; simple_byte           10     6 (average)
  1180                           ; direct_byte           17     8 (fixed)
  1181                           ; jumptable            260     6 (fixed)
  1182                           ;	Chosen strategy is simple_byte
  1183     05CA  0872               	movf	??_rtc_readTime,w
  1184     05CB  3A00               	xorlw	0	; case 0
  1185     05CC  1903               	skipnz
  1186     05CD  2D32               	goto	l1186
  1187     05CE  3A01               	xorlw	1	; case 1
  1188     05CF  1903               	skipnz
  1189     05D0  2D62               	goto	l1188
  1190     05D1  3A03               	xorlw	3	; case 2
  1191     05D2  1903               	skipnz
  1192     05D3  2D92               	goto	l1190
  1193     05D4  2DD5               	goto	l180
  1194     05D5                     l180:
  1195     05D5  0008               	return
  1196     05D6                     __end_of_rtc_readTime:
  1197                           
  1198                           	psect	text2
  1199     05D6                     __ptext2:	
  1200 ;; *************** function _rtc_readDate *****************
  1201 ;; Defined at:
  1202 ;;		line 101 in file "rtc.c"
  1203 ;; Parameters:    Size  Location     Type
  1204 ;;  calendar_add    1    wreg     unsigned char 
  1205 ;; Auto vars:     Size  Location     Type
  1206 ;;  calendar_add    1    4[COMMON] unsigned char 
  1207 ;; Return value:  Size  Location     Type
  1208 ;;                  1    wreg      void 
  1209 ;; Registers used:
  1210 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1211 ;; Tracked objects:
  1212 ;;		On entry : 0/0
  1213 ;;		On exit  : 0/0
  1214 ;;		Unchanged: 0/0
  1215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1216 ;;      Params:         0       0       0       0       0
  1217 ;;      Locals:         1       0       0       0       0
  1218 ;;      Temps:          2       0       0       0       0
  1219 ;;      Totals:         3       0       0       0       0
  1220 ;;Total ram usage:        3 bytes
  1221 ;; Hardware stack levels used: 1
  1222 ;; Hardware stack levels required when called: 2
  1223 ;; This function calls:
  1224 ;;		_i2c_masterRepeatedStart
  1225 ;;		_i2c_masterStart
  1226 ;;		_i2c_masterStop
  1227 ;;		_i2c_masterWrite
  1228 ;;		_i2c_readByte
  1229 ;; This function is called by:
  1230 ;;		_main
  1231 ;; This function uses a non-reentrant model
  1232 ;;
  1233                           
  1234     05D6                     _rtc_readDate:	
  1235                           ;psect for function _rtc_readDate
  1236                           
  1237                           
  1238                           ;incstack = 0
  1239                           ; Regs used in _rtc_readDate: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1240                           ;rtc_readDate@calendar_address stored from wreg
  1241     05D6  00F4               	movwf	rtc_readDate@calendar_address
  1242     05D7                     l1200:
  1243                           
  1244                           ;rtc.c: 102:     switch (calendar_address){
  1245     05D7  2E97               	goto	l1210
  1246     05D8                     l1202:
  1247                           
  1248                           ;rtc.c: 104:             i2c_masterStart();
  1249     05D8  120A  118A  2375  120A  118A  	fcall	_i2c_masterStart
  1250                           
  1251                           ;rtc.c: 105:             i2c_masterWrite(0xD0);
  1252     05DD  30D0               	movlw	208
  1253     05DE  120A  118A  2390  120A  118A  	fcall	_i2c_masterWrite
  1254                           
  1255                           ;rtc.c: 106:             i2c_masterWrite(calendar_address);
  1256     05E3  0874               	movf	rtc_readDate@calendar_address,w
  1257     05E4  120A  118A  2390  120A  118A  	fcall	_i2c_masterWrite
  1258                           
  1259                           ;rtc.c: 107:             i2c_masterRepeatedStart();
  1260     05E9  120A  118A  2387  120A  118A  	fcall	_i2c_masterRepeatedStart
  1261                           
  1262                           ;rtc.c: 108:             i2c_masterWrite(0xD1);
  1263     05EE  30D1               	movlw	209
  1264     05EF  120A  118A  2390  120A  118A  	fcall	_i2c_masterWrite
  1265                           
  1266                           ;rtc.c: 109:             day = i2c_readByte(0x03);
  1267     05F4  3003               	movlw	3
  1268     05F5  120A  118A  2452  120A  118A  	fcall	_i2c_readByte
  1269     05FA  00F2               	movwf	??_rtc_readDate
  1270     05FB  01F3               	clrf	??_rtc_readDate+1
  1271     05FC  0872               	movf	??_rtc_readDate,w
  1272     05FD  1283               	bcf	3,5	;RP0=0, select bank0
  1273     05FE  1303               	bcf	3,6	;RP1=0, select bank0
  1274     05FF  00A6               	movwf	_day
  1275     0600  0873               	movf	??_rtc_readDate+1,w
  1276     0601  00A7               	movwf	_day+1
  1277                           
  1278                           ;rtc.c: 110:             i2c_masterStop();
  1279     0602  120A  118A  237E  120A  118A  	fcall	_i2c_masterStop
  1280                           
  1281                           ;rtc.c: 111:             break;
  1282     0607  2EAD               	goto	l190
  1283     0608                     l1204:
  1284                           
  1285                           ;rtc.c: 114:             i2c_masterStart();
  1286     0608  120A  118A  2375  120A  118A  	fcall	_i2c_masterStart
  1287                           
  1288                           ;rtc.c: 115:             i2c_masterWrite(0xD0);
  1289     060D  30D0               	movlw	208
  1290     060E  120A  118A  2390  120A  118A  	fcall	_i2c_masterWrite
  1291                           
  1292                           ;rtc.c: 116:             i2c_masterWrite(calendar_address);
  1293     0613  0874               	movf	rtc_readDate@calendar_address,w
  1294     0614  120A  118A  2390  120A  118A  	fcall	_i2c_masterWrite
  1295                           
  1296                           ;rtc.c: 117:             i2c_masterRepeatedStart();
  1297     0619  120A  118A  2387  120A  118A  	fcall	_i2c_masterRepeatedStart
  1298                           
  1299                           ;rtc.c: 118:             i2c_masterWrite(0xD1);
  1300     061E  30D1               	movlw	209
  1301     061F  120A  118A  2390  120A  118A  	fcall	_i2c_masterWrite
  1302                           
  1303                           ;rtc.c: 119:             date = i2c_readByte(0x04);
  1304     0624  3004               	movlw	4
  1305     0625  120A  118A  2452  120A  118A  	fcall	_i2c_readByte
  1306     062A  00F2               	movwf	??_rtc_readDate
  1307     062B  01F3               	clrf	??_rtc_readDate+1
  1308     062C  0872               	movf	??_rtc_readDate,w
  1309     062D  1283               	bcf	3,5	;RP0=0, select bank0
  1310     062E  1303               	bcf	3,6	;RP1=0, select bank0
  1311     062F  00A4               	movwf	_date
  1312     0630  0873               	movf	??_rtc_readDate+1,w
  1313     0631  00A5               	movwf	_date+1
  1314                           
  1315                           ;rtc.c: 120:             i2c_masterStop();
  1316     0632  120A  118A  237E  120A  118A  	fcall	_i2c_masterStop
  1317                           
  1318                           ;rtc.c: 121:             break;
  1319     0637  2EAD               	goto	l190
  1320     0638                     l1206:
  1321                           
  1322                           ;rtc.c: 124:             i2c_masterStart();
  1323     0638  120A  118A  2375  120A  118A  	fcall	_i2c_masterStart
  1324                           
  1325                           ;rtc.c: 125:             i2c_masterWrite(0xD0);
  1326     063D  30D0               	movlw	208
  1327     063E  120A  118A  2390  120A  118A  	fcall	_i2c_masterWrite
  1328                           
  1329                           ;rtc.c: 126:             i2c_masterWrite(calendar_address);
  1330     0643  0874               	movf	rtc_readDate@calendar_address,w
  1331     0644  120A  118A  2390  120A  118A  	fcall	_i2c_masterWrite
  1332                           
  1333                           ;rtc.c: 127:             i2c_masterRepeatedStart();
  1334     0649  120A  118A  2387  120A  118A  	fcall	_i2c_masterRepeatedStart
  1335                           
  1336                           ;rtc.c: 128:             i2c_masterWrite(0xD1);
  1337     064E  30D1               	movlw	209
  1338     064F  120A  118A  2390  120A  118A  	fcall	_i2c_masterWrite
  1339                           
  1340                           ;rtc.c: 129:             month = i2c_readByte(0x05);
  1341     0654  3005               	movlw	5
  1342     0655  120A  118A  2452  120A  118A  	fcall	_i2c_readByte
  1343     065A  00F2               	movwf	??_rtc_readDate
  1344     065B  01F3               	clrf	??_rtc_readDate+1
  1345     065C  0872               	movf	??_rtc_readDate,w
  1346     065D  1283               	bcf	3,5	;RP0=0, select bank0
  1347     065E  1303               	bcf	3,6	;RP1=0, select bank0
  1348     065F  00A2               	movwf	_month
  1349     0660  0873               	movf	??_rtc_readDate+1,w
  1350     0661  00A3               	movwf	_month+1
  1351                           
  1352                           ;rtc.c: 130:             i2c_masterStop();
  1353     0662  120A  118A  237E  120A  118A  	fcall	_i2c_masterStop
  1354     0667                     l188:	
  1355                           ;rtc.c: 132:         case 0x06:
  1356                           
  1357                           
  1358                           ;rtc.c: 133:             i2c_masterStart();
  1359     0667  120A  118A  2375  120A  118A  	fcall	_i2c_masterStart
  1360                           
  1361                           ;rtc.c: 134:             i2c_masterWrite(0xD0);
  1362     066C  30D0               	movlw	208
  1363     066D  120A  118A  2390  120A  118A  	fcall	_i2c_masterWrite
  1364                           
  1365                           ;rtc.c: 135:             i2c_masterWrite(calendar_address);
  1366     0672  0874               	movf	rtc_readDate@calendar_address,w
  1367     0673  120A  118A  2390  120A  118A  	fcall	_i2c_masterWrite
  1368                           
  1369                           ;rtc.c: 136:             i2c_masterRepeatedStart();
  1370     0678  120A  118A  2387  120A  118A  	fcall	_i2c_masterRepeatedStart
  1371                           
  1372                           ;rtc.c: 137:             i2c_masterWrite(0xD1);
  1373     067D  30D1               	movlw	209
  1374     067E  120A  118A  2390  120A  118A  	fcall	_i2c_masterWrite
  1375                           
  1376                           ;rtc.c: 138:             year = i2c_readByte(0x06);
  1377     0683  3006               	movlw	6
  1378     0684  120A  118A  2452  120A  118A  	fcall	_i2c_readByte
  1379     0689  00F2               	movwf	??_rtc_readDate
  1380     068A  01F3               	clrf	??_rtc_readDate+1
  1381     068B  0872               	movf	??_rtc_readDate,w
  1382     068C  1283               	bcf	3,5	;RP0=0, select bank0
  1383     068D  1303               	bcf	3,6	;RP1=0, select bank0
  1384     068E  00A0               	movwf	_year
  1385     068F  0873               	movf	??_rtc_readDate+1,w
  1386     0690  00A1               	movwf	_year+1
  1387                           
  1388                           ;rtc.c: 139:             i2c_masterStop();
  1389     0691  120A  118A  237E  120A  118A  	fcall	_i2c_masterStop
  1390                           
  1391                           ;rtc.c: 140:             break;
  1392     0696  2EAD               	goto	l190
  1393     0697                     l1210:
  1394     0697  0874               	movf	rtc_readDate@calendar_address,w
  1395     0698  00F2               	movwf	??_rtc_readDate
  1396     0699  01F3               	clrf	??_rtc_readDate+1
  1397                           
  1398                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1399                           ; Switch size 1, requested type "simple"
  1400                           ; Number of cases is 1, Range of values is 0 to 0
  1401                           ; switch strategies available:
  1402                           ; Name         Instructions Cycles
  1403                           ; simple_byte            4     3 (average)
  1404                           ; direct_byte           11     8 (fixed)
  1405                           ; jumptable            260     6 (fixed)
  1406                           ;	Chosen strategy is simple_byte
  1407     069A  0873               	movf	??_rtc_readDate+1,w
  1408     069B  3A00               	xorlw	0	; case 0
  1409     069C  1903               	skipnz
  1410     069D  2E9F               	goto	l1364
  1411     069E  2EAD               	goto	l190
  1412     069F                     l1364:
  1413                           
  1414                           ; Switch size 1, requested type "simple"
  1415                           ; Number of cases is 4, Range of values is 3 to 6
  1416                           ; switch strategies available:
  1417                           ; Name         Instructions Cycles
  1418                           ; simple_byte           13     7 (average)
  1419                           ; direct_byte           23    11 (fixed)
  1420                           ; jumptable            263     9 (fixed)
  1421                           ;	Chosen strategy is simple_byte
  1422     069F  0872               	movf	??_rtc_readDate,w
  1423     06A0  3A03               	xorlw	3	; case 3
  1424     06A1  1903               	skipnz
  1425     06A2  2DD8               	goto	l1202
  1426     06A3  3A07               	xorlw	7	; case 4
  1427     06A4  1903               	skipnz
  1428     06A5  2E08               	goto	l1204
  1429     06A6  3A01               	xorlw	1	; case 5
  1430     06A7  1903               	skipnz
  1431     06A8  2E38               	goto	l1206
  1432     06A9  3A03               	xorlw	3	; case 6
  1433     06AA  1903               	skipnz
  1434     06AB  2E67               	goto	l188
  1435     06AC  2EAD               	goto	l190
  1436     06AD                     l190:
  1437     06AD  0008               	return
  1438     06AE                     __end_of_rtc_readDate:
  1439                           
  1440                           	psect	text3
  1441     0452                     __ptext3:	
  1442 ;; *************** function _i2c_readByte *****************
  1443 ;; Defined at:
  1444 ;;		line 50 in file "i2c.c"
  1445 ;; Parameters:    Size  Location     Type
  1446 ;;  ack             1    wreg     unsigned char 
  1447 ;; Auto vars:     Size  Location     Type
  1448 ;;  ack             1    0[COMMON] unsigned char 
  1449 ;;  incoming_dat    1    1[COMMON] unsigned char 
  1450 ;; Return value:  Size  Location     Type
  1451 ;;                  1    wreg      unsigned char 
  1452 ;; Registers used:
  1453 ;;		wreg, status,2, status,0, pclath, cstack
  1454 ;; Tracked objects:
  1455 ;;		On entry : 0/0
  1456 ;;		On exit  : 0/0
  1457 ;;		Unchanged: 0/0
  1458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1459 ;;      Params:         0       0       0       0       0
  1460 ;;      Locals:         2       0       0       0       0
  1461 ;;      Temps:          0       0       0       0       0
  1462 ;;      Totals:         2       0       0       0       0
  1463 ;;Total ram usage:        2 bytes
  1464 ;; Hardware stack levels used: 1
  1465 ;; Hardware stack levels required when called: 1
  1466 ;; This function calls:
  1467 ;;		_i2c_masterWait
  1468 ;; This function is called by:
  1469 ;;		_rtc_readTime
  1470 ;;		_rtc_readDate
  1471 ;; This function uses a non-reentrant model
  1472 ;;
  1473                           
  1474     0452                     _i2c_readByte:	
  1475                           ;psect for function _i2c_readByte
  1476                           
  1477                           
  1478                           ;incstack = 0
  1479                           ; Regs used in _i2c_readByte: [wreg+status,2+status,0+pclath+cstack]
  1480                           ;i2c_readByte@ack stored from wreg
  1481     0452  00F0               	movwf	i2c_readByte@ack
  1482     0453                     l1104:
  1483                           
  1484                           ;i2c.c: 51:     uint8_t incoming_data;;i2c.c: 52:     i2c_masterWait();
  1485     0453  120A  118A  23BE  120A  118A  	fcall	_i2c_masterWait
  1486     0458                     l1106:
  1487                           
  1488                           ;i2c.c: 53:     SSPCON2bits.RCEN |= 1;
  1489     0458  1683               	bsf	3,5	;RP0=1, select bank1
  1490     0459  1303               	bcf	3,6	;RP1=0, select bank1
  1491     045A  1591               	bsf	17,3	;volatile
  1492                           
  1493                           ;i2c.c: 55:     i2c_masterWait();
  1494     045B  120A  118A  23BE  120A  118A  	fcall	_i2c_masterWait
  1495     0460                     l1108:
  1496                           
  1497                           ;i2c.c: 56:     incoming_data = SSPBUF;
  1498     0460  1283               	bcf	3,5	;RP0=0, select bank0
  1499     0461  1303               	bcf	3,6	;RP1=0, select bank0
  1500     0462  0813               	movf	19,w	;volatile
  1501     0463  00F1               	movwf	i2c_readByte@incoming_data
  1502     0464                     l1110:
  1503                           
  1504                           ;i2c.c: 58:     i2c_masterWait();
  1505     0464  120A  118A  23BE  120A  118A  	fcall	_i2c_masterWait
  1506     0469                     l1112:
  1507                           
  1508                           ;i2c.c: 59:     SSPCON2bits.ACKDT |= (ack)?0:1;
  1509     0469  0870               	movf	i2c_readByte@ack,w
  1510     046A  1903               	btfsc	3,2
  1511     046B  2C6D               	goto	u121
  1512     046C  2C70               	goto	u120
  1513     046D                     u121:
  1514     046D  1683               	bsf	3,5	;RP0=1, select bank1
  1515     046E  1303               	bcf	3,6	;RP1=0, select bank1
  1516     046F  1691               	bsf	17,5	;volatile
  1517     0470                     u120:
  1518     0470                     l1114:
  1519                           
  1520                           ;i2c.c: 60:     SSPCON2bits.ACKEN |= 1;
  1521     0470  1683               	bsf	3,5	;RP0=1, select bank1
  1522     0471  1303               	bcf	3,6	;RP1=0, select bank1
  1523     0472  1611               	bsf	17,4	;volatile
  1524     0473                     l1116:
  1525                           
  1526                           ;i2c.c: 61:     return incoming_data;
  1527     0473  0871               	movf	i2c_readByte@incoming_data,w
  1528     0474                     l51:
  1529     0474  0008               	return
  1530     0475                     __end_of_i2c_readByte:
  1531                           
  1532                           	psect	text4
  1533     0387                     __ptext4:	
  1534 ;; *************** function _i2c_masterRepeatedStart *****************
  1535 ;; Defined at:
  1536 ;;		line 34 in file "i2c.c"
  1537 ;; Parameters:    Size  Location     Type
  1538 ;;		None
  1539 ;; Auto vars:     Size  Location     Type
  1540 ;;		None
  1541 ;; Return value:  Size  Location     Type
  1542 ;;                  1    wreg      void 
  1543 ;; Registers used:
  1544 ;;		wreg, status,2, status,0, pclath, cstack
  1545 ;; Tracked objects:
  1546 ;;		On entry : 0/0
  1547 ;;		On exit  : 0/0
  1548 ;;		Unchanged: 0/0
  1549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1550 ;;      Params:         0       0       0       0       0
  1551 ;;      Locals:         0       0       0       0       0
  1552 ;;      Temps:          0       0       0       0       0
  1553 ;;      Totals:         0       0       0       0       0
  1554 ;;Total ram usage:        0 bytes
  1555 ;; Hardware stack levels used: 1
  1556 ;; Hardware stack levels required when called: 1
  1557 ;; This function calls:
  1558 ;;		_i2c_masterWait
  1559 ;; This function is called by:
  1560 ;;		_rtc_readTime
  1561 ;;		_rtc_readDate
  1562 ;; This function uses a non-reentrant model
  1563 ;;
  1564                           
  1565     0387                     _i2c_masterRepeatedStart:	
  1566                           ;psect for function _i2c_masterRepeatedStart
  1567                           
  1568     0387                     l1100:	
  1569                           ;incstack = 0
  1570                           ; Regs used in _i2c_masterRepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  1571                           
  1572                           
  1573                           ;i2c.c: 35:     i2c_masterWait();
  1574     0387  120A  118A  23BE  120A  118A  	fcall	_i2c_masterWait
  1575     038C                     l1102:
  1576                           
  1577                           ;i2c.c: 36:     SSPCON2bits.RSEN |= 1;
  1578     038C  1683               	bsf	3,5	;RP0=1, select bank1
  1579     038D  1303               	bcf	3,6	;RP1=0, select bank1
  1580     038E  1491               	bsf	17,1	;volatile
  1581     038F                     l42:
  1582     038F  0008               	return
  1583     0390                     __end_of_i2c_masterRepeatedStart:
  1584                           
  1585                           	psect	text5
  1586     03B2                     __ptext5:	
  1587 ;; *************** function _rtc_convUpperNibble *****************
  1588 ;; Defined at:
  1589 ;;		line 35 in file "rtc.c"
  1590 ;; Parameters:    Size  Location     Type
  1591 ;;  digit           1    wreg     unsigned char 
  1592 ;; Auto vars:     Size  Location     Type
  1593 ;;  digit           1    1[COMMON] unsigned char 
  1594 ;; Return value:  Size  Location     Type
  1595 ;;                  1    wreg      unsigned char 
  1596 ;; Registers used:
  1597 ;;		wreg, status,2, status,0
  1598 ;; Tracked objects:
  1599 ;;		On entry : 0/0
  1600 ;;		On exit  : 0/0
  1601 ;;		Unchanged: 0/0
  1602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1603 ;;      Params:         0       0       0       0       0
  1604 ;;      Locals:         1       0       0       0       0
  1605 ;;      Temps:          1       0       0       0       0
  1606 ;;      Totals:         2       0       0       0       0
  1607 ;;Total ram usage:        2 bytes
  1608 ;; Hardware stack levels used: 1
  1609 ;; This function calls:
  1610 ;;		Nothing
  1611 ;; This function is called by:
  1612 ;;		_main
  1613 ;; This function uses a non-reentrant model
  1614 ;;
  1615                           
  1616     03B2                     _rtc_convUpperNibble:	
  1617                           ;psect for function _rtc_convUpperNibble
  1618                           
  1619                           
  1620                           ;incstack = 0
  1621                           ; Regs used in _rtc_convUpperNibble: [wreg+status,2+status,0]
  1622                           ;rtc_convUpperNibble@digit stored from wreg
  1623     03B2  00F1               	movwf	rtc_convUpperNibble@digit
  1624     03B3                     l1216:
  1625                           
  1626                           ;rtc.c: 36:     return ((digit >> 4) + 48);
  1627     03B3  0871               	movf	rtc_convUpperNibble@digit,w
  1628     03B4  00F0               	movwf	??_rtc_convUpperNibble
  1629     03B5  3004               	movlw	4
  1630     03B6                     u185:
  1631     03B6  1003               	clrc
  1632     03B7  0CF0               	rrf	??_rtc_convUpperNibble,f
  1633     03B8  3EFF               	addlw	-1
  1634     03B9  1D03               	skipz
  1635     03BA  2BB6               	goto	u185
  1636     03BB  0870               	movf	??_rtc_convUpperNibble,w
  1637     03BC  3E30               	addlw	48
  1638     03BD                     l168:
  1639     03BD  0008               	return
  1640     03BE                     __end_of_rtc_convUpperNibble:
  1641                           
  1642                           	psect	text6
  1643     0370                     __ptext6:	
  1644 ;; *************** function _rtc_convLowerNibble *****************
  1645 ;; Defined at:
  1646 ;;		line 39 in file "rtc.c"
  1647 ;; Parameters:    Size  Location     Type
  1648 ;;  digit           1    wreg     unsigned char 
  1649 ;; Auto vars:     Size  Location     Type
  1650 ;;  digit           1    0[COMMON] unsigned char 
  1651 ;; Return value:  Size  Location     Type
  1652 ;;                  1    wreg      unsigned char 
  1653 ;; Registers used:
  1654 ;;		wreg, status,2, status,0
  1655 ;; Tracked objects:
  1656 ;;		On entry : 0/0
  1657 ;;		On exit  : 0/0
  1658 ;;		Unchanged: 0/0
  1659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1660 ;;      Params:         0       0       0       0       0
  1661 ;;      Locals:         1       0       0       0       0
  1662 ;;      Temps:          0       0       0       0       0
  1663 ;;      Totals:         1       0       0       0       0
  1664 ;;Total ram usage:        1 bytes
  1665 ;; Hardware stack levels used: 1
  1666 ;; This function calls:
  1667 ;;		Nothing
  1668 ;; This function is called by:
  1669 ;;		_main
  1670 ;; This function uses a non-reentrant model
  1671 ;;
  1672                           
  1673     0370                     _rtc_convLowerNibble:	
  1674                           ;psect for function _rtc_convLowerNibble
  1675                           
  1676                           
  1677                           ;incstack = 0
  1678                           ; Regs used in _rtc_convLowerNibble: [wreg+status,2+status,0]
  1679                           ;rtc_convLowerNibble@digit stored from wreg
  1680     0370  00F0               	movwf	rtc_convLowerNibble@digit
  1681     0371                     l1220:
  1682                           
  1683                           ;rtc.c: 40:     return ((digit & 0x0F) + 48);
  1684     0371  0870               	movf	rtc_convLowerNibble@digit,w
  1685     0372  390F               	andlw	15
  1686     0373  3E30               	addlw	48
  1687     0374                     l171:
  1688     0374  0008               	return
  1689     0375                     __end_of_rtc_convLowerNibble:
  1690                           
  1691                           	psect	text7
  1692     0475                     __ptext7:	
  1693 ;; *************** function _lcd_writeString *****************
  1694 ;; Defined at:
  1695 ;;		line 113 in file "i2c.c"
  1696 ;; Parameters:    Size  Location     Type
  1697 ;;  str             1    wreg     PTR unsigned char 
  1698 ;;		 -> STR_7(2), STR_6(2), STR_5(7), STR_4(2), 
  1699 ;;		 -> STR_3(2), STR_2(7), STR_1(13), 
  1700 ;; Auto vars:     Size  Location     Type
  1701 ;;  str             1    8[COMMON] PTR unsigned char 
  1702 ;;		 -> STR_7(2), STR_6(2), STR_5(7), STR_4(2), 
  1703 ;;		 -> STR_3(2), STR_2(7), STR_1(13), 
  1704 ;;  i               2    6[COMMON] int 
  1705 ;; Return value:  Size  Location     Type
  1706 ;;                  1    wreg      void 
  1707 ;; Registers used:
  1708 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1709 ;; Tracked objects:
  1710 ;;		On entry : 0/0
  1711 ;;		On exit  : 0/0
  1712 ;;		Unchanged: 0/0
  1713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1714 ;;      Params:         0       0       0       0       0
  1715 ;;      Locals:         3       0       0       0       0
  1716 ;;      Temps:          0       0       0       0       0
  1717 ;;      Totals:         3       0       0       0       0
  1718 ;;Total ram usage:        3 bytes
  1719 ;; Hardware stack levels used: 1
  1720 ;; Hardware stack levels required when called: 5
  1721 ;; This function calls:
  1722 ;;		_lcd_writeChar
  1723 ;; This function is called by:
  1724 ;;		_main
  1725 ;; This function uses a non-reentrant model
  1726 ;;
  1727                           
  1728     0475                     _lcd_writeString:	
  1729                           ;psect for function _lcd_writeString
  1730                           
  1731                           
  1732                           ;incstack = 0
  1733                           ; Regs used in _lcd_writeString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1734                           ;lcd_writeString@str stored from wreg
  1735     0475  00F8               	movwf	lcd_writeString@str
  1736     0476                     l1164:
  1737                           
  1738                           ;i2c.c: 114:     for(int i = 0;str[i] != '\0';i++)
  1739     0476  01F6               	clrf	lcd_writeString@i
  1740     0477  01F7               	clrf	lcd_writeString@i+1
  1741     0478  2C8C               	goto	l1170
  1742     0479                     l1166:
  1743                           
  1744                           ;i2c.c: 115:         lcd_writeChar(str[i]);
  1745     0479  0876               	movf	lcd_writeString@i,w
  1746     047A  0778               	addwf	lcd_writeString@str,w
  1747     047B  0084               	movwf	4
  1748     047C  120A  118A  2003  120A  118A  	fcall	stringdir
  1749     0481  120A  118A  23FE  120A  118A  	fcall	_lcd_writeChar
  1750     0486                     l1168:
  1751     0486  3001               	movlw	1
  1752     0487  07F6               	addwf	lcd_writeString@i,f
  1753     0488  1803               	skipnc
  1754     0489  0AF7               	incf	lcd_writeString@i+1,f
  1755     048A  3000               	movlw	0
  1756     048B  07F7               	addwf	lcd_writeString@i+1,f
  1757     048C                     l1170:
  1758     048C  0876               	movf	lcd_writeString@i,w
  1759     048D  0778               	addwf	lcd_writeString@str,w
  1760     048E  0084               	movwf	4
  1761     048F  120A  118A  2003  120A  118A  	fcall	stringdir
  1762     0494  3A00               	xorlw	0
  1763     0495  1D03               	skipz
  1764     0496  2C98               	goto	u151
  1765     0497  2C99               	goto	u150
  1766     0498                     u151:
  1767     0498  2C79               	goto	l1166
  1768     0499                     u150:
  1769     0499                     l72:
  1770     0499  0008               	return
  1771     049A                     __end_of_lcd_writeString:
  1772                           
  1773                           	psect	text8
  1774     03FE                     __ptext8:	
  1775 ;; *************** function _lcd_writeChar *****************
  1776 ;; Defined at:
  1777 ;;		line 107 in file "i2c.c"
  1778 ;; Parameters:    Size  Location     Type
  1779 ;;  data            1    wreg     unsigned char 
  1780 ;; Auto vars:     Size  Location     Type
  1781 ;;  data            1    5[COMMON] unsigned char 
  1782 ;; Return value:  Size  Location     Type
  1783 ;;                  1    wreg      void 
  1784 ;; Registers used:
  1785 ;;		wreg, status,2, status,0, pclath, cstack
  1786 ;; Tracked objects:
  1787 ;;		On entry : 0/0
  1788 ;;		On exit  : 0/0
  1789 ;;		Unchanged: 0/0
  1790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1791 ;;      Params:         0       0       0       0       0
  1792 ;;      Locals:         1       0       0       0       0
  1793 ;;      Temps:          1       0       0       0       0
  1794 ;;      Totals:         2       0       0       0       0
  1795 ;;Total ram usage:        2 bytes
  1796 ;; Hardware stack levels used: 1
  1797 ;; Hardware stack levels required when called: 4
  1798 ;; This function calls:
  1799 ;;		_lcd_write4Bit
  1800 ;; This function is called by:
  1801 ;;		_lcd_writeString
  1802 ;;		_main
  1803 ;; This function uses a non-reentrant model
  1804 ;;
  1805                           
  1806     03FE                     _lcd_writeChar:	
  1807                           ;psect for function _lcd_writeChar
  1808                           
  1809                           
  1810                           ;incstack = 0
  1811                           ; Regs used in _lcd_writeChar: [wreg+status,2+status,0+pclath+cstack]
  1812                           ;lcd_writeChar@data stored from wreg
  1813     03FE  00F5               	movwf	lcd_writeChar@data
  1814     03FF                     l1126:
  1815                           
  1816                           ;i2c.c: 108:     RS = 1;
  1817     03FF  01FD               	clrf	_RS
  1818     0400  0AFD               	incf	_RS,f
  1819     0401                     l1128:
  1820                           
  1821                           ;i2c.c: 109:     lcd_write4Bit(data & 0xF0);
  1822     0401  0875               	movf	lcd_writeChar@data,w
  1823     0402  39F0               	andlw	240
  1824     0403  120A  118A  23CB  120A  118A  	fcall	_lcd_write4Bit
  1825                           
  1826                           ;i2c.c: 110:     lcd_write4Bit((data << 4) & 0xF0);
  1827     0408  0875               	movf	lcd_writeChar@data,w
  1828     0409  00F4               	movwf	??_lcd_writeChar
  1829     040A  3003               	movlw	3
  1830     040B                     u145:
  1831     040B  1003               	clrc
  1832     040C  0DF4               	rlf	??_lcd_writeChar,f
  1833     040D  3EFF               	addlw	-1
  1834     040E  1D03               	skipz
  1835     040F  2C0B               	goto	u145
  1836     0410  1003               	clrc
  1837     0411  0D74               	rlf	??_lcd_writeChar,w
  1838     0412  39F0               	andlw	240
  1839     0413  120A  118A  23CB  120A  118A  	fcall	_lcd_write4Bit
  1840     0418                     l66:
  1841     0418  0008               	return
  1842     0419                     __end_of_lcd_writeChar:
  1843                           
  1844                           	psect	text9
  1845     0419                     __ptext9:	
  1846 ;; *************** function _lcd_setCursor *****************
  1847 ;; Defined at:
  1848 ;;		line 118 in file "i2c.c"
  1849 ;; Parameters:    Size  Location     Type
  1850 ;;  row             1    wreg     unsigned char 
  1851 ;;  col             1    6[COMMON] unsigned char 
  1852 ;; Auto vars:     Size  Location     Type
  1853 ;;  row             1    7[COMMON] unsigned char 
  1854 ;; Return value:  Size  Location     Type
  1855 ;;                  1    wreg      void 
  1856 ;; Registers used:
  1857 ;;		wreg, status,2, status,0, pclath, cstack
  1858 ;; Tracked objects:
  1859 ;;		On entry : 0/0
  1860 ;;		On exit  : 0/0
  1861 ;;		Unchanged: 0/0
  1862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1863 ;;      Params:         1       0       0       0       0
  1864 ;;      Locals:         1       0       0       0       0
  1865 ;;      Temps:          0       0       0       0       0
  1866 ;;      Totals:         2       0       0       0       0
  1867 ;;Total ram usage:        2 bytes
  1868 ;; Hardware stack levels used: 1
  1869 ;; Hardware stack levels required when called: 5
  1870 ;; This function calls:
  1871 ;;		_lcd_cmd
  1872 ;; This function is called by:
  1873 ;;		_main
  1874 ;; This function uses a non-reentrant model
  1875 ;;
  1876                           
  1877     0419                     _lcd_setCursor:	
  1878                           ;psect for function _lcd_setCursor
  1879                           
  1880                           
  1881                           ;incstack = 0
  1882                           ; Regs used in _lcd_setCursor: [wreg+status,2+status,0+pclath+cstack]
  1883                           ;lcd_setCursor@row stored from wreg
  1884     0419  00F7               	movwf	lcd_setCursor@row
  1885     041A                     l1172:
  1886                           
  1887                           ;i2c.c: 119:     if(row == 1)
  1888     041A  0377               	decf	lcd_setCursor@row,w
  1889     041B  1D03               	btfss	3,2
  1890     041C  2C1E               	goto	u161
  1891     041D  2C1F               	goto	u160
  1892     041E                     u161:
  1893     041E  2C27               	goto	l1176
  1894     041F                     u160:
  1895     041F                     l1174:
  1896                           
  1897                           ;i2c.c: 120:         lcd_cmd(0x80 + col - 1);
  1898     041F  0876               	movf	lcd_setCursor@col,w
  1899     0420  3E7F               	addlw	127
  1900     0421  120A  118A  23E4  120A  118A  	fcall	_lcd_cmd
  1901     0426  2C34               	goto	l78
  1902     0427                     l1176:
  1903     0427  3002               	movlw	2
  1904     0428  0677               	xorwf	lcd_setCursor@row,w
  1905     0429  1D03               	btfss	3,2
  1906     042A  2C2C               	goto	u171
  1907     042B  2C2D               	goto	u170
  1908     042C                     u171:
  1909     042C  2C34               	goto	l78
  1910     042D                     u170:
  1911     042D                     l1178:
  1912                           
  1913                           ;i2c.c: 122:         lcd_cmd(0xC0 + col - 1);
  1914     042D  0876               	movf	lcd_setCursor@col,w
  1915     042E  3EBF               	addlw	191
  1916     042F  120A  118A  23E4  120A  118A  	fcall	_lcd_cmd
  1917     0434                     l78:
  1918     0434  0008               	return
  1919     0435                     __end_of_lcd_setCursor:
  1920                           
  1921                           	psect	text10
  1922     049A                     __ptext10:	
  1923 ;; *************** function _lcd_init *****************
  1924 ;; Defined at:
  1925 ;;		line 65 in file "i2c.c"
  1926 ;; Parameters:    Size  Location     Type
  1927 ;;  i2c_Add         1    wreg     unsigned char 
  1928 ;; Auto vars:     Size  Location     Type
  1929 ;;  i2c_Add         1    9[COMMON] unsigned char 
  1930 ;; Return value:  Size  Location     Type
  1931 ;;                  1    wreg      void 
  1932 ;; Registers used:
  1933 ;;		wreg, status,2, status,0, pclath, cstack
  1934 ;; Tracked objects:
  1935 ;;		On entry : 0/0
  1936 ;;		On exit  : 0/0
  1937 ;;		Unchanged: 0/0
  1938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1939 ;;      Params:         0       0       0       0       0
  1940 ;;      Locals:         1       0       0       0       0
  1941 ;;      Temps:          3       0       0       0       0
  1942 ;;      Totals:         4       0       0       0       0
  1943 ;;Total ram usage:        4 bytes
  1944 ;; Hardware stack levels used: 1
  1945 ;; Hardware stack levels required when called: 5
  1946 ;; This function calls:
  1947 ;;		_lcd_cmd
  1948 ;; This function is called by:
  1949 ;;		_main
  1950 ;; This function uses a non-reentrant model
  1951 ;;
  1952                           
  1953     049A                     _lcd_init:	
  1954                           ;psect for function _lcd_init
  1955                           
  1956                           
  1957                           ;incstack = 0
  1958                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1959                           ;lcd_init@i2c_Add stored from wreg
  1960     049A  00F9               	movwf	lcd_init@i2c_Add
  1961     049B                     l1140:
  1962                           
  1963                           ;i2c.c: 66:     i2c_add = i2c_Add;
  1964     049B  0879               	movf	lcd_init@i2c_Add,w
  1965     049C  1283               	bcf	3,5	;RP0=0, select bank0
  1966     049D  1303               	bcf	3,6	;RP1=0, select bank0
  1967     049E  00AE               	movwf	_i2c_add
  1968                           
  1969                           ;i2c.c: 68:     _delay((unsigned long)((30)*(16000000/4000.0)));
  1970     049F  309C               	movlw	156
  1971     04A0  00F7               	movwf	??_lcd_init+1
  1972     04A1  30D7               	movlw	215
  1973     04A2  00F6               	movwf	??_lcd_init
  1974     04A3                     u207:
  1975     04A3  0BF6               	decfsz	??_lcd_init,f
  1976     04A4  2CA3               	goto	u207
  1977     04A5  0BF7               	decfsz	??_lcd_init+1,f
  1978     04A6  2CA3               	goto	u207
  1979     04A7                     l1142:
  1980                           
  1981                           ;i2c.c: 69:     lcd_cmd(0x03);
  1982     04A7  3003               	movlw	3
  1983     04A8  120A  118A  23E4  120A  118A  	fcall	_lcd_cmd
  1984     04AD                     l1144:
  1985                           
  1986                           ;i2c.c: 70:     _delay((unsigned long)((5)*(16000000/4000.0)));
  1987     04AD  301A               	movlw	26
  1988     04AE  00F7               	movwf	??_lcd_init+1
  1989     04AF  30F8               	movlw	248
  1990     04B0  00F6               	movwf	??_lcd_init
  1991     04B1                     u217:
  1992     04B1  0BF6               	decfsz	??_lcd_init,f
  1993     04B2  2CB1               	goto	u217
  1994     04B3  0BF7               	decfsz	??_lcd_init+1,f
  1995     04B4  2CB1               	goto	u217
  1996     04B5  0000               	nop
  1997                           
  1998                           ;i2c.c: 71:     lcd_cmd(0x03);
  1999     04B6  3003               	movlw	3
  2000     04B7  120A  118A  23E4  120A  118A  	fcall	_lcd_cmd
  2001     04BC                     l1146:
  2002                           
  2003                           ;i2c.c: 72:     _delay((unsigned long)((5)*(16000000/4000.0)));
  2004     04BC  301A               	movlw	26
  2005     04BD  00F7               	movwf	??_lcd_init+1
  2006     04BE  30F8               	movlw	248
  2007     04BF  00F6               	movwf	??_lcd_init
  2008     04C0                     u227:
  2009     04C0  0BF6               	decfsz	??_lcd_init,f
  2010     04C1  2CC0               	goto	u227
  2011     04C2  0BF7               	decfsz	??_lcd_init+1,f
  2012     04C3  2CC0               	goto	u227
  2013     04C4  0000               	nop
  2014     04C5                     l1148:
  2015                           
  2016                           ;i2c.c: 73:     lcd_cmd(0x03);
  2017     04C5  3003               	movlw	3
  2018     04C6  120A  118A  23E4  120A  118A  	fcall	_lcd_cmd
  2019                           
  2020                           ;i2c.c: 74:     _delay((unsigned long)((5)*(16000000/4000.0)));
  2021     04CB  301A               	movlw	26
  2022     04CC  00F7               	movwf	??_lcd_init+1
  2023     04CD  30F8               	movlw	248
  2024     04CE  00F6               	movwf	??_lcd_init
  2025     04CF                     u237:
  2026     04CF  0BF6               	decfsz	??_lcd_init,f
  2027     04D0  2CCF               	goto	u237
  2028     04D1  0BF7               	decfsz	??_lcd_init+1,f
  2029     04D2  2CCF               	goto	u237
  2030     04D3  0000               	nop
  2031     04D4                     l1150:
  2032                           
  2033                           ;i2c.c: 75:     lcd_cmd(0x02);
  2034     04D4  3002               	movlw	2
  2035     04D5  120A  118A  23E4  120A  118A  	fcall	_lcd_cmd
  2036     04DA                     l1152:
  2037                           
  2038                           ;i2c.c: 76:     _delay((unsigned long)((5)*(16000000/4000.0)));
  2039     04DA  301A               	movlw	26
  2040     04DB  00F7               	movwf	??_lcd_init+1
  2041     04DC  30F8               	movlw	248
  2042     04DD  00F6               	movwf	??_lcd_init
  2043     04DE                     u247:
  2044     04DE  0BF6               	decfsz	??_lcd_init,f
  2045     04DF  2CDE               	goto	u247
  2046     04E0  0BF7               	decfsz	??_lcd_init+1,f
  2047     04E1  2CDE               	goto	u247
  2048     04E2  0000               	nop
  2049                           
  2050                           ;i2c.c: 77:     lcd_cmd(0x20 | (2 << 2));
  2051     04E3  3028               	movlw	40
  2052     04E4  120A  118A  23E4  120A  118A  	fcall	_lcd_cmd
  2053     04E9                     l1154:
  2054                           
  2055                           ;i2c.c: 78:     _delay((unsigned long)((50)*(16000000/4000.0)));
  2056     04E9  3002               	movlw	2
  2057     04EA  00F8               	movwf	??_lcd_init+2
  2058     04EB  3004               	movlw	4
  2059     04EC  00F7               	movwf	??_lcd_init+1
  2060     04ED  30BA               	movlw	186
  2061     04EE  00F6               	movwf	??_lcd_init
  2062     04EF                     u257:
  2063     04EF  0BF6               	decfsz	??_lcd_init,f
  2064     04F0  2CEF               	goto	u257
  2065     04F1  0BF7               	decfsz	??_lcd_init+1,f
  2066     04F2  2CEF               	goto	u257
  2067     04F3  0BF8               	decfsz	??_lcd_init+2,f
  2068     04F4  2CEF               	goto	u257
  2069     04F5  0000               	nop
  2070     04F6                     l1156:
  2071                           
  2072                           ;i2c.c: 79:     lcd_cmd(0x0C);
  2073     04F6  300C               	movlw	12
  2074     04F7  120A  118A  23E4  120A  118A  	fcall	_lcd_cmd
  2075                           
  2076                           ;i2c.c: 80:     _delay((unsigned long)((50)*(16000000/4000.0)));
  2077     04FC  3002               	movlw	2
  2078     04FD  00F8               	movwf	??_lcd_init+2
  2079     04FE  3004               	movlw	4
  2080     04FF  00F7               	movwf	??_lcd_init+1
  2081     0500  30BA               	movlw	186
  2082     0501  00F6               	movwf	??_lcd_init
  2083     0502                     u267:
  2084     0502  0BF6               	decfsz	??_lcd_init,f
  2085     0503  2D02               	goto	u267
  2086     0504  0BF7               	decfsz	??_lcd_init+1,f
  2087     0505  2D02               	goto	u267
  2088     0506  0BF8               	decfsz	??_lcd_init+2,f
  2089     0507  2D02               	goto	u267
  2090     0508  0000               	nop
  2091     0509                     l1158:
  2092                           
  2093                           ;i2c.c: 81:     lcd_cmd(0x01);
  2094     0509  3001               	movlw	1
  2095     050A  120A  118A  23E4  120A  118A  	fcall	_lcd_cmd
  2096     050F                     l1160:
  2097                           
  2098                           ;i2c.c: 82:     _delay((unsigned long)((50)*(16000000/4000.0)));
  2099     050F  3002               	movlw	2
  2100     0510  00F8               	movwf	??_lcd_init+2
  2101     0511  3004               	movlw	4
  2102     0512  00F7               	movwf	??_lcd_init+1
  2103     0513  30BA               	movlw	186
  2104     0514  00F6               	movwf	??_lcd_init
  2105     0515                     u277:
  2106     0515  0BF6               	decfsz	??_lcd_init,f
  2107     0516  2D15               	goto	u277
  2108     0517  0BF7               	decfsz	??_lcd_init+1,f
  2109     0518  2D15               	goto	u277
  2110     0519  0BF8               	decfsz	??_lcd_init+2,f
  2111     051A  2D15               	goto	u277
  2112     051B  0000               	nop
  2113                           
  2114                           ;i2c.c: 83:     lcd_cmd(0x04 | 0x02);
  2115     051C  3006               	movlw	6
  2116     051D  120A  118A  23E4  120A  118A  	fcall	_lcd_cmd
  2117     0522                     l1162:
  2118                           
  2119                           ;i2c.c: 84:     _delay((unsigned long)((50)*(16000000/4000.0)));
  2120     0522  3002               	movlw	2
  2121     0523  00F8               	movwf	??_lcd_init+2
  2122     0524  3004               	movlw	4
  2123     0525  00F7               	movwf	??_lcd_init+1
  2124     0526  30BA               	movlw	186
  2125     0527  00F6               	movwf	??_lcd_init
  2126     0528                     u287:
  2127     0528  0BF6               	decfsz	??_lcd_init,f
  2128     0529  2D28               	goto	u287
  2129     052A  0BF7               	decfsz	??_lcd_init+1,f
  2130     052B  2D28               	goto	u287
  2131     052C  0BF8               	decfsz	??_lcd_init+2,f
  2132     052D  2D28               	goto	u287
  2133     052E  0000               	nop
  2134     052F                     l54:
  2135     052F  0008               	return
  2136     0530                     __end_of_lcd_init:
  2137                           
  2138                           	psect	text11
  2139     039B                     __ptext11:	
  2140 ;; *************** function _lcd_clear *****************
  2141 ;; Defined at:
  2142 ;;		line 145 in file "i2c.c"
  2143 ;; Parameters:    Size  Location     Type
  2144 ;;		None
  2145 ;; Auto vars:     Size  Location     Type
  2146 ;;		None
  2147 ;; Return value:  Size  Location     Type
  2148 ;;                  1    wreg      void 
  2149 ;; Registers used:
  2150 ;;		wreg, status,2, status,0, pclath, cstack
  2151 ;; Tracked objects:
  2152 ;;		On entry : 0/0
  2153 ;;		On exit  : 0/0
  2154 ;;		Unchanged: 0/0
  2155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2156 ;;      Params:         0       0       0       0       0
  2157 ;;      Locals:         0       0       0       0       0
  2158 ;;      Temps:          1       0       0       0       0
  2159 ;;      Totals:         1       0       0       0       0
  2160 ;;Total ram usage:        1 bytes
  2161 ;; Hardware stack levels used: 1
  2162 ;; Hardware stack levels required when called: 5
  2163 ;; This function calls:
  2164 ;;		_lcd_cmd
  2165 ;; This function is called by:
  2166 ;;		_main
  2167 ;; This function uses a non-reentrant model
  2168 ;;
  2169                           
  2170     039B                     _lcd_clear:	
  2171                           ;psect for function _lcd_clear
  2172                           
  2173     039B                     l1180:	
  2174                           ;incstack = 0
  2175                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
  2176                           
  2177                           
  2178                           ;i2c.c: 146:     lcd_cmd(0x01);
  2179     039B  3001               	movlw	1
  2180     039C  120A  118A  23E4  120A  118A  	fcall	_lcd_cmd
  2181     03A1                     l1182:
  2182                           
  2183                           ;i2c.c: 147:     _delay((unsigned long)((40)*(16000000/4000000.0)));
  2184     03A1  3035               	movlw	53
  2185     03A2  00F6               	movwf	??_lcd_clear
  2186     03A3                     u297:
  2187     03A3  0BF6               	decfsz	??_lcd_clear,f
  2188     03A4  2BA3               	goto	u297
  2189     03A5                     l93:
  2190     03A5  0008               	return
  2191     03A6                     __end_of_lcd_clear:
  2192                           
  2193                           	psect	text12
  2194     03E4                     __ptext12:	
  2195 ;; *************** function _lcd_cmd *****************
  2196 ;; Defined at:
  2197 ;;		line 101 in file "i2c.c"
  2198 ;; Parameters:    Size  Location     Type
  2199 ;;  cmd             1    wreg     unsigned char 
  2200 ;; Auto vars:     Size  Location     Type
  2201 ;;  cmd             1    5[COMMON] unsigned char 
  2202 ;; Return value:  Size  Location     Type
  2203 ;;                  1    wreg      void 
  2204 ;; Registers used:
  2205 ;;		wreg, status,2, status,0, pclath, cstack
  2206 ;; Tracked objects:
  2207 ;;		On entry : 0/0
  2208 ;;		On exit  : 0/0
  2209 ;;		Unchanged: 0/0
  2210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2211 ;;      Params:         0       0       0       0       0
  2212 ;;      Locals:         1       0       0       0       0
  2213 ;;      Temps:          1       0       0       0       0
  2214 ;;      Totals:         2       0       0       0       0
  2215 ;;Total ram usage:        2 bytes
  2216 ;; Hardware stack levels used: 1
  2217 ;; Hardware stack levels required when called: 4
  2218 ;; This function calls:
  2219 ;;		_lcd_write4Bit
  2220 ;; This function is called by:
  2221 ;;		_lcd_init
  2222 ;;		_lcd_setCursor
  2223 ;;		_lcd_clear
  2224 ;;		_lcd_shiftLeft
  2225 ;;		_lcd_shiftRight
  2226 ;; This function uses a non-reentrant model
  2227 ;;
  2228                           
  2229     03E4                     _lcd_cmd:	
  2230                           ;psect for function _lcd_cmd
  2231                           
  2232                           
  2233                           ;incstack = 0
  2234                           ; Regs used in _lcd_cmd: [wreg+status,2+status,0+pclath+cstack]
  2235                           ;lcd_cmd@cmd stored from wreg
  2236     03E4  00F5               	movwf	lcd_cmd@cmd
  2237     03E5                     l1120:
  2238                           
  2239                           ;i2c.c: 102:     RS = 0;
  2240     03E5  01FD               	clrf	_RS
  2241     03E6                     l1122:
  2242                           
  2243                           ;i2c.c: 103:     lcd_write4Bit(cmd & 0xF0);
  2244     03E6  0875               	movf	lcd_cmd@cmd,w
  2245     03E7  39F0               	andlw	240
  2246     03E8  120A  118A  23CB  120A  118A  	fcall	_lcd_write4Bit
  2247     03ED                     l1124:
  2248                           
  2249                           ;i2c.c: 104:     lcd_write4Bit((cmd << 4) & 0xF0);
  2250     03ED  0875               	movf	lcd_cmd@cmd,w
  2251     03EE  00F4               	movwf	??_lcd_cmd
  2252     03EF  3003               	movlw	3
  2253     03F0                     u135:
  2254     03F0  1003               	clrc
  2255     03F1  0DF4               	rlf	??_lcd_cmd,f
  2256     03F2  3EFF               	addlw	-1
  2257     03F3  1D03               	skipz
  2258     03F4  2BF0               	goto	u135
  2259     03F5  1003               	clrc
  2260     03F6  0D74               	rlf	??_lcd_cmd,w
  2261     03F7  39F0               	andlw	240
  2262     03F8  120A  118A  23CB  120A  118A  	fcall	_lcd_write4Bit
  2263     03FD                     l63:
  2264     03FD  0008               	return
  2265     03FE                     __end_of_lcd_cmd:
  2266                           
  2267                           	psect	text13
  2268     03CB                     __ptext13:	
  2269 ;; *************** function _lcd_write4Bit *****************
  2270 ;; Defined at:
  2271 ;;		line 94 in file "i2c.c"
  2272 ;; Parameters:    Size  Location     Type
  2273 ;;  nibble          1    wreg     unsigned char 
  2274 ;; Auto vars:     Size  Location     Type
  2275 ;;  nibble          1    3[COMMON] unsigned char 
  2276 ;; Return value:  Size  Location     Type
  2277 ;;                  1    wreg      void 
  2278 ;; Registers used:
  2279 ;;		wreg, status,2, status,0, pclath, cstack
  2280 ;; Tracked objects:
  2281 ;;		On entry : 0/0
  2282 ;;		On exit  : 0/0
  2283 ;;		Unchanged: 0/0
  2284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2285 ;;      Params:         0       0       0       0       0
  2286 ;;      Locals:         1       0       0       0       0
  2287 ;;      Temps:          1       0       0       0       0
  2288 ;;      Totals:         2       0       0       0       0
  2289 ;;Total ram usage:        2 bytes
  2290 ;; Hardware stack levels used: 1
  2291 ;; Hardware stack levels required when called: 3
  2292 ;; This function calls:
  2293 ;;		_io_expanderWrite
  2294 ;; This function is called by:
  2295 ;;		_lcd_cmd
  2296 ;;		_lcd_writeChar
  2297 ;; This function uses a non-reentrant model
  2298 ;;
  2299                           
  2300     03CB                     _lcd_write4Bit:	
  2301                           ;psect for function _lcd_write4Bit
  2302                           
  2303                           
  2304                           ;incstack = 0
  2305                           ; Regs used in _lcd_write4Bit: [wreg+status,2+status,0+pclath+cstack]
  2306                           ;lcd_write4Bit@nibble stored from wreg
  2307     03CB  00F3               	movwf	lcd_write4Bit@nibble
  2308     03CC                     l1094:
  2309                           
  2310                           ;i2c.c: 95:     nibble |= RS;
  2311     03CC  087D               	movf	_RS,w
  2312     03CD  00F2               	movwf	??_lcd_write4Bit
  2313     03CE  0872               	movf	??_lcd_write4Bit,w
  2314     03CF  04F3               	iorwf	lcd_write4Bit@nibble,f
  2315     03D0                     l1096:
  2316                           
  2317                           ;i2c.c: 96:     io_expanderWrite(nibble | 0x04);
  2318     03D0  0873               	movf	lcd_write4Bit@nibble,w
  2319     03D1  3804               	iorlw	4
  2320     03D2  120A  118A  2435  120A  118A  	fcall	_io_expanderWrite
  2321     03D7                     l1098:
  2322                           
  2323                           ;i2c.c: 97:     io_expanderWrite(nibble & 0xFB);
  2324     03D7  0873               	movf	lcd_write4Bit@nibble,w
  2325     03D8  39FB               	andlw	251
  2326     03D9  120A  118A  2435  120A  118A  	fcall	_io_expanderWrite
  2327                           
  2328                           ;i2c.c: 98:     _delay((unsigned long)((50)*(16000000/4000000.0)));
  2329     03DE  3042               	movlw	66
  2330     03DF  00F2               	movwf	??_lcd_write4Bit
  2331     03E0                     u307:
  2332     03E0  0BF2               	decfsz	??_lcd_write4Bit,f
  2333     03E1  2BE0               	goto	u307
  2334     03E2  0000               	nop
  2335     03E3                     l60:
  2336     03E3  0008               	return
  2337     03E4                     __end_of_lcd_write4Bit:
  2338                           
  2339                           	psect	text14
  2340     0435                     __ptext14:	
  2341 ;; *************** function _io_expanderWrite *****************
  2342 ;; Defined at:
  2343 ;;		line 87 in file "i2c.c"
  2344 ;; Parameters:    Size  Location     Type
  2345 ;;  data            1    wreg     unsigned char 
  2346 ;; Auto vars:     Size  Location     Type
  2347 ;;  data            1    1[COMMON] unsigned char 
  2348 ;; Return value:  Size  Location     Type
  2349 ;;                  1    wreg      void 
  2350 ;; Registers used:
  2351 ;;		wreg, status,2, status,0, pclath, cstack
  2352 ;; Tracked objects:
  2353 ;;		On entry : 0/0
  2354 ;;		On exit  : 0/0
  2355 ;;		Unchanged: 0/0
  2356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2357 ;;      Params:         0       0       0       0       0
  2358 ;;      Locals:         1       0       0       0       0
  2359 ;;      Temps:          0       0       0       0       0
  2360 ;;      Totals:         1       0       0       0       0
  2361 ;;Total ram usage:        1 bytes
  2362 ;; Hardware stack levels used: 1
  2363 ;; Hardware stack levels required when called: 2
  2364 ;; This function calls:
  2365 ;;		_i2c_masterStart
  2366 ;;		_i2c_masterStop
  2367 ;;		_i2c_masterWrite
  2368 ;; This function is called by:
  2369 ;;		_lcd_write4Bit
  2370 ;;		_backlight
  2371 ;;		_noBacklight
  2372 ;; This function uses a non-reentrant model
  2373 ;;
  2374                           
  2375     0435                     _io_expanderWrite:	
  2376                           ;psect for function _io_expanderWrite
  2377                           
  2378                           
  2379                           ;incstack = 0
  2380                           ; Regs used in _io_expanderWrite: [wreg+status,2+status,0+pclath+cstack]
  2381                           ;io_expanderWrite@data stored from wreg
  2382     0435  00F1               	movwf	io_expanderWrite@data
  2383     0436                     l1092:
  2384                           
  2385                           ;i2c.c: 88:     i2c_masterStart();
  2386     0436  120A  118A  2375  120A  118A  	fcall	_i2c_masterStart
  2387                           
  2388                           ;i2c.c: 89:     i2c_masterWrite(i2c_add);
  2389     043B  1283               	bcf	3,5	;RP0=0, select bank0
  2390     043C  1303               	bcf	3,6	;RP1=0, select bank0
  2391     043D  082E               	movf	_i2c_add,w
  2392     043E  120A  118A  2390  120A  118A  	fcall	_i2c_masterWrite
  2393                           
  2394                           ;i2c.c: 90:     i2c_masterWrite(data | backlight_state);
  2395     0443  0871               	movf	io_expanderWrite@data,w
  2396     0444  1283               	bcf	3,5	;RP0=0, select bank0
  2397     0445  1303               	bcf	3,6	;RP1=0, select bank0
  2398     0446  042F               	iorwf	_backlight_state,w
  2399     0447  120A  118A  2390  120A  118A  	fcall	_i2c_masterWrite
  2400                           
  2401                           ;i2c.c: 91:     i2c_masterStop();
  2402     044C  120A  118A  237E  120A  118A  	fcall	_i2c_masterStop
  2403     0451                     l57:
  2404     0451  0008               	return
  2405     0452                     __end_of_io_expanderWrite:
  2406                           
  2407                           	psect	text15
  2408     0390                     __ptext15:	
  2409 ;; *************** function _i2c_masterWrite *****************
  2410 ;; Defined at:
  2411 ;;		line 44 in file "i2c.c"
  2412 ;; Parameters:    Size  Location     Type
  2413 ;;  data            1    wreg     unsigned char 
  2414 ;; Auto vars:     Size  Location     Type
  2415 ;;  data            1    0[COMMON] unsigned char 
  2416 ;; Return value:  Size  Location     Type
  2417 ;;                  1    wreg      unsigned char 
  2418 ;; Registers used:
  2419 ;;		wreg, status,2, status,0, pclath, cstack
  2420 ;; Tracked objects:
  2421 ;;		On entry : 0/0
  2422 ;;		On exit  : 0/0
  2423 ;;		Unchanged: 0/0
  2424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2425 ;;      Params:         0       0       0       0       0
  2426 ;;      Locals:         1       0       0       0       0
  2427 ;;      Temps:          0       0       0       0       0
  2428 ;;      Totals:         1       0       0       0       0
  2429 ;;Total ram usage:        1 bytes
  2430 ;; Hardware stack levels used: 1
  2431 ;; Hardware stack levels required when called: 1
  2432 ;; This function calls:
  2433 ;;		_i2c_masterWait
  2434 ;; This function is called by:
  2435 ;;		_io_expanderWrite
  2436 ;;		_rtc_readTime
  2437 ;;		_rtc_readDate
  2438 ;; This function uses a non-reentrant model
  2439 ;;
  2440                           
  2441     0390                     _i2c_masterWrite:	
  2442                           ;psect for function _i2c_masterWrite
  2443                           
  2444                           
  2445                           ;incstack = 0
  2446                           ; Regs used in _i2c_masterWrite: [wreg+status,2+status,0+pclath+cstack]
  2447                           ;i2c_masterWrite@data stored from wreg
  2448     0390  00F0               	movwf	i2c_masterWrite@data
  2449     0391                     l1084:
  2450                           
  2451                           ;i2c.c: 45:     i2c_masterWait();
  2452     0391  120A  118A  23BE  120A  118A  	fcall	_i2c_masterWait
  2453     0396                     l1086:
  2454                           
  2455                           ;i2c.c: 46:     SSPBUF = data;
  2456     0396  0870               	movf	i2c_masterWrite@data,w
  2457     0397  1283               	bcf	3,5	;RP0=0, select bank0
  2458     0398  1303               	bcf	3,6	;RP1=0, select bank0
  2459     0399  0093               	movwf	19	;volatile
  2460     039A                     l1088:
  2461     039A                     l48:	
  2462                           ;i2c.c: 47:     return ACKSTAT;;	Return value of _i2c_masterWrite is never used
  2463                           
  2464     039A  0008               	return
  2465     039B                     __end_of_i2c_masterWrite:
  2466                           
  2467                           	psect	text16
  2468     037E                     __ptext16:	
  2469 ;; *************** function _i2c_masterStop *****************
  2470 ;; Defined at:
  2471 ;;		line 39 in file "i2c.c"
  2472 ;; Parameters:    Size  Location     Type
  2473 ;;		None
  2474 ;; Auto vars:     Size  Location     Type
  2475 ;;		None
  2476 ;; Return value:  Size  Location     Type
  2477 ;;                  1    wreg      void 
  2478 ;; Registers used:
  2479 ;;		wreg, status,2, status,0, pclath, cstack
  2480 ;; Tracked objects:
  2481 ;;		On entry : 0/0
  2482 ;;		On exit  : 0/0
  2483 ;;		Unchanged: 0/0
  2484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2485 ;;      Params:         0       0       0       0       0
  2486 ;;      Locals:         0       0       0       0       0
  2487 ;;      Temps:          0       0       0       0       0
  2488 ;;      Totals:         0       0       0       0       0
  2489 ;;Total ram usage:        0 bytes
  2490 ;; Hardware stack levels used: 1
  2491 ;; Hardware stack levels required when called: 1
  2492 ;; This function calls:
  2493 ;;		_i2c_masterWait
  2494 ;; This function is called by:
  2495 ;;		_io_expanderWrite
  2496 ;;		_rtc_readTime
  2497 ;;		_rtc_readDate
  2498 ;; This function uses a non-reentrant model
  2499 ;;
  2500                           
  2501     037E                     _i2c_masterStop:	
  2502                           ;psect for function _i2c_masterStop
  2503                           
  2504     037E                     l1080:	
  2505                           ;incstack = 0
  2506                           ; Regs used in _i2c_masterStop: [wreg+status,2+status,0+pclath+cstack]
  2507                           
  2508                           
  2509                           ;i2c.c: 40:     i2c_masterWait();
  2510     037E  120A  118A  23BE  120A  118A  	fcall	_i2c_masterWait
  2511     0383                     l1082:
  2512                           
  2513                           ;i2c.c: 41:     SSPCON2bits.PEN |= 1;
  2514     0383  1683               	bsf	3,5	;RP0=1, select bank1
  2515     0384  1303               	bcf	3,6	;RP1=0, select bank1
  2516     0385  1511               	bsf	17,2	;volatile
  2517     0386                     l45:
  2518     0386  0008               	return
  2519     0387                     __end_of_i2c_masterStop:
  2520                           
  2521                           	psect	text17
  2522     0375                     __ptext17:	
  2523 ;; *************** function _i2c_masterStart *****************
  2524 ;; Defined at:
  2525 ;;		line 23 in file "i2c.c"
  2526 ;; Parameters:    Size  Location     Type
  2527 ;;		None
  2528 ;; Auto vars:     Size  Location     Type
  2529 ;;		None
  2530 ;; Return value:  Size  Location     Type
  2531 ;;                  1    wreg      void 
  2532 ;; Registers used:
  2533 ;;		wreg, status,2, status,0, pclath, cstack
  2534 ;; Tracked objects:
  2535 ;;		On entry : 0/0
  2536 ;;		On exit  : 0/0
  2537 ;;		Unchanged: 0/0
  2538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2539 ;;      Params:         0       0       0       0       0
  2540 ;;      Locals:         0       0       0       0       0
  2541 ;;      Temps:          0       0       0       0       0
  2542 ;;      Totals:         0       0       0       0       0
  2543 ;;Total ram usage:        0 bytes
  2544 ;; Hardware stack levels used: 1
  2545 ;; Hardware stack levels required when called: 1
  2546 ;; This function calls:
  2547 ;;		_i2c_masterWait
  2548 ;; This function is called by:
  2549 ;;		_io_expanderWrite
  2550 ;;		_rtc_readTime
  2551 ;;		_rtc_readDate
  2552 ;; This function uses a non-reentrant model
  2553 ;;
  2554                           
  2555     0375                     _i2c_masterStart:	
  2556                           ;psect for function _i2c_masterStart
  2557                           
  2558     0375                     l1076:	
  2559                           ;incstack = 0
  2560                           ; Regs used in _i2c_masterStart: [wreg+status,2+status,0+pclath+cstack]
  2561                           
  2562                           
  2563                           ;i2c.c: 24:     i2c_masterWait();
  2564     0375  120A  118A  23BE  120A  118A  	fcall	_i2c_masterWait
  2565     037A                     l1078:
  2566                           
  2567                           ;i2c.c: 25:     SSPCON2bits.SEN |= 1;
  2568     037A  1683               	bsf	3,5	;RP0=1, select bank1
  2569     037B  1303               	bcf	3,6	;RP1=0, select bank1
  2570     037C  1411               	bsf	17,0	;volatile
  2571     037D                     l36:
  2572     037D  0008               	return
  2573     037E                     __end_of_i2c_masterStart:
  2574                           
  2575                           	psect	text18
  2576     03BE                     __ptext18:	
  2577 ;; *************** function _i2c_masterWait *****************
  2578 ;; Defined at:
  2579 ;;		line 16 in file "i2c.c"
  2580 ;; Parameters:    Size  Location     Type
  2581 ;;		None
  2582 ;; Auto vars:     Size  Location     Type
  2583 ;;		None
  2584 ;; Return value:  Size  Location     Type
  2585 ;;                  1    wreg      void 
  2586 ;; Registers used:
  2587 ;;		wreg, status,2
  2588 ;; Tracked objects:
  2589 ;;		On entry : 0/0
  2590 ;;		On exit  : 0/0
  2591 ;;		Unchanged: 0/0
  2592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2593 ;;      Params:         0       0       0       0       0
  2594 ;;      Locals:         0       0       0       0       0
  2595 ;;      Temps:          0       0       0       0       0
  2596 ;;      Totals:         0       0       0       0       0
  2597 ;;Total ram usage:        0 bytes
  2598 ;; Hardware stack levels used: 1
  2599 ;; This function calls:
  2600 ;;		Nothing
  2601 ;; This function is called by:
  2602 ;;		_i2c_masterStart
  2603 ;;		_i2c_masterRepeatedStart
  2604 ;;		_i2c_masterStop
  2605 ;;		_i2c_masterWrite
  2606 ;;		_i2c_readByte
  2607 ;;		_i2c_masterRead
  2608 ;; This function uses a non-reentrant model
  2609 ;;
  2610                           
  2611     03BE                     _i2c_masterWait:	
  2612                           ;psect for function _i2c_masterWait
  2613                           
  2614     03BE                     l1072:	
  2615                           ;incstack = 0
  2616                           ; Regs used in _i2c_masterWait: [wreg+status,2]
  2617                           
  2618     03BE                     l30:	
  2619                           ;i2c.c: 17:     while((SSPSTAT & 0b00000100) || (SSPCON2 & 0b00011111));
  2620                           
  2621     03BE  1683               	bsf	3,5	;RP0=1, select bank1
  2622     03BF  1303               	bcf	3,6	;RP1=0, select bank1
  2623     03C0  1914               	btfsc	20,2	;volatile
  2624     03C1  2BC3               	goto	u101
  2625     03C2  2BC4               	goto	u100
  2626     03C3                     u101:
  2627     03C3  2BBE               	goto	l30
  2628     03C4                     u100:
  2629     03C4                     l1074:
  2630     03C4  0811               	movf	17,w	;volatile
  2631     03C5  391F               	andlw	31
  2632     03C6  1D03               	btfss	3,2
  2633     03C7  2BC9               	goto	u111
  2634     03C8  2BCA               	goto	u110
  2635     03C9                     u111:
  2636     03C9  2BBE               	goto	l30
  2637     03CA                     u110:
  2638     03CA                     l33:
  2639     03CA  0008               	return
  2640     03CB                     __end_of_i2c_masterWait:
  2641                           
  2642                           	psect	text19
  2643     03A6                     __ptext19:	
  2644 ;; *************** function _i2c_masterInit *****************
  2645 ;; Defined at:
  2646 ;;		line 7 in file "i2c.c"
  2647 ;; Parameters:    Size  Location     Type
  2648 ;;		None
  2649 ;; Auto vars:     Size  Location     Type
  2650 ;;		None
  2651 ;; Return value:  Size  Location     Type
  2652 ;;                  1    wreg      void 
  2653 ;; Registers used:
  2654 ;;		wreg, status,2, status,0
  2655 ;; Tracked objects:
  2656 ;;		On entry : 0/0
  2657 ;;		On exit  : 0/0
  2658 ;;		Unchanged: 0/0
  2659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2660 ;;      Params:         0       0       0       0       0
  2661 ;;      Locals:         0       0       0       0       0
  2662 ;;      Temps:          0       0       0       0       0
  2663 ;;      Totals:         0       0       0       0       0
  2664 ;;Total ram usage:        0 bytes
  2665 ;; Hardware stack levels used: 1
  2666 ;; This function calls:
  2667 ;;		Nothing
  2668 ;; This function is called by:
  2669 ;;		_main
  2670 ;; This function uses a non-reentrant model
  2671 ;;
  2672                           
  2673     03A6                     _i2c_masterInit:	
  2674                           ;psect for function _i2c_masterInit
  2675                           
  2676     03A6                     l1130:	
  2677                           ;incstack = 0
  2678                           ; Regs used in _i2c_masterInit: [wreg+status,2+status,0]
  2679                           
  2680                           
  2681                           ;i2c.c: 8:     SSPCONbits.SSPM |= 0b1000;
  2682     03A6  3008               	movlw	8
  2683     03A7  1283               	bcf	3,5	;RP0=0, select bank0
  2684     03A8  1303               	bcf	3,6	;RP1=0, select bank0
  2685     03A9  0494               	iorwf	20,f	;volatile
  2686     03AA                     l1132:
  2687                           
  2688                           ;i2c.c: 9:     SSPCONbits.SSPEN |= 1;
  2689     03AA  1694               	bsf	20,5	;volatile
  2690     03AB                     l1134:
  2691                           
  2692                           ;i2c.c: 10:     SSPCON2 &= 0x00;
  2693     03AB  1683               	bsf	3,5	;RP0=1, select bank1
  2694     03AC  1303               	bcf	3,6	;RP1=0, select bank1
  2695     03AD  0191               	clrf	17	;volatile
  2696     03AE                     l1136:
  2697                           
  2698                           ;i2c.c: 12:     SSPSTAT &= 0x00;
  2699     03AE  0194               	clrf	20	;volatile
  2700     03AF                     l1138:
  2701                           
  2702                           ;i2c.c: 13:     SSPADD = ((16000000/4)/10000)-1;
  2703     03AF  308F               	movlw	143
  2704     03B0  0093               	movwf	19	;volatile
  2705     03B1                     l27:
  2706     03B1  0008               	return
  2707     03B2                     __end_of_i2c_masterInit:
  2708     007E                     btemp	set	126	;btemp
  2709     007E                     wtemp0	set	126
  2710                           
  2711                           	psect	idloc
  2712                           
  2713                           ;Config register IDLOC0 @ 0x2000
  2714                           ;	unspecified, using default values
  2715     2000                     	org	8192
  2716     2000  3FFF               	dw	16383
  2717                           
  2718                           ;Config register IDLOC1 @ 0x2001
  2719                           ;	unspecified, using default values
  2720     2001                     	org	8193
  2721     2001  3FFF               	dw	16383
  2722                           
  2723                           ;Config register IDLOC2 @ 0x2002
  2724                           ;	unspecified, using default values
  2725     2002                     	org	8194
  2726     2002  3FFF               	dw	16383
  2727                           
  2728                           ;Config register IDLOC3 @ 0x2003
  2729                           ;	unspecified, using default values
  2730     2003                     	org	8195
  2731     2003  3FFF               	dw	16383
  2732                           
  2733                           	psect	config
  2734                           
  2735                           ;Config register CONFIG1 @ 0x2007
  2736                           ;	Oscillator Selection bits
  2737                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2738                           ;	Watchdog Timer Enable bit
  2739                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2740                           ;	Power-up Timer Enable bit
  2741                           ;	PWRTE = ON, PWRT enabled
  2742                           ;	RE3/MCLR pin function select bit
  2743                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  2744                           ;	Code Protection bit
  2745                           ;	CP = OFF, Program memory code protection is disabled
  2746                           ;	Data Code Protection bit
  2747                           ;	CPD = OFF, Data memory code protection is disabled
  2748                           ;	Brown Out Reset Selection bits
  2749                           ;	BOREN = ON, BOR enabled
  2750                           ;	Internal External Switchover bit
  2751                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2752                           ;	Fail-Safe Clock Monitor Enabled bit
  2753                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2754                           ;	Low Voltage Programming Enable bit
  2755                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2756                           ;	In-Circuit Debugger Mode bit
  2757                           ;	DEBUG = 0x1, unprogrammed default
  2758     2007                     	org	8199
  2759     2007  23E4               	dw	9188
  2760                           
  2761                           ;Config register CONFIG2 @ 0x2008
  2762                           ;	Brown-out Reset Selection bit
  2763                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2764                           ;	Flash Program Memory Self Write Enable bits
  2765                           ;	WRT = OFF, Write protection off
  2766     2008                     	org	8200
  2767     2008  3FFF               	dw	16383

Data Sizes:
    Strings     31
    Constant    0
    Data        1
    BSS         15
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80      0      16
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_writeString@str	PTR unsigned char  size(1) Largest target is 13
		 -> STR_7(CODE[2]), STR_6(CODE[2]), STR_5(CODE[7]), STR_4(CODE[2]), 
		 -> STR_3(CODE[2]), STR_2(CODE[7]), STR_1(CODE[13]), 


Critical Paths under _main in COMMON

    _main->_lcd_init
    _rtc_readTime->_i2c_readByte
    _rtc_readDate->_i2c_readByte
    _lcd_writeString->_lcd_writeChar
    _lcd_writeChar->_lcd_write4Bit
    _lcd_setCursor->_lcd_cmd
    _lcd_init->_lcd_cmd
    _lcd_clear->_lcd_cmd
    _lcd_cmd->_lcd_write4Bit
    _lcd_write4Bit->_io_expanderWrite
    _io_expanderWrite->_i2c_masterWrite

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1776
                                             10 COMMON     3     3      0
                     _i2c_masterInit
                          _lcd_clear
                           _lcd_init
                      _lcd_setCursor
                      _lcd_writeChar
                    _lcd_writeString
                _rtc_convLowerNibble
                _rtc_convUpperNibble
                       _rtc_readDate
                       _rtc_readTime
 ---------------------------------------------------------------------------------
 (1) _rtc_readTime                                         3     3      0     155
                                              2 COMMON     3     3      0
            _i2c_masterRepeatedStart
                    _i2c_masterStart
                     _i2c_masterStop
                    _i2c_masterWrite
                       _i2c_readByte
 ---------------------------------------------------------------------------------
 (1) _rtc_readDate                                         3     3      0     177
                                              2 COMMON     3     3      0
            _i2c_masterRepeatedStart
                    _i2c_masterStart
                     _i2c_masterStop
                    _i2c_masterWrite
                       _i2c_readByte
 ---------------------------------------------------------------------------------
 (2) _i2c_readByte                                         2     2      0      45
                                              0 COMMON     2     2      0
                     _i2c_masterWait
 ---------------------------------------------------------------------------------
 (2) _i2c_masterRepeatedStart                              0     0      0       0
                     _i2c_masterWait
 ---------------------------------------------------------------------------------
 (1) _rtc_convUpperNibble                                  2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _rtc_convLowerNibble                                  1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _lcd_writeString                                      3     3      0     454
                                              6 COMMON     3     3      0
                      _lcd_writeChar
 ---------------------------------------------------------------------------------
 (2) _lcd_writeChar                                        2     2      0     133
                                              4 COMMON     2     2      0
                      _lcd_write4Bit
 ---------------------------------------------------------------------------------
 (1) _lcd_setCursor                                        2     1      1     525
                                              6 COMMON     2     1      1
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             4     4      0     155
                                              6 COMMON     4     4      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_clear                                            1     1      0     133
                                              6 COMMON     1     1      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              2     2      0     133
                                              4 COMMON     2     2      0
                      _lcd_write4Bit
 ---------------------------------------------------------------------------------
 (3) _lcd_write4Bit                                        2     2      0      89
                                              2 COMMON     2     2      0
                   _io_expanderWrite
 ---------------------------------------------------------------------------------
 (4) _io_expanderWrite                                     1     1      0      44
                                              1 COMMON     1     1      0
                    _i2c_masterStart
                     _i2c_masterStop
                    _i2c_masterWrite
 ---------------------------------------------------------------------------------
 (2) _i2c_masterWrite                                      1     1      0      22
                                              0 COMMON     1     1      0
                     _i2c_masterWait
 ---------------------------------------------------------------------------------
 (2) _i2c_masterStop                                       0     0      0       0
                     _i2c_masterWait
 ---------------------------------------------------------------------------------
 (2) _i2c_masterStart                                      0     0      0       0
                     _i2c_masterWait
 ---------------------------------------------------------------------------------
 (3) _i2c_masterWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _i2c_masterInit                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _i2c_masterInit
   _lcd_clear
     _lcd_cmd
       _lcd_write4Bit
         _io_expanderWrite
           _i2c_masterStart
             _i2c_masterWait
           _i2c_masterStop
             _i2c_masterWait
           _i2c_masterWrite
             _i2c_masterWait
   _lcd_init
     _lcd_cmd
   _lcd_setCursor
     _lcd_cmd
   _lcd_writeChar
     _lcd_write4Bit
   _lcd_writeString
     _lcd_writeChar
   _rtc_convLowerNibble
   _rtc_convUpperNibble
   _rtc_readDate
     _i2c_masterRepeatedStart
       _i2c_masterWait
     _i2c_masterStart
     _i2c_masterStop
     _i2c_masterWrite
     _i2c_readByte
       _i2c_masterWait
   _rtc_readTime
     _i2c_masterRepeatedStart
     _i2c_masterStart
     _i2c_masterStop
     _i2c_masterWrite
     _i2c_readByte

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      10       5       20.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1E      12        0.0%
ABS                  0      0      1E       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sat Apr 29 20:05:16 2023

            _rtc_convUpperNibble 03B2                                pc 0002                   ?_lcd_setCursor 0076  
                             l30 03BE                               l33 03CA                               l42 038F  
                             l27 03B1                               l51 0474                               l36 037D  
                             l60 03E3                               l45 0386                               l54 052F  
                             l63 03FD                               l48 039A                               l72 0499  
                             l57 0451                               l66 0418                               l93 03A5  
                             l78 0434                               _RS 007D                               fsr 0004  
                            l171 0374                              l180 05D5                              l190 06AD  
                            l168 03BD                              l188 0667                              u100 03C4  
                            u101 03C3                              u110 03CA                              u111 03C9  
                            u120 0470                              u121 046D                              u150 0499  
                            u135 03F0                              u207 04A3                              u151 0498  
                            u160 041F                              u217 04B1                              u161 041E  
                            u145 040B                              u170 042D                              u307 03E0  
                            u227 04C0                              u171 042C                              u237 04CF  
                            u247 04DE                              u257 04EF                              u185 03B6  
                            u267 0502                              u277 0515                              u197 06D5  
                            u287 0528                              u297 03A3                              _day 0026  
                            _min 002A                              _sec 002C                              fsr0 0004  
           ?_rtc_convUpperNibble 0070                             l1100 0387                             l1102 038C  
                           l1110 0464                             l1120 03E5                             l1112 0469  
                           l1104 0453                             l1200 05D7                             l1130 03A6  
                           l1122 03E6                             l1114 0470                             l1106 0458  
                           l1202 05D8                             l1210 0697                             l1132 03AA  
                           l1124 03ED                             l1140 049B                             l1220 0371  
                           l1116 0473                             l1108 0460                             l1204 0608  
                           l1300 076E                             l1134 03AB                             l1150 04D4  
                           l1142 04A7                             l1126 03FF                             l1206 0638  
                           l1310 07A3                             l1302 077B                             l1136 03AE  
                           l1072 03BE                             l1080 037E                             l1160 050F  
                           l1152 04DA                             l1144 04AD                             l1128 0401  
                           l1216 03B3                             l1320 07D6                             l1312 07A9  
                           l1304 0783                             l1138 03AF                             l1074 03C4  
                           l1082 0383                             l1162 0522                             l1154 04E9  
                           l1146 04BC                             l1170 048C                             l1314 07B6  
                           l1306 0789                             l1250 06B4                             l1076 0375  
                           l1084 0391                             l1092 0436                             l1180 039B  
                           l1156 04F6                             l1148 04C5                             l1172 041A  
                           l1164 0476                             l1316 07C3                             l1308 0796  
                           l1260 06C9                             l1252 06B5                             l1078 037A  
                           l1086 0396                             l1094 03CC                             l1182 03A1  
                           l1158 0509                             l1174 041F                             l1166 0479  
                           l1190 0592                             l1318 07C9                             l1270 06EF  
                           l1262 06CF                             l1254 06B6                             l1088 039A  
                           l1096 03D0                             l1176 0427                             l1168 0486  
                           l1184 0531                             l1280 070D                             l1272 06F5  
                           l1264 06DC                             l1256 06BB                             l1248 06AE  
                           l1098 03D7                             l1178 042D                             l1362 05CA  
                           l1186 0532                             l1194 05C2                             l1290 073B  
                           l1282 0713                             l1274 06FB                             l1266 06E1  
                           l1258 06C1                             l1364 069F                             l1188 0562  
                           l1292 0741                             l1284 071B                             l1276 0701  
                           l1268 06E9                             l1294 074E                             l1286 0721  
                           l1278 0707                             l1296 075B                             l1288 072E  
                           l1298 0761                             STR_1 0009                             STR_2 0016  
                           STR_3 0026                             STR_4 0026                             STR_5 001D  
                           STR_6 0024                             STR_7 0024          _i2c_masterRepeatedStart 0387  
                 ?_lcd_write4Bit 0070                             _date 0024                             _main 06AE  
                           _hour 0028                             _year 0020                    ?_i2c_readByte 0070  
                           btemp 007E                   ?_lcd_writeChar 0070                             start 0000  
                _backlight_state 002F                lcd_writeChar@data 0075                            ?_main 0070  
               lcd_writeString@i 0076            ??_rtc_convUpperNibble 0070                  __end_of_lcd_cmd 03FE  
                 _i2c_masterInit 03A6          __end_of_lcd_writeString 049A                   _i2c_masterWait 03BE  
                 _i2c_masterStop 037E                            _month 0022                            pclath 000A  
                 ??_i2c_readByte 0070                            status 0003                            wtemp0 007E  
   rtc_readDate@calendar_address 0074                  __initialization 07E7                  ??_lcd_setCursor 0077  
                   __end_of_main 07E7                           ??_main 007A           __end_of_i2c_masterInit 03B2  
         __end_of_i2c_masterWait 03CB           __end_of_i2c_masterStop 0387        ??_i2c_masterRepeatedStart 0070  
                ??_lcd_write4Bit 0072                  ??_lcd_writeChar 0074                           _OSCCON 008F  
                         _SSPADD 0093                           _SSPBUF 0013                 __end_of_lcd_init 0530  
                _i2c_masterStart 0375                  _i2c_masterWrite 0390                        ??_lcd_cmd 0074  
           io_expanderWrite@data 0071                  ?_i2c_masterInit 0070                  ?_i2c_masterWait 0070  
                ?_i2c_masterStop 0070                 ?_lcd_writeString 0070                 _io_expanderWrite 0435  
        __end_of__initialization 07FC                   __pcstackCOMMON 0070                     __pidataBANK0 036F  
               lcd_setCursor@col 0076                 lcd_setCursor@row 0077      __end_of_rtc_convLowerNibble 0375  
           __end_of_i2c_readByte 0475                       __pbssBANK0 0020          __end_of_i2c_masterStart 037E  
        __end_of_i2c_masterWrite 039B                       __pmaintext 06AE                          _ACKSTAT 048E  
       rtc_convUpperNibble@digit 0071                          _SSPCON2 0091                        ?_lcd_init 0070  
                        _SSPSTAT 0094                       __stringtab 0003               lcd_writeString@str 0078  
                        _i2c_add 002E                __end_of_lcd_clear 03A6                  lcd_init@i2c_Add 0079  
    __end_of_rtc_convUpperNibble 03BE                          __ptext1 0530                          __ptext2 05D6  
                        __ptext3 0452                          __ptext4 0387                          __ptext5 03B2  
                        __ptext6 0370                          __ptext7 0475                          __ptext8 03FE  
                        __ptext9 0419                          _lcd_cmd 03E4                       ??_lcd_init 0076  
           end_of_initialization 07FC                  i2c_readByte@ack 0070                 ?_i2c_masterStart 0070  
               ?_i2c_masterWrite 0070         __end_of_io_expanderWrite 0452            __end_of_lcd_setCursor 0435  
                  ?_rtc_readDate 0070                    ?_rtc_readTime 0070                 ??_i2c_masterInit 0070  
               ??_i2c_masterWait 0070                 ??_i2c_masterStop 0070                        _TRISCbits 0087  
                     lcd_cmd@cmd 0075            __end_of_lcd_write4Bit 03E4            __end_of_lcd_writeChar 0419  
                   _i2c_readByte 0452                   ??_rtc_readDate 0072                   ??_rtc_readTime 0072  
       ?_i2c_masterRepeatedStart 0070              start_initialization 07E7                      __pdataBANK0 002F  
                    __pbssCOMMON 007D                        ___latbits 0002                        __pnvBANK0 002E  
__end_of_i2c_masterRepeatedStart 0390                        _lcd_clear 039B                        __pstrings 0003  
                       ?_lcd_cmd 0070             __end_of_rtc_readDate 06AE             __end_of_rtc_readTime 05D6  
              ??_lcd_writeString 0076                ?_io_expanderWrite 0070                       ?_lcd_clear 0070  
             ??_io_expanderWrite 0071                      __stringbase 0008              lcd_write4Bit@nibble 0073  
      i2c_readByte@incoming_data 0071               __end_of__stringtab 0009                         __ptext10 049A  
                       __ptext11 039B                         __ptext12 03E4                         __ptext13 03CB  
                       __ptext14 0435                         __ptext15 0390                         __ptext16 037E  
                       __ptext17 0375                         __ptext18 03BE                         __ptext19 03A6  
                       _lcd_init 049A              _rtc_convLowerNibble 0370              i2c_masterWrite@data 0070  
                    ??_lcd_clear 0076             ?_rtc_convLowerNibble 0070                        stringcode 0003  
                   _rtc_readDate 05D6        rtc_readTime@clock_address 0074                    _lcd_setCursor 0419  
                   _rtc_readTime 0530                ??_i2c_masterStart 0070                ??_i2c_masterWrite 0070  
                       stringdir 0003                         stringtab 0003         rtc_convLowerNibble@digit 0070  
          ??_rtc_convLowerNibble 0070                      _SSPCON2bits 0091                  _lcd_writeString 0475  
                  _lcd_write4Bit 03CB                       _SSPCONbits 0014                    _lcd_writeChar 03FE  
